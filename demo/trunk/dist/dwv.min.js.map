{"version":3,"file":"dwv.min.js","mappings":"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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCS,eAAgB,CACdixmCU,WAAY,CACVZ,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/modalityLut.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/image/windowLevel.js","webpack://dwv/./src/image/voiLut.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataElement.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/math/orientation.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/dicom/dicomDate.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js","webpack://dwv/./src/dicom/dicomCode.js","webpack://dwv/./src/dicom/dicomSegment.js","webpack://dwv/./src/dicom/dicomSegmentFrameInfo.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/gui/overlayData.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/tools/drawTrash.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/app/defaults.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/dicom/dicomMeasuredValue.js","webpack://dwv/./src/dicom/dicomNumericMeasurement.js","webpack://dwv/./src/dicom/dicomSopInstanceReference.js","webpack://dwv/./src/dicom/dicomImageReference.js","webpack://dwv/./src/dicom/dicomSpatialCoordinate.js","webpack://dwv/./src/dicom/dicomSpatialCoordinate3D.js","webpack://dwv/./src/dicom/dicomSRContent.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/image/deleteSegmentCommand.js","webpack://dwv/./src/image/changeSegmentColourCommand.js","webpack://dwv/./src/image/maskSegmentViewHelper.js","webpack://dwv/./src/math/scalar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__654__, __WEBPACK_EXTERNAL_MODULE__324__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__654__;","module.exports = __WEBPACK_EXTERNAL_MODULE__944__;","module.exports = __WEBPACK_EXTERNAL_MODULE__324__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\n   *\n   * @param {number[]} [dims] Optional list of dimensions to use.\n   * @returns {string} The string id.\n   */\n  toStringId(dims) {\n    if (typeof dims === 'undefined') {\n      dims = [];\n      for (let j = 0; j < this.length(); ++j) {\n        dims.push(j);\n      }\n    }\n    for (let ii = 0; ii < dims.length; ++ii) {\n      if (dims[ii] >= this.length()) {\n        throw new Error('Non valid dimension for toStringId.');\n      }\n    }\n    let res = '';\n    for (let i = 0; i < dims.length; ++i) {\n      if (i !== 0) {\n        res += '_';\n      }\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\n    }\n    return res;\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n\n/**\n * Get an index from an id string in the form of: '#0-1_#1-2'\n * (result of index.toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Index} The corresponding index (minimum size is 3D).\n */\nexport function getIndexFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index (minimum 3)\n  let numberOfDims = 3;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    // expecting dim < 10\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    // dim is zero based\n    if (dim + 1 > numberOfDims) {\n      numberOfDims = dim + 1;\n    }\n  }\n  // default values\n  const values = new Array(numberOfDims);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    // expecting dim < 10\n    dim = parseInt(strIds[j].substring(1, 2), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n\n  return new Index(values);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Modality LUT class: compensates for any modality-specific presentation.\n * Typically consists of a rescale slope and intercept to\n * rescale the data range.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.html}.\n */\nexport class ModalityLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * Is the RSI an identity one.\n   *\n   * @type {boolean}\n   */\n  #isIdRsi;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * The internal LUT array.\n   *\n   * @type {Float32Array}\n   */\n  #lut;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#isIdRsi = rsi.isID();\n\n    this.#length = Math.pow(2, bitsStored);\n\n    // create lut if not identity RSI\n    if (!this.#isIdRsi) {\n      this.#lut = new Float32Array(this.#length);\n      for (let i = 0; i < this.#length; ++i) {\n        this.#lut[i] = this.#rsi.apply(i);\n      }\n    }\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   or full range for ID rescale.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#isIdRsi ? offset : this.#lut[offset];\n  }\n\n} // class ModalityLut\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","import {logger} from '../utils/logger';\n\n/**\n * Minimum window width value.\n *\n * Ref: {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html#sect_C.11.2.1.2}.\n */\nconst minWindowWidth = 1;\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < minWindowWidth ? minWindowWidth : value;\n}\n\n/**\n * Window and Level also known as window width and center.\n */\nexport class WindowLevel {\n  /**\n   * The window center.\n   *\n   * @type {number}\n   */\n  center;\n\n  /**\n   * The window width.\n   *\n   * @type {number}\n   */\n  width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < minWindowWidth) {\n      logger.warn('Using minimum window width since input is not valid: ' +\n        width);\n      width = minWindowWidth;\n    }\n    this.center = center;\n    this.width = width;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {WindowLevel} rhs The other object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.center === rhs.center &&\n      this.width === rhs.width;\n  }\n\n} // WindowLevel class\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, WindowLevel>>}\n */\nexport const defaultPresets = {\n  CT: {\n    mediastinum: new WindowLevel(40, 400),\n    lung: new WindowLevel(-500, 1500),\n    bone: new WindowLevel(500, 2000),\n    brain: new WindowLevel(40, 80),\n    head: new WindowLevel(90, 350)\n  }\n};\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLevel} from './windowLevel';\n/* eslint-enable no-unused-vars */\n\n/**\n * VOI (Values of Interest) LUT class: apply window centre and width.\n *\n * ```\n * if (x <= c - 0.5 - (w-1)/2) then y = ymin\n * else if (x > c - 0.5 + (w-1)/2) then y = ymax\n * else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * ```\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html}.\n */\nexport class VoiLut {\n\n  /**\n   * The window and level.\n   *\n   * @type {WindowLevel}\n   */\n  #windowLevel;\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * @param {WindowLevel} wl The window center and width.\n   */\n  constructor(wl) {\n    this.#windowLevel = wl;\n    this.#init();\n  }\n\n  /**\n   * Get the window and level.\n   *\n   * @returns {WindowLevel} The window center and width.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const center = this.#windowLevel.center;\n    const width = this.#windowLevel.width;\n    const c = center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((width - 1) / 2);\n    this.#xmax = c - 0.5 + ((width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (width - 1);\n    this.#inter = (-(c - 0.5) / (width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return (value * this.#slope) + this.#inter;\n    }\n  }\n\n} // class VoiLut\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {ModalityLut} from './modalityLut';\nimport {VoiLut} from './voiLut';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class: combines a modality LUT and a VOI LUT.\n */\nexport class WindowLut {\n\n  /**\n   * The modality LUT.\n   *\n   * @type {ModalityLut}\n   */\n  #modalityLut;\n\n  /**\n   * The VOI LUT.\n   *\n   * @type {VoiLut}\n   */\n  #voiLut;\n\n  /**\n   * The internal LUT array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * Is the RSI discrete.\n   *\n   * @type {boolean}\n   */\n  #isDiscrete = true;\n\n  /**\n   * Construct a window LUT object, VOI LUT is set with\n   *   the 'setVoiLut' method.\n   *\n   * @param {ModalityLut} modalityLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   * @param {boolean} isDiscrete Flag to know if the input data is discrete.\n   */\n  constructor(modalityLut, isSigned, isDiscrete) {\n    this.#modalityLut = modalityLut;\n\n    if (isSigned) {\n      const size = this.#modalityLut.getLength();\n      this.#signedShift = size / 2;\n    } else {\n      this.#signedShift = 0;\n    }\n\n    this.#isDiscrete = isDiscrete;\n  }\n\n  /**\n   * Get the VOI LUT.\n   *\n   * @returns {VoiLut} The VOI LUT.\n   */\n  getVoiLut() {\n    return this.#voiLut;\n  }\n\n  /**\n   * Get the modality LUT.\n   *\n   * @returns {ModalityLut} The modality LUT.\n   */\n  getModalityLut() {\n    return this.#modalityLut;\n  }\n\n  /**\n   * Set the VOI LUT.\n   *\n   * @param {VoiLut} lut The VOI LUT.\n   */\n  setVoiLut(lut) {\n    // store the window values\n    this.#voiLut = lut;\n\n    // possible signed shift (LUT indices are positive)\n    this.#voiLut.setSignedOffset(\n      this.#modalityLut.getRSI().getSlope() * this.#signedShift);\n\n    // create lut if not continous\n    if (this.#isDiscrete) {\n      const size = this.#modalityLut.getLength();\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n      // by default WindowLevel returns a value in the [0,255] range\n      // this is ok with regular Arrays and ClampedArray.\n      for (let i = 0; i < size; ++i) {\n        this.#lut[i] = this.#voiLut.apply(this.#modalityLut.getValue(i));\n      }\n    }\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   for discrete data or full range for non discrete.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    if (this.#isDiscrete) {\n      return this.#lut[offset + this.#signedShift];\n    } else {\n      return Math.floor(this.#voiLut.apply(offset + this.#signedShift));\n    }\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {number[]} The LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values,\n *   otherwise return 0 for the first third and\n *   lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values,\n *   otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n/**\n * Colour map: red, green and blue components\n *   to associate with intensity values.\n */\nexport class ColourMap {\n  /**\n   * Red component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  red;\n  /**\n   * Green component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  green;\n  /**\n   * Blue component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  blue;\n\n  /**\n   * @param {number[]} red Red component.\n   * @param {number[]} green Green component.\n   * @param {number[]} blue Blue component.\n   */\n  constructor(red, green, blue) {\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n  }\n}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, ColourMap>}\n */\nexport const luts = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable @stylistic/js/max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable @stylistic/js/max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet\n  /* eslint-disable @stylistic/js/max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot metal blue\n  /* eslint-disable @stylistic/js/max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet 20 step\n  /* eslint-disable @stylistic/js/max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable @stylistic/js/max-len */\n};\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * RGB colour class.\n */\nexport class RGB {\n  /**\n   * Red component.\n   *\n   * @type {number}\n   */\n  r;\n  /**\n   * Green component.\n   *\n   * @type {number}\n   */\n  g;\n  /**\n   * Blue component.\n   *\n   * @type {number}\n   */\n  b;\n  /**\n   * @param {number} r Red component.\n   * @param {number} g Green component.\n   * @param {number} b Blue component.\n   */\n  constructor(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n}\n\n// black rgb\nexport const BLACK = {r: 0, g: 0, b: 0};\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {RGB} c1 The first colour.\n * @param {RGB} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.2},\n * - {@link https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion}.\n *\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {RGB} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {RGB} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {RGB} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ}.\n *\n * @param {RGB} rgb RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgb) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgb.r * 0.001172549 +\n    rgb.g * 0.002301961 +\n    rgb.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {l,a,b} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/Illuminant_D65}.\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ}.\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ}.\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {Vector3D} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY() &&\n      this.#z === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.#x +\n      ', ' + this.#y +\n      ', ' + this.#z + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.#x * this.#x) +\n      (this.#y * this.#y) +\n      (this.#z * this.#z)\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Cross_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.#y * vector3D.getZ()) - (vector3D.getY() * this.#z),\n      (this.#z * vector3D.getX()) - (vector3D.getZ() * this.#x),\n      (this.#x * vector3D.getY()) - (vector3D.getX() * this.#y));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Dot_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.#x * vector3D.getX()) +\n      (this.#y * vector3D.getY()) +\n      (this.#z * vector3D.getZ());\n  }\n\n  /**\n   * Is this vector codirectional to an input one.\n   *\n   * @param {Vector3D} vector3D The vector to test.\n   * @returns {boolean} True if codirectional, false is opposite.\n   */\n  isCodirectional(vector3D) {\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    return this.dotProduct(vector3D) > 0;\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance,\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask.\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {number[]} values Row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number|undefined} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {number[]} array3D The input 3D array.\n   * @returns {number[]} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum.\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          //res.push(1);\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices},\n * - {@link https://github.com/willnode/N-Matrix-Programmer}.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#x + ', ' + this.#y + ')';\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY() &&\n      this.#z === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.#x, rhs.getX(), tol) &&\n      isSimilar(this.#y, rhs.getY(), tol) &&\n      isSimilar(this.#z, rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#x +\n      ', ' + this.#y +\n      ', ' + this.#z + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(this.#getSquaredDistance(point3D));\n  }\n\n  /**\n   * Get the square of the distance between this and\n   * an input point. Used for sorting.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} The square of the distance.\n   */\n  #getSquaredDistance(point3D) {\n    const dx = this.#x - point3D.getX();\n    const dy = this.#y - point3D.getY();\n    const dz = this.#z - point3D.getZ();\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  /**\n   * Get the closest point to this in a Point3D list.\n   *\n   * @param {Point3D[]} pointList The list to check.\n   * @returns {number} The index of the closest point in the input list.\n   */\n  getClosest(pointList) {\n    let minIndex = 0;\n    // the order between squared distances and distances is the same\n    let minDist = this.#getSquaredDistance(pointList[minIndex]);\n    for (let i = 0; i < pointList.length; ++i) {\n      const dist = this.#getSquaredDistance(pointList[i]);\n      if (dist < minDist) {\n        minIndex = i;\n        minDist = dist;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.#x - point3D.getX()),\n      (this.#y - point3D.getY()),\n      (this.#z - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string: `key0=val00&key0=val01&key1=val10\n *   will return `{key0 : [val00, val01], key1 : val1}`.\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {string[]} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'degree') {\n          valueStr += ' ';\n        }\n        valueStr += valueObj.unit;\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path.\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n *\n * Inspired from {@link https://stackoverflow.com/a/49729715/3639892}.\n *\n * Can be a solution to not have trailing zero as when\n *   using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Check if the first input array contains all the\n * elements of the second input array.\n *\n * @param {string[]} arr0 The test array.\n * @param {string[]} arr1 The elements to check in the first array.\n * @returns {boolean} True if all the elements of arr1 are included in arr0.\n */\nexport function arrayContains(arr0, arr1) {\n  // check input\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length === 0 ||\n    arr1.length === 0 ||\n    arr1.length > arr0.length) {\n    return false;\n  }\n  // check values\n  for (const itemArr1 of arr1) {\n    if (!arr0.includes(itemArr1)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: `arr.slice(start, end).find(callbackFn)`.\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/MIME#Multipart_messages}.\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *   {'Content-Type', ..., data} (depending on header tags).\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/MIME#Multipart_messages},\n * - {@link https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js}.\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","/* eslint-disable @stylistic/js/quote-props */\n/* eslint @stylistic/js/max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n *\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE',\n * - (vr) 'OB or OW' -> 'ox',\n * - (vr) 'US or SS' -> 'xs',\n * - (vr) 'US or OW' -> 'xx',\n * - (vr) 'US or SS or OW' -> 'xs',\n * - added 'GenericGroupLength' element to each group.\n *\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'.\n *\n * @type {Object<string, Object<string, string[]>>}\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {Object<string, string[]>} tags The tags to add as an\n *   object indexed by element key with values as:\n *   [VR, multiplicity, TagName] (all strings).\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n/**\n * Tag groups: key to name pairs.\n * Copied from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n * -> removed duplicates (commented).\n *\n * @type {Object<string, string>}\n */\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n/**\n * List of Value Representation (VR) with 32bit Value Length (VL).\n *\n * Added locally used 'ox'.\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1}.\n *\n * @type {Object<string, boolean>}\n */\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n/**\n * List of string VR with extended or replaced default character repertoire defined in\n *   Specific Character Set (0008,0005).\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2}.\n *\n * @type {Object<string, boolean>}\n */\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n/**\n * VR equivalent javascript types.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n *\n * @type {Object<string, string>}\n */\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n\n/**\n * Transfer syntaxes.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part06/chapter_A.html#table_A-1}.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxes = {\n  '1.2.840.10008.1.2': 'Implicit VR Little Endian',\n  '1.2.840.10008.1.2.1': 'Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.98': 'Encapsulated Uncompressed Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.99': 'Deflated Explicit VR Little Endian',\n  '1.2.840.10008.1.2.2': 'Explicit VR Big Endian (Retired)',\n  '1.2.840.10008.1.2.4.50': 'JPEG Baseline (Process 1)',\n  '1.2.840.10008.1.2.4.51': 'JPEG Extended (Process 2 & 4)',\n  '1.2.840.10008.1.2.4.52': 'JPEG Extended (Process 3 & 5) (Retired)',\n  '1.2.840.10008.1.2.4.53': 'JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)',\n  '1.2.840.10008.1.2.4.54': 'JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)',\n  '1.2.840.10008.1.2.4.55': 'JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)',\n  '1.2.840.10008.1.2.4.56': 'JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)',\n  '1.2.840.10008.1.2.4.57': 'JPEG Lossless, Non-Hierarchical (Process 14)',\n  '1.2.840.10008.1.2.4.58': 'JPEG Lossless, Non-Hierarchical (Process 15) (Retired)',\n  '1.2.840.10008.1.2.4.59': 'JPEG Extended, Hierarchical (Process 16 & 18) (Retired)',\n  '1.2.840.10008.1.2.4.60': 'JPEG Extended, Hierarchical (Process 17 & 19) (Retired)',\n  '1.2.840.10008.1.2.4.61': 'JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)',\n  '1.2.840.10008.1.2.4.62': 'JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)',\n  '1.2.840.10008.1.2.4.63': 'JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)',\n  '1.2.840.10008.1.2.4.64': 'JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)',\n  '1.2.840.10008.1.2.4.65': 'JPEG Lossless, Hierarchical (Process 28) (Retired)',\n  '1.2.840.10008.1.2.4.66': 'JPEG Lossless, Hierarchical (Process 29) (Retired)',\n  '1.2.840.10008.1.2.4.70': 'JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1])',\n  '1.2.840.10008.1.2.4.80': 'JPEG-LS Lossless Image Compression',\n  '1.2.840.10008.1.2.4.81': 'JPEG-LS Lossy (Near-Lossless) Image Compression',\n  '1.2.840.10008.1.2.4.90': 'JPEG 2000 Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.91': 'JPEG 2000 Image Compression',\n  '1.2.840.10008.1.2.4.92': 'JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.93': 'JPEG 2000 Part 2 Multi-component Image Compression',\n  '1.2.840.10008.1.2.4.94': 'JPIP Referenced',\n  '1.2.840.10008.1.2.4.95': 'JPIP Referenced Deflate',\n  '1.2.840.10008.1.2.4.100': 'MPEG2 Main Profile / Main Level',\n  '1.2.840.10008.1.2.4.101': 'MPEG2 Main Profile / High Level',\n  '1.2.840.10008.1.2.4.102': 'MPEG-4 AVC/H.264 High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.103': 'MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.104': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video',\n  '1.2.840.10008.1.2.4.105': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video',\n  '1.2.840.10008.1.2.4.106': 'MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2',\n  '1.2.840.10008.1.2.4.107': 'HEVC/H.265 Main Profile / Level 5.1',\n  '1.2.840.10008.1.2.4.108': 'HEVC/H.265 Main 10 Profile / Level 5.1',\n  '1.2.840.10008.1.2.5': 'RLE Lossless',\n  '1.2.840.10008.1.2.6.1': 'RFC 2557 MIME encapsulation (Retired)',\n  '1.2.840.10008.1.2.6.2': 'XML Encoding (Retired)',\n  '1.2.840.10008.1.2.7.1': 'SMPTE ST 2110-20 Uncompressed Progressive Active Video',\n  '1.2.840.10008.1.2.7.2': 'SMPTE ST 2110-20 Uncompressed Interlaced Active Video',\n  '1.2.840.10008.1.2.7.3': 'SMPTE ST 2110-30 PCM Digital Audio',\n  '1.2.840.10008.1.20': 'Papyrus 3 Implicit VR Little Endian (Retired)'\n};\n\n/**\n * Transfer syntaxes indexed by keyword.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxKeywords = {\n  ImplicitVRLittleEndian: '1.2.840.10008.1.2',\n  ExplicitVRLittleEndian: '1.2.840.10008.1.2.1',\n  EncapsulatedUncompressedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.98',\n  DeflatedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.99',\n  ExplicitVRBigEndian: '1.2.840.10008.1.2.2',\n  JPEGBaseline8Bit: '1.2.840.10008.1.2.4.50',\n  JPEGExtended12Bit: '1.2.840.10008.1.2.4.51',\n  JPEGExtended35: '1.2.840.10008.1.2.4.52',\n  JPEGSpectralSelectionNonHierarchical68: '1.2.840.10008.1.2.4.53',\n  JPEGSpectralSelectionNonHierarchical79: '1.2.840.10008.1.2.4.54',\n  JPEGFullProgressionNonHierarchical1012: '1.2.840.10008.1.2.4.55',\n  JPEGFullProgressionNonHierarchical1113: '1.2.840.10008.1.2.4.56',\n  JPEGLossless: '1.2.840.10008.1.2.4.57',\n  JPEGLosslessNonHierarchical15: '1.2.840.10008.1.2.4.58',\n  JPEGExtendedHierarchical1618: '1.2.840.10008.1.2.4.59',\n  JPEGExtendedHierarchical1719: '1.2.840.10008.1.2.4.60',\n  JPEGSpectralSelectionHierarchical2022: '1.2.840.10008.1.2.4.61',\n  JPEGSpectralSelectionHierarchical2123: '1.2.840.10008.1.2.4.62',\n  JPEGFullProgressionHierarchical2426: '1.2.840.10008.1.2.4.63',\n  JPEGFullProgressionHierarchical2527: '1.2.840.10008.1.2.4.64',\n  JPEGLosslessHierarchical28: '1.2.840.10008.1.2.4.65',\n  JPEGLosslessHierarchical29: '1.2.840.10008.1.2.4.66',\n  JPEGLosslessSV1: '1.2.840.10008.1.2.4.70',\n  JPEGLSLossless: '1.2.840.10008.1.2.4.80',\n  JPEGLSNearLossless: '1.2.840.10008.1.2.4.81',\n  JPEG2000Lossless: '1.2.840.10008.1.2.4.90',\n  JPEG2000: '1.2.840.10008.1.2.4.91',\n  JPEG2000MCLossless: '1.2.840.10008.1.2.4.92',\n  JPEG2000MC: '1.2.840.10008.1.2.4.93',\n  JPIPReferenced: '1.2.840.10008.1.2.4.94',\n  JPIPReferencedDeflate: '1.2.840.10008.1.2.4.95',\n  MPEG2MPML: '1.2.840.10008.1.2.4.100',\n  MPEG2MPHL: '1.2.840.10008.1.2.4.101',\n  MPEG4HP41: '1.2.840.10008.1.2.4.102',\n  MPEG4HP41BD: '1.2.840.10008.1.2.4.103',\n  MPEG4HP422D: '1.2.840.10008.1.2.4.104',\n  MPEG4HP423D: '1.2.840.10008.1.2.4.105',\n  MPEG4HP42STEREO: '1.2.840.10008.1.2.4.106',\n  HEVCMP51: '1.2.840.10008.1.2.4.107',\n  HEVCM10P51: '1.2.840.10008.1.2.4.108',\n  RLELossless: '1.2.840.10008.1.2.5',\n  RFC2557MIMEEncapsulation: '1.2.840.10008.1.2.6.1',\n  XMLEncoding: '1.2.840.10008.1.2.6.2',\n  SMPTEST211020UncompressedProgressiveActiveVideo: '1.2.840.10008.1.2.7.1',\n  SMPTEST211020UncompressedInterlacedActiveVideo: '1.2.840.10008.1.2.7.2',\n  SMPTEST211030PCMDigitalAudio: '1.2.840.10008.1.2.7.3',\n  Papyrus3ImplicitVRLittleEndian: '1.2.840.10008.1.20'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group: ' + group);\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element: ' + element);\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#group === rhs.getGroup() &&\n      this.#element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.#group + this.#element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.#group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this.#group === 'FFFE' &&\n      (this.#element === 'E000' ||\n      this.#element === 'E00D' ||\n      this.#element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   *\n   * See: {@link http://dicom.nema.org/medical/dicom/2022a/output/html/part05.html#sect_7.8}.\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this.#group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {string[]|undefined} The info as [vr, multiplicity, name].\n   */\n  #getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.#group] !== 'undefined' &&\n      typeof dictionary[this.#group][this.#element] !==\n        'undefined') {\n      info = dictionary[this.#group][this.#element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key: ' + key);\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {Tag|undefined} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data element.\n */\nexport class DataElement {\n  /**\n   * The element Value Representation.\n   *\n   * @type {string}\n   */\n  vr;\n  /**\n   * The element value.\n   *\n   * @type {Array}\n   */\n  value;\n\n  // [start] internal values\n  // only present during parsing or writing otherwise not set\n\n  /**\n   * The element dicom tag.\n   *\n   * @type {Tag}\n   */\n  tag;\n\n  /**\n   * The element Value Length.\n   *\n   * @type {number}\n   */\n  vl;\n\n  /**\n   * Flag to know if defined or undefined sequence length.\n   *\n   * @type {boolean}\n   */\n  undefinedLength;\n\n  /**\n   * The element start offset.\n   *\n   * @type {number}\n   */\n  startOffset;\n\n  /**\n   * The element end offset.\n   *\n   * @type {number}\n   */\n  endOffset;\n\n  /**\n   * The sequence items.\n   *\n   * @type {Array}\n   */\n  items;\n\n  // [end] internal values\n\n  /**\n   * @param {string} vr The element VR (Value Representation).\n   */\n  constructor(vr) {\n    this.vr = vr;\n  }\n}","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","import {Vector3D} from './vector';\nimport {\n  Matrix33,\n  getIdentityMat33\n} from './matrix';\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Default anatomical plane orientations.\n */\nexport const Orientation = {\n  /**\n   * Axial, also known as transverse.\n   */\n  Axial: 'axial',\n  /**\n   * Coronal, also known as frontal.\n   */\n  Coronal: 'coronal',\n  /**\n   * Sagittal, also known as anteroposterior.\n   */\n  Sagittal: 'sagittal'\n};\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix;\n  if (name === Orientation.Axial) {\n    matrix = getIdentityMat33();\n  } else if (name === Orientation.Coronal) {\n    matrix = getCoronalMat33();\n  } else if (name === Orientation.Sagittal) {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n\n/**\n * Get the orientation code of an orientation matrix. Each letter defines\n * the towards direction. Letters are: R (right), L (left),\n * A (anterior), P (posterior), I (inferior) and S (superior).\n *\n * @param {Matrix33} matrix The orientation matrix.\n * @returns {string} The orientation code.\n */\nexport function getOrientationStringLPS(matrix) {\n  const v0 = new Vector3D(\n    matrix.get(0, 0),\n    matrix.get(1, 0),\n    matrix.get(2, 0)\n  );\n  const v1 = new Vector3D(\n    matrix.get(0, 1),\n    matrix.get(1, 1),\n    matrix.get(2, 1)\n  );\n  const v2 = new Vector3D(\n    matrix.get(0, 2),\n    matrix.get(1, 2),\n    matrix.get(2, 2)\n  );\n  return getVectorStringLPS(v0) +\n    getVectorStringLPS(v1) +\n    getVectorStringLPS(v2);\n}\n\n/**\n * Get the orientation code of an orientation vector.\n * Credits: David Clunie, {@link https://www.dclunie.com/medical-image-faq/html/part2.html}.\n *\n * @param {Vector3D} vector The orientation vector.\n * @returns {string} The orientation code.\n */\nfunction getVectorStringLPS(vector) {\n  let abs = new Vector3D(\n    Math.abs(vector.getX()),\n    Math.abs(vector.getY()),\n    Math.abs(vector.getZ())\n  );\n\n  let orientation = '';\n  const orientationX = vector.getX() < 0 ? 'R' : 'L';\n  const orientationY = vector.getY() < 0 ? 'A' : 'P';\n  // as defined in DICOM\n  //const orientationZ = vector.getZ() < 0 ? 'F' : 'H';\n  const orientationZ = vector.getZ() < 0 ? 'I' : 'S';\n\n  const threshold = 0.0001;\n\n  for (let i = 0; i < 3; i++) {\n    if (abs.getX() > threshold &&\n      abs.getX() > abs.getY() &&\n      abs.getX() > abs.getZ()) {\n      orientation += orientationX;\n      abs = new Vector3D(0, abs.getY(), abs.getZ());\n    } else if (abs.getY() > threshold &&\n      abs.getY() > abs.getX() &&\n      abs.getY() > abs.getZ()) {\n      orientation += orientationY;\n      abs = new Vector3D(abs.getX(), 0, abs.getZ());\n    } else if (abs.getZ() > threshold &&\n      abs.getZ() > abs.getX() &&\n      abs.getZ() > abs.getY()) {\n      orientation += orientationZ;\n      abs = new Vector3D(abs.getX(), abs.getY(), 0);\n    } else {\n      break;\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Get the LPS 'group' (axial, coronal or sagittal) from a LPS code.\n *\n * @param {string} code The LPS code string.\n * @returns {string|undefined} The group.\n */\nexport function getLPSGroup(code) {\n  let orientStr;\n  const axialCodes = ['LPS', 'LAI', 'RPI', 'RAS'];\n  const coronalCodes = ['LSA', 'LIP', 'RSP', 'RIA'];\n  const sagittalCodes = ['PSL', 'PIR', 'ASR', 'AIL'];\n  if (axialCodes.includes(code)) {\n    orientStr = Orientation.Axial;\n  } else if (coronalCodes.includes(code)) {\n    orientStr = Orientation.Coronal;\n  } else if (sagittalCodes.includes(code)) {\n    orientStr = Orientation.Sagittal;\n  }\n  return orientStr;\n}\n\n/**\n * Get the orientation matrix associated to the direction cosines.\n *\n * @param {number[]} cosines The direction cosines.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationFromCosines(cosines) {\n  let orientationMatrix;\n  if (typeof cosines !== 'undefined' && cosines.length === 6) {\n    const rowCosines = new Vector3D(cosines[0], cosines[1], cosines[2]);\n    const colCosines = new Vector3D(cosines[3], cosines[4], cosines[5]);\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n  return orientationMatrix;\n}\n","import {\n  Tag,\n  getTransferSyntaxUIDTag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  transferSyntaxes,\n  transferSyntaxKeywords,\n  vrTypes,\n} from './dictionary';\nimport {DataElement} from './dataElement';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\nimport {\n  getOrientationFromCosines,\n  getOrientationStringLPS,\n  getLPSGroup\n} from '../math/orientation';\n\n/**\n * List of DICOM data elements indexed via a 8 character string formed from\n * the group and element numbers.\n *\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.34.0-beta.0';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n *   after the 128 bytes preamble.\n *\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part10/chapter_7.html#sect_7.1}.\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  // check size: typed array constructor will throw RangeError if\n  // byteOffset + length * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength\n  if (buffer.byteLength < 132) {\n    return false;\n  }\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * Exported for tests only.\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term.\n *\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html},\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2},\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}.\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder.\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {number[]} orientation The image orientation patient.\n * @returns {string|undefined} The orientation\n *   name: axial, coronal or sagittal.\n */\nexport function getOrientationName(orientation) {\n  let name;\n  const orientMatrix = getOrientationFromCosines(orientation);\n  if (typeof orientMatrix !== 'undefined') {\n    const lpsStr = getOrientationStringLPS(orientMatrix.asOneAndZeros());\n    name = getLPSGroup(lpsStr);\n  }\n  return name;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ImplicitVRLittleEndian;\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ExplicitVRBigEndian;\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGBaseline8Bit ||\n    syntax === transferSyntaxKeywords.JPEGExtended12Bit;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGLossless ||\n    syntax === transferSyntaxKeywords.JPEGLosslessSV1;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.RLELossless;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string|undefined} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n  return (syntax === transferSyntaxKeywords.ImplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRBigEndian ||\n    isJpegBaselineTransferSyntax(syntax) ||\n    isJpegLosslessTransferSyntax(syntax) ||\n    isJpeg2000TransferSyntax(syntax) ||\n    isRleTransferSyntax(syntax));\n}\n\n/**\n * Get a transfer syntax name from its UID.\n *\n * @param {string} syntax The transfer syntax UID value.\n * @returns {string} The transfer syntax name.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (typeof transferSyntaxes[syntax] !== 'undefined') {\n    name = transferSyntaxes[syntax];\n  }\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n *\n * See {@link https://github.com/ivmartel/dwv/issues/188}\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {DataElement} firstDataElement The first data element\n *   of the DICOM header.\n * @returns {DataElement} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      syntax = transferSyntaxKeywords.ImplicitVRLittleEndian;\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRLittleEndian;\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRBigEndian;\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = new DataElement('UI');\n  dataElement.tag = getTransferSyntaxUIDTag();\n  dataElement.value = [syntax];\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 1 || bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   (without its value).\n *\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n *\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_7.5.2.html#table_7.5-1}.\n *\n * ```\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n * ```\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * Is the input VR a known VR.\n *\n * @param {string} vr The vr to test.\n * @returns {boolean} True if known.\n */\nfunction isKnownVR(vr) {\n  const extraVrTypes = ['NONE', 'ox', 'xx', 'xs'];\n  const knownTypes = Object.keys(vrTypes).concat(extraVrTypes);\n  return knownTypes.includes(vr);\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  NumberOfFrames: '00280008',\n  BitsAllocated: '00280100',\n  PixelRepresentation: '00280103',\n  PixelData: '7FE00010'\n};\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {DataElements}\n   */\n  #dataElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder}.\n     *\n     * @external TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  // not using type DataElements since the typedef is not exported with the API\n\n  /**\n   * Get the DICOM data elements.\n   *\n   * @returns {Object<string, DataElement>} The data elements.\n   */\n  getDicomElements() {\n    return this.#dataElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   *\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {DataElement} The data element.\n   */\n  #readDataElement(reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // check vr\n    if (!isKnownVR(vr)) {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + tag.getKey() + '), treating as \\'UN\\'');\n      vr = 'UN';\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = new DataElement(vr);\n    element.tag = tag;\n    element.vl = vl;\n    element.startOffset = startOffset;\n    element.endOffset = endOffset;\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {DataElement} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR' +\n            ', treating as OW'\n          );\n          element.vr = 'OW';\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this.#decodeSpecialString(stream);\n        } else {\n          data = this.#decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw new Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint8Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt8Array(offset, vl));\n        }\n      } else {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint16Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt16Array(offset, vl));\n        }\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        let sqBitsAllocated = bitsAllocated;\n        let sqPixelRepresentation = pixelRepresentation;\n        for (let l = 0; l < keys.length; ++l) {\n          // check if local bitsAllocated\n          // (inside item loop to get interpreted value)\n          let dataElement = item[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n          // check if local pixelRepresentation\n          // (inside item loop to get interpreted value)\n          dataElement = item[TagKeys.PixelRepresentation];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqPixelRepresentation = dataElement.value[0];\n          }\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            sqPixelRepresentation, sqBitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {DataElements} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dataElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.#dataElements[TagKeys.TransferSyntax];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.#dataElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this.#dataElements[key] === 'undefined') {\n        this.#dataElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.#dataElements[TagKeys.PixelData] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.#dataElements[TagKeys.PixelRepresentation];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.#dataElements[TagKeys.BitsAllocated];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.#dataElements[TagKeys.SpecificCharacterSet];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.#dataElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.#dataElements[TagKeys.PixelData];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.#dataElements[TagKeys.NumberOfFrames] !== 'undefined') {\n          numberOfFrames = Number(\n            this.#dataElements[TagKeys.NumberOfFrames].value[0]\n          );\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","import {logger} from './logger';\n\n/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example}.\n */\nexport class ListenerHandler {\n  /**\n   * Listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    let nFound = 0;\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        ++nFound;\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n    if (nFound === 0) {\n      logger.debug('No callback found on remove listener for type ' + type);\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Point} from '../math/point';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number[][]} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {number[][][]} regions An array of [x, y] pairs (min, max).\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * Rescale Slope and Intercept.\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getSlope() === rhs.getSlope() &&\n      this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Statistics storage class.\n * 'simple' statistics do not include median, p25 nor p75.\n */\nexport class Statistics {\n  /**\n   * Minimum.\n   *\n   * @type {number}\n   */\n  min;\n  /**\n   * Maximum.\n   *\n   * @type {number}\n   */\n  max;\n  /**\n   * Mean.\n   *\n   * @type {number}\n   */\n  mean;\n  /**\n   * Standard deviation.\n   *\n   * @type {number}\n   */\n  stdDev;\n  /**\n   * Median.\n   *\n   * @type {number|undefined}\n   */\n  median;\n  /**\n   * 25th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p25;\n  /**\n   * 75th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p75;\n\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maxnimum.\n   * @param {number} mean The mean.\n   * @param {number} stdDev The standard deviation.\n   */\n  constructor(min, max, mean, stdDev) {\n    this.min = min;\n    this.max = max;\n    this.mean = mean;\n    this.stdDev = stdDev;\n  }\n}\n\n/**\n * Get statistics on an input array of number.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @param {string[]} flags A list of stat value names to calculate.\n * @returns {Statistics} A statistics object.\n */\nexport function getStats(values, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(values);\n  } else {\n    return getBasicStats(values);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {string[]} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Simple statistics (no median, p25 nor p75).\n */\nexport function getBasicStats(values) {\n  let min = values[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = values.length;\n  for (let i = 0; i < length; ++i) {\n    val = values[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  let variance = sumSqr / length - mean * mean;\n  if (variance < 0) {\n    variance = 0;\n  }\n  const stdDev = Math.sqrt(variance);\n\n  return new Statistics(min, max, mean, stdDev);\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Complete statistics (includes median, p25 and p75).\n */\nfunction getFullStats(values) {\n  // get basic stats\n  const stats = getBasicStats(values);\n\n  // sort array... can get slow...\n  values.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(values, 0.5);\n  stats.p25 = getPercentile(values, 0.25);\n  stats.p75 = getPercentile(values, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n *   that lie between data points.\n * See: {@link https://en.wikipedia.org/wiki/Percentile} (second variant interpolation).\n *\n * @param {number[]} values The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile.\n */\nfunction getPercentile(values, ratio) {\n  // check input\n  if (values.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return values[0];\n  } else if (ratio === 1) {\n    return values[values.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (values.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = values[i0];\n  const v1 = values[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n *\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n *   and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n\n/**\n * Number range.\n */\nexport class NumberRange {\n  /**\n   * @type {number}\n   */\n  min;\n  /**\n   * @type {number}\n   */\n  max;\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maximum.\n   */\n  constructor(min, max) {\n    this.min = min;\n    this.max = max;\n  }\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  getIdentityMat33,\n  REAL_WORLD_EPSILON\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {getBasicStats} from '../math/stats';\nimport {precisionRound} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Point3D[]}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {Object<string, Point3D[]>}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Point3D[]} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(this.#origins);\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Using geometric spacing ' + geoSliceSpacing +\n        ' instead of tag spacing ' + this.#spacing.get(2));\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest origin\n    const closestOriginIndex = point.getClosest(localOrigins);\n    const closestOrigin = localOrigins[closestOriginIndex];\n\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n\n    // use third orientation matrix column as plane normal vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n\n    // codirectional vectors: above slice index\n    // oposite vectors: below slice index\n    const isCodirectional = normal.isCodirectional(pointDir);\n    const sliceIndex = isCodirectional\n      ? closestOriginIndex + 1 : closestOriginIndex;\n\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    // equal callback\n    const equalToOrigin = function (element) {\n      return element.equals(origin);\n    };\n    if (typeof time !== 'undefined') {\n      // check if not already in list\n      const found = this.#timeOrigins[time].find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same time origin twice');\n      }\n      // add in origin array\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      // check if not already in list\n      const found = this.#origins.find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same origin twice');\n      }\n      // update flag\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Point3D[]} origins An array of Point3D.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins) {\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n\n  const spacings = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    const origin1 = origins[i];\n    const origin2 = origins[i + 1];\n    const sliceSpacing = origin1.getDistance(origin2);\n    if (sliceSpacing === 0) {\n      throw new Error('Zero slice spacing ' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    spacings.push(sliceSpacing);\n  }\n\n  // use rounded mean value as spacing\n  const stats = getBasicStats(spacings);\n  const spacing = precisionRound(stats.mean, 4);\n\n  // warn if non constant\n  if (stats.stdDev > REAL_WORLD_EPSILON) {\n    logger.warn('Varying slice spacing, value: ' + spacing +\n      ' (mean: ' + stats.mean +\n      ', min: ' + stats.min +\n      ', max: ' + stats.max +\n      ', stdDev: ' + stats.stdDev + ')');\n  }\n\n  return spacing;\n}\n","import {DataElement} from './dataElement';\n\n/**\n * Pad an input string with a '0' to form a 2 digit one.\n *\n * @param {string} str The string to pad.\n * @returns {string} The padded string.\n */\nfunction padZeroTwoDigit(str) {\n  return ('0' + str).slice(-2);\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {object} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {DataElement} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {DataElement} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dateDataElement = new DataElement('DA');\n  dateDataElement.value = [dtValue.substring(0, 8)];\n  const dtDate = getDate(dateDataElement);\n  const timeDataElement = new DataElement('TM');\n  timeDataElement.value = [dtValue.substring(8)];\n  const dtTime = dtValue.length >= 9\n    ? getTime(timeDataElement) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Extract date values from a Date object.\n *\n * @param {Date} date The input date.\n * @returns {{year, monthIndex, day}} A 'date' object.\n */\nexport function dateToDateObj(date) {\n  return {\n    year: date.getFullYear().toString(),\n    monthIndex: padZeroTwoDigit((date.getMonth() + 1).toString()),\n    day: padZeroTwoDigit(date.getDate().toString())\n  };\n}\n\n/**\n * Extract time values from a Date object.\n *\n * @param {Date} date The input date.\n * @returns {{hours, minutes, seconds}} A 'time' object.\n */\nexport function dateToTimeObj(date) {\n  return {\n    hours: padZeroTwoDigit(date.getHours().toString()),\n    minutes: padZeroTwoDigit(date.getMinutes().toString()),\n    seconds: padZeroTwoDigit(date.getSeconds().toString())\n  };\n}\n\n/**\n * Get a DICOM formated date string.\n *\n * @param {{year, monthIndex, day}} dateObj The date to format.\n * @returns {string} The formated date.\n */\nexport function getDicomDate(dateObj) {\n  // YYYYMMDD\n  return (\n    dateObj.year +\n    dateObj.monthIndex +\n    dateObj.day\n  );\n}\n\n/**\n * Get a DICOM formated time string.\n *\n * @param {{hours, minutes, seconds}} dateObj The date to format.\n * @returns {string} The formated time.\n */\nexport function getDicomTime(dateObj) {\n  // HHMMSS\n  return (\n    dateObj.hours +\n    dateObj.minutes +\n    dateObj.seconds\n  );\n}\n\n/**\n * Get a DICOM formated datetime string.\n *\n * @param {{date, time}} datetime The datetime to format.\n * @returns {string} The formated datetime.\n */\nexport function getDicomDateTime(datetime) {\n  // HHMMSS\n  let res = getDicomDate(datetime.date);\n  if (typeof datetime.time !== 'undefined') {\n    res += getDicomTime(datetime.time);\n  }\n  return res;\n}\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  getDate,\n  getTime,\n  getDateTime\n} from './dicomDate';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {getOrientationFromCosines} from '../math/orientation';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\nimport {DataElement} from './dataElement';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Dump the DICOM tags to a string in the same way as the\n * DCMTK `dcmdump` command (https://support.dcmtk.org/docs-dcmrt/dcmdump.html).\n *\n * @param {Object<string, DataElement>} dicomElements The dicom elements.\n * @returns {string} The dumped file.\n */\nexport function dcmdump(dicomElements) {\n  const keys = Object.keys(dicomElements);\n  let result = '\\n';\n  result += '# Dicom-File-Format\\n';\n  result += '\\n';\n  result += '# Dicom-Meta-Information-Header\\n';\n  result += '# Used TransferSyntax: ';\n  if (isNativeLittleEndian()) {\n    result += 'Little Endian Explicit\\n';\n  } else {\n    result += 'NOT Little Endian Explicit\\n';\n  }\n  let dicomElement = null;\n  let tag = null;\n  let checkHeader = true;\n  for (let i = 0, leni = keys.length; i < leni; ++i) {\n    dicomElement = dicomElements[keys[i]];\n    tag = getTagFromKey(keys[i]);\n    if (checkHeader && tag.getGroup() !== '0002') {\n      result += '\\n';\n      result += '# Dicom-Data-Set\\n';\n      result += '# Used TransferSyntax: ';\n      const syntax = dicomElements['00020010'].value[0];\n      result += getTransferSyntaxName(syntax);\n      result += '\\n';\n      checkHeader = false;\n    }\n    result += getElementAsString(tag, dicomElement) + '\\n';\n  }\n  return result;\n}\n\n/**\n * Get a data element value as a string.\n *\n * @param {Tag} tag The DICOM tag.\n * @param {object} dicomElement The DICOM element.\n * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n * @returns {string} A string representation of the DICOM element.\n */\nfunction getElementValueAsString(tag, dicomElement, pretty) {\n  let str = '';\n  const strLenLimit = 65;\n\n  // dafault to pretty output\n  if (typeof pretty === 'undefined') {\n    pretty = true;\n  }\n  // check dicom element input\n  if (typeof dicomElement === 'undefined' || dicomElement === null) {\n    return str;\n  }\n\n  // Polyfill for Number.isInteger.\n  const isInteger = Number.isInteger || function (value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value;\n  };\n\n  // TODO Support sequences.\n\n  if (dicomElement.vr !== 'SQ' &&\n    dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n    str += '(no value available)';\n  } else if (isPixelDataTag(tag) &&\n    dicomElement.undefinedLength) {\n    str = '(PixelSequence)';\n  } else if (dicomElement.vr === 'DA' && pretty) {\n    const daObj = getDate(dicomElement);\n    const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\n    str = da.toLocaleDateString();\n  } else if (dicomElement.vr === 'TM' && pretty) {\n    const tmObj = getTime(dicomElement);\n    str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\n  } else {\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n    const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n      dicomElement.vr === 'FD' ||\n      dicomElement.vr === 'DS');\n    let valueStr = '';\n    for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n      valueStr = '';\n      if (k !== 0) {\n        valueStr += '\\\\';\n      }\n      if (isFloatNumberVR) {\n        const num = Number(dicomElement.value[k]);\n        if (!isInteger(num) && pretty) {\n          valueStr += num.toPrecision(4);\n        } else {\n          valueStr += num.toString();\n        }\n      } else if (isOtherVR) {\n        let tmp = dicomElement.value[k].toString(16);\n        if (dicomElement.vr === 'OB') {\n          tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n        } else {\n          tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n        }\n        valueStr += tmp;\n      } else {\n        valueStr += dicomElement.value[k];\n      }\n      // check length\n      if (str.length + valueStr.length <= strLenLimit) {\n        str += valueStr;\n      } else {\n        str += '...';\n        break;\n      }\n    }\n  }\n  return str;\n}\n\n/**\n * Get a data element as a string.\n *\n * @param {Tag} tag The DICOM tag.\n * @param {object} dicomElement The DICOM element.\n * @param {string} [prefix] A string to prepend this one.\n * @returns {string} The element as a string.\n */\nfunction getElementAsString(tag, dicomElement, prefix) {\n  // default prefix\n  prefix = prefix || '';\n\n  // get tag anme from dictionary\n  const tagName = tag.getNameFromDictionary();\n\n  let deSize = dicomElement.value.length;\n  let isOtherVR = false;\n  if (dicomElement.vr.length !== 0) {\n    isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n  }\n\n  // no size for delimitations\n  if (isItemDelimitationItemTag(tag) ||\n    isSequenceDelimitationItemTag(tag)) {\n    deSize = 0;\n  } else if (isOtherVR) {\n    deSize = 1;\n  }\n\n  const isPixSequence = (isPixelDataTag(tag) &&\n    dicomElement.undefinedLength);\n\n  let line = null;\n\n  // (group,element)\n  line = '(';\n  line += tag.getGroup().toLowerCase();\n  line += ',';\n  line += tag.getElement().toLowerCase();\n  line += ') ';\n  // value representation\n  line += dicomElement.vr;\n  // value\n  if (dicomElement.vr !== 'SQ' &&\n    dicomElement.value.length === 1 &&\n    dicomElement.value[0] === '') {\n    line += ' (no value available)';\n    deSize = 0;\n  } else {\n    // simple number display\n    if (dicomElement.vr === 'na') {\n      line += ' ';\n      line += dicomElement.value[0];\n    } else if (isPixSequence) {\n      // pixel sequence\n      line += ' (PixelSequence #=' + deSize + ')';\n    } else if (dicomElement.vr === 'SQ') {\n      line += ' (Sequence with';\n      if (dicomElement.undefinedLength) {\n        line += ' undefined';\n      } else {\n        line += ' explicit';\n      }\n      line += ' length #=';\n      line += dicomElement.value.length;\n      line += ')';\n    } else if (isOtherVR ||\n        dicomElement.vr === 'pi' ||\n        dicomElement.vr === 'UL' ||\n        dicomElement.vr === 'US' ||\n        dicomElement.vr === 'SL' ||\n        dicomElement.vr === 'SS' ||\n        dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'AT') {\n      // 'O'ther array, limited display length\n      line += ' ';\n      line += getElementValueAsString(tag, dicomElement, false);\n    } else {\n      // default\n      line += ' [';\n      line += getElementValueAsString(tag, dicomElement, false);\n      line += ']';\n    }\n  }\n\n  // align #\n  const nSpaces = 55 - line.length;\n  if (nSpaces > 0) {\n    for (let s = 0; s < nSpaces; ++s) {\n      line += ' ';\n    }\n  }\n  line += ' # ';\n  if (dicomElement.vl < 100) {\n    line += ' ';\n  }\n  if (dicomElement.vl < 10) {\n    line += ' ';\n  }\n  line += dicomElement.vl;\n  line += ', ';\n  line += deSize; //dictElement[1];\n  line += ' ';\n  if (tagName !== null) {\n    line += tagName;\n  } else {\n    line += 'Unknown Tag & Data';\n  }\n\n  let message = null;\n\n  // continue for sequence\n  if (dicomElement.vr === 'SQ') {\n    let item = null;\n    for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n      item = dicomElement.value[l];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n\n      // get the item element\n      const itemTag = getItemTag();\n      const itemElement = item['FFFEE000'];\n      message = '(Item with';\n      if (itemElement.undefinedLength) {\n        message += ' undefined';\n      } else {\n        message += ' explicit';\n      }\n      message += ' length #=' + (itemKeys.length - 1) + ')';\n      itemElement.value = [message];\n      itemElement.vr = 'na';\n\n      line += '\\n';\n      line += getElementAsString(itemTag, itemElement, prefix + '  ');\n\n      for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n        const itemTag = getTagFromKey(itemKeys[m]);\n        if (itemKeys[m] !== 'xFFFEE000') {\n          line += '\\n';\n          line += getElementAsString(itemTag, item[itemKeys[m]],\n            prefix + '    ');\n        }\n      }\n\n      message = '(ItemDelimitationItem';\n      if (!itemElement.undefinedLength) {\n        message += ' for re-encoding';\n      }\n      message += ')';\n      const itemDelimTag = getItemDelimitationItemTag();\n      const itemDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += getElementAsString(\n        itemDelimTag, itemDelimElement, prefix + '  ');\n\n    }\n\n    message = '(SequenceDelimitationItem';\n    if (!dicomElement.undefinedLength) {\n      message += ' for re-encod.';\n    }\n    message += ')';\n    const sqDelimTag = getSequenceDelimitationItemTag();\n    const sqDelimElement = {\n      vr: 'na',\n      vl: '0',\n      value: [message]\n    };\n    line += '\\n';\n    line += getElementAsString(sqDelimTag, sqDelimElement, prefix);\n  } else if (isPixSequence) {\n    // pixel sequence\n    let pixItem = null;\n    for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n      pixItem = dicomElement.value[n];\n      line += '\\n';\n      pixItem.vr = 'pi';\n      line += getElementAsString(\n        getPixelDataTag(), pixItem, prefix + '  ');\n    }\n\n    const pixDelimTag = getSequenceDelimitationItemTag();\n    const pixDelimElement = {\n      vr: 'na',\n      vl: '0',\n      value: ['(SequenceDelimitationItem)']\n    };\n    line += '\\n';\n    line += getElementAsString(pixDelimTag, pixDelimElement, prefix);\n  }\n\n  return prefix + line;\n}\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {number[]} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {Spacing} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      // spacing order: [row, column]\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n      break;\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit === 'undefined') {\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'CT') {\n        unit = 'HU';\n      }\n    }\n  }\n  return unit;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nexport function getDimensionOrganization(dataElements) {\n  // Dimension Organization Sequence (required)\n  const orgSq = dataElements['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = dataElements['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Spacing} A spacing object.\n */\nexport function getSpacingFromMeasure(dataElements) {\n  // Pixel Spacing\n  if (typeof dataElements['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = dataElements['00280030'];\n  // spacing order: [row, column]\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[1]),\n    parseFloat(pixelSpacing.value[0]),\n  ];\n  // Spacing Between Slices\n  if (typeof dataElements['00180088'] !== 'undefined') {\n    spacingValues.push(parseFloat(dataElements['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get an orientation matrix from a dicom orientation element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationMatrix(dataElements) {\n  const imageOrientationPatient = dataElements['00200037'];\n  let orientationMatrix;\n  // slice orientation (cosines are matrices' columns)\n  // http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n  if (typeof imageOrientationPatient !== 'undefined') {\n    orientationMatrix =\n      getOrientationFromCosines(\n        imageOrientationPatient.value.map((item) => parseFloat(item))\n      );\n  }\n  return orientationMatrix;\n}\n\n/**\n * Get a dicom item from a measure sequence.\n *\n * @param {Spacing} spacing The spacing object.\n * @returns {object} The dicom item.\n */\nexport function getDicomMeasureItem(spacing) {\n  return {\n    SpacingBetweenSlices: spacing.get(2),\n    PixelSpacing: [spacing.get(1), spacing.get(0)]\n  };\n}\n\n/**\n * Get a dicom element from a plane orientation sequence.\n *\n * @param {Matrix33} orientation The image orientation.\n * @returns {object} The dicom element.\n */\nexport function getDicomPlaneOrientationItem(orientation) {\n  return {\n    ImageOrientationPatient: [\n      orientation.get(0, 0),\n      orientation.get(1, 0),\n      orientation.get(2, 0),\n      orientation.get(0, 1),\n      orientation.get(1, 1),\n      orientation.get(2, 1)\n    ]\n  };\n}\n\n/**\n * Check an input tag.\n *\n * @param {object} element The element to check.\n * @param {string} name The element name.\n * @param {Array} [values] The expected values.\n * @returns {string} A warning if the element is not as expected.\n */\nfunction checkTag(element, name, values) {\n  let warning = '';\n  if (typeof element === 'undefined') {\n    warning += ' ' + name + ' is undefined,';\n  } else if (element.value.length === 0) {\n    warning += ' ' + name + ' is empty,';\n  } else {\n    if (typeof values !== 'undefined') {\n      for (let i = 0; i < values.length; ++i) {\n        if (!element.value.includes(values[i])) {\n          warning += ' ' + name + ' does not contain ' + values[i] +\n            ' (value: ' + element.value + '),';\n        }\n      }\n    }\n  }\n  return warning;\n}\n\n/**\n * Get the decayed dose (Bq).\n *\n * @param {object} elements The DICOM elements to check.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nfunction getDecayedDose(elements) {\n  let warning = '';\n  let warn;\n\n  // SeriesDate (type1)\n  const seriesDateEl = elements['00080021'];\n  const seriesDateObj = getDate(seriesDateEl);\n\n  let totalDose;\n  let halfLife;\n  let radioStart;\n\n  const radioInfoSqStr = 'RadiopharmaceuticalInformationSequence (00540016)';\n  const radioInfoSq = elements['00540016'];\n  warning += checkTag(radioInfoSq, radioInfoSqStr);\n  if (typeof radioInfoSq !== 'undefined') {\n    if (radioInfoSq.value.length !== 1) {\n      logger.warn(\n        'Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.'\n      );\n    }\n\n    // RadionuclideTotalDose (type3, Bq)\n    const totalDoseStr = 'RadionuclideTotalDose (00181074)';\n    const totalDoseEl = radioInfoSq.value[0]['00181074'];\n    warn = checkTag(totalDoseEl, totalDoseStr);\n    if (warn.length === 0) {\n      totalDose = totalDoseEl.value[0];\n    } else {\n      warning += warn;\n    }\n\n    // RadionuclideHalfLife (type3, seconds)\n    const halfLifeStr = 'RadionuclideHalfLife (00181075)';\n    const halfLifeEl = radioInfoSq.value[0]['00181075'];\n    warn = checkTag(halfLifeEl, halfLifeStr);\n    if (warn.length === 0) {\n      halfLife = parseFloat(halfLifeEl.value[0]);\n    } else {\n      warning += warn;\n    }\n\n    // RadiopharmaceuticalStartDateTime (type3)\n    const radioStartDateTimeEl = radioInfoSq.value[0]['00181078'];\n    let radioStartDateObj;\n    let radioStartTimeObj;\n    if (typeof radioStartDateTimeEl === 'undefined') {\n      // use seriesDate as radioStartDate\n      radioStartDateObj = seriesDateObj;\n      // try RadiopharmaceuticalStartTime (type3)\n      const radioStartTimeEl = radioInfoSq.value[0]['00181072'];\n      radioStartTimeObj = getTime(radioStartTimeEl);\n    } else {\n      const radioStartDateTime = getDateTime(radioStartDateTimeEl);\n      radioStartDateObj = radioStartDateTime.date;\n      radioStartTimeObj = radioStartDateTime.time;\n    }\n    if (typeof radioStartTimeObj === 'undefined') {\n      radioStartTimeObj = {\n        hours: 0, minutes: 0, seconds: 0, milliseconds: 0\n      };\n    }\n    radioStart = new Date(\n      radioStartDateObj.year,\n      radioStartDateObj.monthIndex,\n      radioStartDateObj.day,\n      radioStartTimeObj.hours,\n      radioStartTimeObj.minutes,\n      radioStartTimeObj.seconds,\n      radioStartTimeObj.milliseconds\n    );\n  }\n\n  // SeriesTime (type1)\n  const seriesTimeEl = elements['00080031'];\n  const seriesTimeObj = getTime(seriesTimeEl);\n  // Series date/time\n  let scanStart = new Date(\n    seriesDateObj.year,\n    seriesDateObj.monthIndex,\n    seriesDateObj.day,\n    seriesTimeObj.hours,\n    seriesTimeObj.minutes,\n    seriesTimeObj.seconds,\n    seriesTimeObj.milliseconds\n  );\n\n  // scanStart Date check\n  // AcquisitionDate (type3)\n  const acqDateEl = elements['00080022'];\n  // AcquisitionTime (type3)\n  const acqTimeEl = elements['00080032'];\n  if (typeof acqDateEl !== 'undefined' &&\n    typeof acqTimeEl !== 'undefined') {\n    const acqDateObj = getDate(acqDateEl);\n    const acqTimeObj = getTime(acqTimeEl);\n    const acqDate = new Date(\n      acqDateObj.year,\n      acqDateObj.monthIndex,\n      acqDateObj.day,\n      acqTimeObj.hours,\n      acqTimeObj.minutes,\n      acqTimeObj.seconds,\n      acqTimeObj.milliseconds\n    );\n\n    if (scanStart > acqDate) {\n      const diff = scanStart.getTime() - acqDate.getTime();\n      const warn = 'Series date/time is after Aquisition date/time (diff=' +\n        diff.toString() + 'ms) ';\n      logger.debug(warn);\n\n      // back compute from center (average count rate) of time window\n      // for bed position (frame) in series (reliable in all cases)\n\n      let frameRefTime = 0;\n      const frameRefTimeElStr = 'FrameReferenceTime (00541300)';\n      const frameRefTimeEl = elements['00541300'];\n      warning += checkTag(frameRefTimeEl, frameRefTimeElStr);\n      if (typeof frameRefTimeEl !== 'undefined') {\n        frameRefTime = frameRefTimeEl.value[0];\n      }\n      let actualFrameDuration = 0;\n      const actualFrameDurationElStr = 'ActualFrameDuration (0018,1242)';\n      const actualFrameDurationEl = elements['00181242'];\n      warning += checkTag(actualFrameDurationEl, actualFrameDurationElStr);\n      if (typeof actualFrameDurationEl !== 'undefined') {\n        actualFrameDuration = actualFrameDurationEl.value[0];\n      }\n      if (frameRefTime > 0 && actualFrameDuration > 0) {\n        // convert to seconds\n        actualFrameDuration = actualFrameDuration / 1000;\n        frameRefTime = frameRefTime / 1000;\n        const decayConstant = Math.log(2) / halfLife;\n        const decayDuringFrame = decayConstant * actualFrameDuration;\n        const averageCountRateTimeWithinFrame =\n          1 /\n          decayConstant *\n          Math.log(decayDuringFrame / (1 - Math.exp(-decayDuringFrame)));\n        const offsetSeconds = averageCountRateTimeWithinFrame - frameRefTime;\n        scanStart = new Date(\n          acqDateObj.year,\n          acqDateObj.monthIndex,\n          acqDateObj.day,\n          acqTimeObj.hours,\n          acqTimeObj.minutes,\n          acqTimeObj.seconds + offsetSeconds,\n          acqTimeObj.milliseconds\n        );\n      }\n    }\n  }\n\n  // decayed dose (Bq)\n  let decayedDose;\n  if (typeof scanStart !== 'undefined' &&\n    typeof radioStart !== 'undefined' &&\n    typeof totalDose !== 'undefined' &&\n    typeof halfLife !== 'undefined') {\n    // decay time (s) (Date diff is in milliseconds)\n    const decayTime = (scanStart.getTime() - radioStart.getTime()) / 1000;\n    const decay = Math.pow(2, (-decayTime / halfLife));\n    decayedDose = totalDose * decay;\n  }\n\n  return {\n    value: decayedDose,\n    warning: warning\n  };\n}\n\n/**\n * Get the PET SUV factor.\n *\n * Ref:\n * - {@link https://qibawiki.rsna.org/index.php/Standardized_Uptake_Value_(SUV)#SUV_Calculation},\n * - {@link https://qibawiki.rsna.org/images/6/62/SUV_vendorneutral_pseudocode_happypathonly_20180626_DAC.pdf},\n * - {@link https://qibawiki.rsna.org/images/8/86/SUV_vendorneutral_pseudocode_20180626_DAC.pdf}.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nexport function getSuvFactor(elements) {\n  let warning = '';\n\n  // CorrectedImage (type2): must contain ATTN and DECY\n  const corrImageTagStr = 'Corrected Image (00280051)';\n  const corrImageEl = elements['00280051'];\n  warning += checkTag(corrImageEl, corrImageTagStr, ['ATTN', 'DECY']);\n  // DecayCorrection (type1): must be START\n  const decayCorrTagStr = 'Decay Correction (00541102)';\n  const decayCorrEl = elements['00541102'];\n  warning += checkTag(decayCorrEl, decayCorrTagStr, ['START']);\n  // Units (type1): must be BQML\n  const unitTagStr = 'Units (00541001)';\n  const unitEl = elements['00541001'];\n  warning += checkTag(unitEl, unitTagStr, ['BQML']);\n\n  // PatientWeight (type3, kg)\n  let patWeight;\n  const patientWeightStr = ' PatientWeight (00101030)';\n  const patWeightEl = elements['00101030'];\n  const warn = checkTag(patWeightEl, patientWeightStr);\n  if (warn.length === 0) {\n    patWeight = patWeightEl.value[0];\n  } else {\n    warning += warn;\n  }\n\n  // Decayed dose (Bq)\n  const decayedDose = getDecayedDose(elements);\n  warning += decayedDose.warning;\n\n  const result = {};\n  if (warning.length !== 0) {\n    result.warning = 'Cannot calculate PET SUV:' + warning;\n  } else {\n    // SUV factor (grams/Bq)\n    result.value = (patWeight * 1000) / decayedDose.value;\n  }\n\n  return result;\n}\n\n/**\n * Get the file list from a DICOMDIR.\n *\n * @param {object} data The buffer data of the DICOMDIR.\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {Object<string, DataElement>} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {luts} from './luts';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor,\n  getSuvFactor,\n  getOrientationMatrix\n} from '../dicom/dicomElementsWrapper';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * The PET SUV factor.\n   *\n   * @type {number|undefined}\n   */\n  #suvFactor;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {DataElements} dataElements The DICOM data elements.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(dataElements) {\n    // reset\n    this.#warning = undefined;\n    // will throw if columns or rows is not defined\n    getImage2DSize(dataElements);\n    // check PET SUV\n    let modality;\n    const element = dataElements['00080060'];\n    if (typeof element !== 'undefined') {\n      modality = element.value[0];\n      if (modality === 'PT') {\n        const suvFactor = getSuvFactor(dataElements);\n        this.#suvFactor = suvFactor.value;\n        this.#warning = suvFactor.warning;\n      }\n    }\n\n    return this.#warning;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {DataElements} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dataElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // NumberOfFrames\n    const numberOfFramesEl = dataElements['00280008'];\n    if (typeof numberOfFramesEl !== 'undefined') {\n      const number = parseInt(numberOfFramesEl.value[0], 10);\n      if (number > 1) {\n        sizeValues.push(number);\n      }\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dataElements);\n\n    // TransferSyntaxUID\n    const syntax = dataElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dataElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // Image orientation patient\n    const orientationMatrix = getOrientationMatrix(dataElements);\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dataElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dataElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dataElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dataElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dataElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dataElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dataElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n\n    // Modality\n    const modality = dataElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n\n    // PET SUV\n    let isPetWithSuv = false;\n    let intensityFactor = 1;\n    if (typeof this.#suvFactor !== 'undefined') {\n      isPetWithSuv = true;\n      intensityFactor = this.#suvFactor;\n      logger.info('Applying PET SUV calibration: ' + intensityFactor);\n      slope *= intensityFactor;\n      intercept *= intensityFactor;\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n\n    // defaults\n    meta.TransferSyntaxUID = safeGet('00020010');\n    meta.MediaStorageSOPClassUID = safeGet('00020002');\n    meta.SOPClassUID = safeGet('00080016');\n    meta.Modality = safeGet('00080060');\n    meta.ImageType = safeGet('00080008');\n    meta.SamplesPerPixel = safeGet('00280002');\n    meta.PhotometricInterpretation = safeGet('00280004');\n    meta.PixelRepresentation = safeGet('00280103');\n    meta.BitsAllocated = safeGet('00280100');\n    meta.BitsStored = safeGet('00280101');\n    meta.HighBit = safeGet('00280102');\n\n    // Study\n    meta.StudyDate = safeGet('00080020');\n    meta.StudyTime = safeGet('00080030');\n    meta.StudyInstanceUID = safeGet('0020000D');\n    meta.StudyID = safeGet('00200010');\n    // Series\n    meta.SeriesInstanceUID = safeGet('0020000E');\n    meta.SeriesNumber = safeGet('00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = safeGet('00080090');\n    // patient info\n    meta.PatientName = safeGet('00100010');\n    meta.PatientID = safeGet('00100020');\n    meta.PatientBirthDate = safeGet('00100030');\n    meta.PatientSex = safeGet('00100040');\n    // General Equipment Module\n    meta.Manufacturer = safeGet('00080070');\n    meta.ManufacturerModelName = safeGet('00081090');\n    meta.DeviceSerialNumber = safeGet('00181000');\n    meta.SoftwareVersions = safeGet('00181020');\n\n    meta.ImageOrientationPatient = safeGet('00200037');\n    meta.FrameOfReferenceUID = safeGet('00200052');\n\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    if (isPetWithSuv) {\n      meta.pixelUnit = 'SUV';\n    } else {\n      const pixelUnit = getPixelUnit(dataElements);\n      if (typeof pixelUnit !== 'undefined') {\n        meta.pixelUnit = pixelUnit;\n      }\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dataElements['00281050'];\n    const windowWidth = dataElements['00281051'];\n    const windowCWExplanation = dataElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j]);\n        let width = parseFloat(windowWidth.value[j]);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          width *= intensityFactor;\n          if (width < 1) {\n            width = 1;\n          }\n          windowPresets[name] = {\n            wl: [new WindowLevel(\n              center * intensityFactor,\n              width\n            )],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      // Red Palette Color Lookup Table Data\n      const redLutElement = dataElements['00281201'];\n      // Green Palette Color Lookup Table Data\n      const greenLutElement = dataElements['00281202'];\n      // Blue Palette Color Lookup Table Data\n      const blueLutElement = dataElements['00281203'];\n      let redLut;\n      let greenLut;\n      let blueLut;\n      // check red palette descriptor (should all be equal)\n      // Red Palette Color Lookup Table Descriptor\n      // 0: number of entries in the lookup table\n      // 1: first input value mapped\n      // 2: number of bits for each entry in the Lookup Table Data (8 or 16)\n      const descriptor = dataElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n        descriptor.value.length === 3) {\n        if (descriptor.value[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor.value[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          // TODO vl is undefined, find info elsewhere...\n          const vlSize = redLutElement.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dataElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLutElement.value.map(scaleTo8);\n            greenLut = greenLutElement.value.map(scaleTo8);\n            blueLut = blueLutElement.value.map(scaleTo8);\n          }\n        } else if (descriptor.value[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLutElement.value.slice(0);\n          // @ts-expect-error\n          redLut = Array.from(new Uint8Array(clone.buffer));\n          clone = greenLutElement.value.slice(0);\n          // @ts-expect-error\n          greenLut = Array.from(new Uint8Array(clone.buffer));\n          clone = blueLutElement.value.slice(0);\n          // @ts-expect-error\n          blueLut = Array.from(new Uint8Array(clone.buffer));\n        }\n      }\n      // set the palette\n      luts['palette'] = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dataElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  isItemDelimitationItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataElement} from './dataElement';\nimport {DataWriter} from './dataWriter';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Writer rule.\n */\nexport class WriterRule {\n  /**\n   * Rule action: `copy`, `remove`, `clear` or `replace`.\n   *\n   * @type {string}\n   */\n  action;\n  /**\n   * Optional value to use for replace action.\n   *\n   * @type {any|undefined}\n   */\n  value;\n\n  /**\n   * @param {string} action The rule action.\n   */\n  constructor(action) {\n    this.action = action;\n  }\n}\n\n/**\n * Possible writer actions.\n *\n * @type {Object<string, Function>}\n */\nconst writerActions = {\n  copy: function (item) {\n    return item;\n  },\n  remove: function () {\n    return null;\n  },\n  clear: function (item) {\n    item.value = [];\n    return item;\n  },\n  replace: function (item, value) {\n    item.value = [value];\n    return item;\n  }\n};\n\n/**\n * Get simple (non official) DICOM anonymisation rules.\n *\n * @returns {Object<string, WriterRule>} The rules.\n */\nexport function getDefaultAnonymisationRules() {\n  return {\n    default: {action: 'copy', value: null},\n    PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n    'Meta Element': {action: 'copy', value: null}, // group '0002'\n    Acquisition: {action: 'copy', value: null}, // group '0018'\n    'Image Presentation': {action: 'copy', value: null}, // group '0028'\n    Procedure: {action: 'copy', value: null}, // group '0040'\n    'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n  };\n}\n\n/**\n * Get a UID for a DICOM tag.\n *\n * Note: Use {@link https://github.com/uuidjs/uuid}?\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_9.html},\n * - {@link http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html},\n * - {@link https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid}.\n *\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n *\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html}.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array.\n *\n * @param {Array} initialArray Array of typed arrays.\n * @returns {object} A typed array containing all values.\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  BitsAllocated: '00280100',\n};\n\n/**\n * DICOM writer.\n *\n * @example\n * // add link to html\n * const link = document.createElement(\"a\");\n * link.appendChild(document.createTextNode(\"download\"));\n * const div = document.getElementById(\"dwv\");\n * div.appendChild(link);\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   const parser = new dwv.DicomParser();\n *   parser.parse(event.target.response);\n *   // create writer\n *   const writer = new dwv.DicomWriter();\n *   // get buffer using default rules\n *   const dicomBuffer = writer.getBuffer(parser.getDicomElements());\n *   // create blob\n *   const blob = new Blob([dicomBuffer], {type: 'application/dicom'});\n *   // add blob to download link\n *   link.href = URL.createObjectURL(blob);\n *   link.download = \"anonym.dcm\";\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomWriter {\n\n  /**\n   * Flag to use VR=UN for private sequences, default to false\n   * (mainly used in tests).\n   *\n   * @type {boolean}\n   */\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Flag to activate or not the vr=UN tag check and fix\n   * if present in the dictionary. Default to true.\n   *\n   * @type {boolean}\n   */\n  #fixUnknownVR = true;\n\n  /**\n   * Default rules: just copy.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * List of compulsory tags keys.\n   *\n   * @type {string[]}\n   */\n  #compulsoryTags = [];\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  /**\n   * Set the vr=UN check and fix flag.\n   *\n   * @param {boolean} flag True to activate the check and fix.\n   */\n  setFixUnknownVR(flag) {\n    this.#fixUnknownVR = flag;\n  }\n\n  /**\n   * Set the writing rules.\n   * List of writer rules indexed by either `default`,\n   *   tagKey, tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagKey, tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   *\n   * @param {Object<string, WriterRule>} rules The input rules.\n   * @param {boolean} [addMissingTags] If true, explicit tags that\n   *   have replace rule and a value will be\n   *   added if missing. Defaults to false.\n   */\n  setRules(rules, addMissingTags) {\n    this.#rules = rules;\n\n    // default compulsory list is empty\n    this.#compulsoryTags = [];\n\n    // use replace rule tags as compulsory tags\n    if (addMissingTags) {\n      const keys = Object.keys(rules);\n      for (const key of keys) {\n        const rule = rules[key];\n        if (rule.action === 'replace' &&\n          typeof rule.value !== 'undefined' &&\n          rule.value !== null) {\n          // check if key really exists\n          let isKey = false;\n          if (key.length === 8) {\n            const tag = getTagFromKey(key);\n            isKey = typeof tag.getNameFromDictionary() !== 'undefined';\n          }\n          // get tag key, rules can use key or tag name\n          let tagKey;\n          if (isKey) {\n            tagKey = key;\n          } else {\n            // try tag name\n            const tag = getTagFromDictionary(key);\n            if (typeof tag !== 'undefined') {\n              tagKey = tag.getKey();\n            }\n          }\n          // add to list\n          if (typeof tagKey !== 'undefined') {\n            this.#compulsoryTags.push(tagKey);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder}.\n     *\n     * @external TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {DataElement} element The element to check.\n   * @returns {DataElement|null} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return writerActions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      if (item.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      const itemTag = item.find((subItem) => isItemTag(subItem.tag));\n      if (typeof itemTag !== 'undefined' &&\n        typeof itemTag.undefinedLength !== 'undefined') {\n        undefinedLength = itemTag.undefinedLength;\n      }\n      const itemElement = new DataElement('NONE');\n      itemElement.vl = undefinedLength ? 0xffffffff : itemTag.vl,\n      itemElement.tag = getItemTag();\n      itemElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (const subItem of item) {\n        if (!isItemTag(subItem.tag) &&\n          !isItemDelimitationItemTag(subItem.tag)) {\n          byteOffset = this.#writeDataElement(\n            writer, subItem, byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = new DataElement('NONE');\n        itemDelimElement.vl = 0;\n        itemDelimElement.tag = getItemDelimitationItemTag();\n        itemDelimElement.value = [];\n        byteOffset = this.#writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw new Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.#writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else if (element.vr === 'xs') {\n        // TODO would be better to use pixelRepresentation in if\n        if (value instanceof Int16Array) {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        let message = 'Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl;\n        message += ' (';\n        if (typeof element.tag !== 'undefined') {\n          message += element.tag + ', ';\n        }\n        message += 'vr:' + element.vr + ')';\n        logger.warn(message);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.#writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.#writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = new DataElement('NONE');\n      seqDelimElement.vl = 0;\n      seqDelimElement.tag = getSequenceDelimitationItemTag();\n      seqDelimElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} dataElements The elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dataElements) {\n    // Transfer Syntax\n    const syntax = dataElements[TagKeys.TransferSyntax].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dataElements[TagKeys.SpecificCharacterSet] !== 'undefined') {\n      const oldscs = dataElements[TagKeys.SpecificCharacterSet].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dataElements[TagKeys.SpecificCharacterSet].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dataElements[TagKeys.BitsAllocated] !== 'undefined') {\n      bitsAllocated = dataElements[TagKeys.BitsAllocated].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // missing tag list: start as a copy of compulsory\n    const missingTags = this.#compulsoryTags.slice();\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dataElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dataElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // check if compulsory tag, if present remove from missing list\n        const index = missingTags.indexOf(element.tag.getKey());\n        if (index !== -1) {\n          missingTags.splice(index, 1);\n        }\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        if (this.#fixUnknownVR) {\n          checkAndFixUnknownVR(element, !isBigEndian);\n        }\n\n        // update value and vl\n        this.#setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // add compulsory tags to output data if not present\n    for (const key of missingTags) {\n      const tag = getTagFromKey(key);\n      const dataElement = new DataElement(tag.getVrFromDictionary());\n      dataElement.tag = tag;\n      // rules are indexed by key or tag name\n      let value;\n      if (typeof this.#rules[key] !== 'undefined') {\n        value = this.#rules[key].value;\n      } else {\n        const name = tag.getNameFromDictionary();\n        value = this.#rules[name].value;\n      }\n      // add element\n      let size = getDataElementPrefixByteSize(dataElement.vr, isImplicit);\n      size += this.#setElementValue(dataElement, [value], isImplicit);\n      rawElements.push(dataElement);\n      totalSize += size;\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDataElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDataElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    const icUIDValue =\n      getUID('ImplementationClassUID').replace('-beta', '.99');\n    icUIDSize += this.#setElementValue(icUID, [icUIDValue], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDataElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const dwvVersion = getDwvVersion().replace('-beta', '.99');\n    const ivnValue = 'DWV_' + dwvVersion;\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDataElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.#setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.#writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.#writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {DataElement} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  #setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = [];\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // possible local bitsAllocated\n          let sqBitsAllocated = bitsAllocated;\n          const dataElement = oldItemElements[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.#setElementValue(\n              subElement, subElement.value, isImplicit, sqBitsAllocated);\n            newItemElements.push(subElement);\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          newItemElements.push(itemElement);\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          // sort\n          const elemSortFunc = function (a, b) {\n            return tagCompareFunction(a.tag, b.tag);\n          };\n          newItemElements.sort(elemSortFunc);\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this.#encodeSpecialString(value.join('\\\\'));\n            pad = this.#encodeSpecialString(padStr);\n          } else {\n            value = this.#encodeString(value.join('\\\\'));\n            pad = this.#encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw new Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw new Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: replace \"UN\" with correct VR if the\n * element exists in dictionary.\n *\n * @param {DataElement} element The DICOM element.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n */\nfunction checkAndFixUnknownVR(element, isLittleEndian) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      // cast typed array value from Uint8 to vr type\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined' &&\n        vrType !== 'Uint8' &&\n        vrType !== 'string') {\n        const data = getUint8ToVrValue(\n          element.value, element.vr, isLittleEndian);\n        if (typeof data !== 'undefined') {\n          element.value = data;\n        }\n      }\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get the casted typed array value from Uint8 to vr type.\n *\n * @param {object} value The value to cast.\n * @param {string} vr The DICOM element VR.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n * @returns {object} The element value casted to the vr type.\n */\nfunction getUint8ToVrValue(value, vr, isLittleEndian) {\n  let data;\n  if (typeof value.buffer === 'undefined') {\n    return data;\n  }\n  const reader = new DataReader(value.buffer, isLittleEndian);\n  const offset = value.byteOffset;\n  const vl = value.length; // size before cast\n  const vrType = vrTypes[vr];\n  if (vrType === 'Uint16') {\n    data = reader.readUint16Array(offset, vl);\n  } else if (vrType === 'Uint32') {\n    data = reader.readUint32Array(offset, vl);\n  } else if (vrType === 'Uint64') {\n    data = reader.readUint64Array(offset, vl);\n  } else if (vrType === 'Int16') {\n    data = Array.from(reader.readInt16Array(offset, vl));\n  } else if (vrType === 'Int32') {\n    data = Array.from(reader.readInt32Array(offset, vl));\n  } else if (vrType === 'Int64') {\n    data = reader.readInt64Array(offset, vl);\n  } else if (vrType === 'Float32') {\n    data = Array.from(reader.readFloat32Array(offset, vl));\n  } else if (vrType === 'Float64') {\n    data = Array.from(reader.readFloat64Array(offset, vl));\n  }\n  return data;\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {DataElement} The DICOM element.\n */\nfunction getDataElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  const element = new DataElement(tag.getVrFromDictionary());\n  element.tag = tag;\n  return element;\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a 'simple' DICOM tags object.\n * The input object is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags. See synthetic test data (in tests/dicom) for examples.\n *\n * @param {Object<string, any>} simpleTags The 'simple' DICOM\n *   tags object.\n * @returns {Object<string, DataElement>} The DICOM elements.\n */\nexport function getElementsFromJSONTags(simpleTags) {\n  const keys = Object.keys(simpleTags);\n  const dataElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (typeof tag === 'undefined') {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const simpleTag = simpleTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof simpleTag.undefinedLength !== 'undefined') {\n        undefinedLength = simpleTag.undefinedLength;\n      }\n      if (typeof simpleTag.value !== 'undefined' &&\n        simpleTag.value !== null) {\n        for (let i = 0; i < simpleTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(simpleTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null simpleTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(simpleTag)) {\n        value = simpleTag;\n      } else {\n        value = [simpleTag];\n      }\n    }\n    // create element\n    const dataElement = new DataElement(vr);\n    dataElement.tag = tag;\n    dataElement.value = value;\n    if (undefinedLength) {\n      dataElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dataElements[tag.getKey()] = dataElement;\n  }\n  // return\n  // @ts-expect-error\n  return dataElements;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM code tag keys.\n */\nconst TagKeys = {\n  CodeValue: '00080100',\n  CodingSchemeDesignator: '00080102',\n  CodeMeaning: '00080104',\n  LongCodeValue: '00080119',\n  URNCodeValue: '00080120'\n};\n\n/**\n * DICOM code: item of a basic code sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_8.8.html}.\n */\nexport class DicomCode {\n  /**\n   * Code meaning.\n   *\n   * @type {string}\n   */\n  meaning;\n  /**\n   * Code value.\n   *\n   * @type {string|undefined}\n   */\n  value;\n  /**\n   * Long code value.\n   *\n   * @type {string|undefined}\n   */\n  longValue;\n  /**\n   * URN code value.\n   *\n   * @type {string|undefined}\n   */\n  urnValue;\n  /**\n   * Coding scheme designator.\n   *\n   * @type {string|undefined}\n   */\n  schemeDesignator;\n\n  /**\n   * @param {string} meaning The code meaning.\n   */\n  constructor(meaning) {\n    this.meaning = meaning;\n  }\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The code as string.\n   */\n  toString() {\n    return '(' + this.value + ', ' +\n      this.schemeDesignator + ', \\'' +\n      this.meaning + '\\')';\n  }\n}\n\n/**\n * Check if two code objects are equal.\n *\n * @param {DicomCode} code1 The first code.\n * @param {DicomCode} code2 The second code.\n * @returns {boolean} True if both codes are equal.\n */\nexport function isEqualCode(code1, code2) {\n  return Object.keys(code1).length === Object.keys(code2).length &&\n  Object.keys(code1).every(key =>\n    Object.prototype.hasOwnProperty.call(code2, key) &&\n    code1[key] === code2[key]\n  );\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomCode} A code object.\n */\nexport function getCode(dataElements) {\n  // meaning -> CodeMeaning (type1)\n  const code = new DicomCode(dataElements[TagKeys.CodeMeaning].value[0]);\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (typeof dataElements[TagKeys.CodeValue] !== 'undefined') {\n    code.value = dataElements[TagKeys.CodeValue].value[0];\n  } else if (typeof dataElements[TagKeys.LongCodeValue] !== 'undefined') {\n    code.longValue = dataElements[TagKeys.LongCodeValue].value[0];\n  } else if (typeof dataElements[TagKeys.URNCodeValue] !== 'undefined') {\n    code.urnValue = dataElements[TagKeys.URNCodeValue].value[0];\n  } else {\n    throw new Error(\n      'Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (typeof dataElements[TagKeys.CodingSchemeDesignator] !== 'undefined') {\n      code.schemeDesignator =\n        dataElements[TagKeys.CodingSchemeDesignator].value[0];\n    } else {\n      throw new Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a simple dicom element item from a code object.\n *\n * @param {DicomCode} code The code object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomCodeItem(code) {\n  // dicom item (tags are in group/element order)\n  const codeItem = {};\n  // value\n  if (typeof code.value !== 'undefined') {\n    codeItem.CodeValue = code.value;\n  } else if (typeof code.longValue !== 'undefined') {\n    codeItem.LongCodeValue = code.longValue;\n  } else if (typeof code.urnValue !== 'undefined') {\n    codeItem.URNCodeValue = code.urnValue;\n  }\n  // CodingSchemeDesignator\n  if (typeof code.schemeDesignator !== 'undefined') {\n    codeItem.CodingSchemeDesignator = code.schemeDesignator;\n  }\n  // CodeMeaning\n  codeItem.CodeMeaning = code.meaning;\n  // return\n  return codeItem;\n}","import {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab,\n  labToUintLab,\n  srgbToCielab\n} from '../utils/colour';\nimport {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {RGB} from '../utils/colour';\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM (mask) segment: item of a SegmentSequence (0062,0002).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.8.20.4.html}.\n */\nexport class MaskSegment {\n  /**\n   * Segment number (0062,0004).\n   *\n   * @type {number}\n   */\n  number;\n  /**\n   * Segment label (0062,0005).\n   *\n   * @type {string}\n   */\n  label;\n  /**\n   * Segment algorithm type (0062,0008).\n   *\n   * @type {string}\n   */\n  algorithmType;\n  /**\n   * Segment algorithm name (0062,0009).\n   *\n   * @type {string|undefined}\n   */\n  algorithmName;\n  /**\n   * Segment display value as simple value.\n   *\n   * @type {number|undefined}\n   */\n  displayValue;\n  /**\n   * Segment display value as RGB colour ({r,g,b}).\n   *\n   * @type {RGB|undefined}\n   */\n  displayRGBValue;\n  /**\n   * Segment property code: specific property\n   * the segment represents (0062,000F).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyTypeCode;\n  /**\n   * Segment property category code: general category\n   * of the property the segment represents (0062,0003).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyCategoryCode;\n  /**\n   * Segment tracking UID (0062,0021).\n   *\n   * @type {string|undefined}\n   */\n  trackingUid;\n  /**\n   * Segment tracking id: text label for the UID (0062,0020).\n   *\n   * @type {string|undefined}\n   */\n  trackingId;\n\n  /**\n   * @param {number} number The segment number.\n   * @param {string} label The segment label.\n   * @param {string} algorithmType The segment number.\n   */\n  constructor(number, label, algorithmType) {\n    this.number = number;\n    this.label = label;\n    this.algorithmType = algorithmType;\n  }\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MaskSegment} A segment object.\n */\nexport function getSegment(dataElements) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = new MaskSegment(\n    dataElements['00620004'].value[0],\n    dataElements['00620005'] ? dataElements['00620005'].value[0] : 'n/a',\n    dataElements['00620008'].value[0]\n  );\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (dataElements['00620009']) {\n    segment.algorithmName = dataElements['00620009'].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof dataElements['0062000C'] !== 'undefined') {\n    segment.displayValue = dataElements['006200C'].value[0];\n  } else if (typeof dataElements['0062000D'] !== 'undefined') {\n    const cielabElement = dataElements['0062000D'].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayRGBValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof dataElements['00620003'] !== 'undefined') {\n    segment.propertyCategoryCode =\n      getCode(dataElements['00620003'].value[0]);\n  } else {\n    throw new Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof dataElements['0062000F'] !== 'undefined') {\n    segment.propertyTypeCode =\n      getCode(dataElements['0062000F'].value[0]);\n  } else {\n    throw new Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof dataElements['00620020'] !== 'undefined') {\n    segment.trackingId = dataElements['00620020'].value[0];\n    segment.trackingUid = dataElements['00620021'].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isEqual = isEqual &&\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isEqual = false;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isSimilar = false;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a dicom simple tag from a segment object.\n *\n * @param {MaskSegment} segment The segment object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentItem(segment) {\n  let algoType = segment.algorithmType;\n  if (algoType === undefined) {\n    algoType = 'MANUAL';\n  }\n  // dicom item (tags are in group/element order)\n  const segmentItem = {\n    SegmentNumber: segment.number,\n    SegmentLabel: segment.label,\n    SegmentAlgorithmType: algoType\n  };\n  // SegmentAlgorithmName\n  if (algoType !== 'MANUAL' && segment.algorithmName !== undefined) {\n    segmentItem.SegmentAlgorithmName = segment.algorithmName;\n  }\n  // RecommendedDisplay value\n  if (segment.displayRGBValue) {\n    const cieLab = labToUintLab(srgbToCielab(segment.displayRGBValue));\n    segmentItem.RecommendedDisplayCIELabValue = [\n      Math.round(cieLab.l),\n      Math.round(cieLab.a),\n      Math.round(cieLab.b)\n    ];\n  } else {\n    segmentItem.RecommendedDisplayGrayscaleValue = segment.displayValue;\n  }\n  // SegmentedPropertyCategoryCodeSequence\n  if (segment.propertyCategoryCode) {\n    segmentItem.SegmentedPropertyCategoryCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyCategoryCode)]\n    };\n  }\n  // SegmentedPropertyTypeCodeSequence\n  if (segment.propertyTypeCode) {\n    segmentItem.SegmentedPropertyTypeCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyTypeCode)]\n    };\n  }\n  // tracking\n  if (segment.trackingId) {\n    segmentItem.TrackingID = segment.trackingId;\n    segmentItem.TrackingUID = segment.trackingUid;\n  }\n  // return\n  return segmentItem;\n}\n","import {getSpacingFromMeasure} from './dicomElementsWrapper';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {Spacing} from '../image/spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM segment frame info: item of a\n *  PerframeFunctionalGroupsSequence (5200,9230).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.16.html}.\n */\nexport class DicomSegmentFrameInfo {\n  /**\n   * The dimension index.\n   *\n   * @type {number[]}\n   */\n  dimIndex;\n  /**\n   * The frame image position patient.\n   *\n   * @type {number[]}\n   */\n  imagePosPat;\n  /**\n   * List of derivation images.\n   *\n   * @type {Array}\n   */\n  derivationImages;\n  /**\n   * The reference segment number.\n   *\n   * @type {number}\n   */\n  refSegmentNumber;\n\n  /**\n   * The frame image orientation.\n   *\n   * @type {number[]|undefined}\n   */\n  imageOrientationPatient;\n  /**\n   * The frame spacing.\n   *\n   * @type {Spacing|undefined}\n   */\n  spacing;\n\n  /**\n   * @param {number[]} dimIndex The dimension index.\n   * @param {number[]} imagePosPat The frame image position patient.\n   * @param {Array} derivationImages List of derivation images.\n   * @param {number} refSegmentNumber The reference segment number.\n   */\n  constructor(dimIndex, imagePosPat, derivationImages, refSegmentNumber) {\n    this.dimIndex = dimIndex;\n    this.imagePosPat = imagePosPat;\n    this.derivationImages = derivationImages;\n    this.refSegmentNumber = refSegmentNumber;\n  }\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSegmentFrameInfo} A frame information object.\n */\nexport function getSegmentFrameInfo(dataElements) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof dataElements['00089124'] !== 'undefined') {\n    const derivationImageSq = dataElements['00089124'].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j]['00081150'].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j]['00081155'].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push({\n        sourceImages: sourceImages\n      });\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = dataElements['00209111'].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0]['00209157'].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = dataElements['0062000A'].value;\n  // Referenced Segment Number\n  const refSegmentNumber = parseInt(segmentIdSq[0]['0062000B'].value[0], 0);\n  // Plane Position Sequence (required, only one)\n  const planePosSq = dataElements['00209113'].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0]['00200032'].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = new DicomSegmentFrameInfo(\n    dimIndex,\n    imagePosPat,\n    derivationImages,\n    refSegmentNumber\n  );\n  // Plane Orientation Sequence\n  if (typeof dataElements['00209116'] !== 'undefined') {\n    const framePlaneOrientationSeq = dataElements['00209116'];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0]['00200037'].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof dataElements['00289110'] !== 'undefined') {\n    const framePixelMeasuresSeq = dataElements['00289110'];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Check if two frame info objects are equal.\n *\n * @param {DicomSegmentFrameInfo} dsfi1 The first frame info.\n * @param {DicomSegmentFrameInfo} dsfi2 The second frame info.\n * @returns {boolean} True if both frame info are equal.\n */\nexport function isEqualSegmentFrameInfo(dsfi1, dsfi2) {\n  // basics\n  if (typeof dsfi1 === 'undefined' ||\n    typeof dsfi2 === 'undefined' ||\n    dsfi1 === null ||\n    dsfi2 === null) {\n    return false;\n  }\n  let isEqual =\n    arrayEquals(dsfi1.dimIndex, dsfi2.dimIndex) &&\n    arrayEquals(dsfi1.imagePosPat, dsfi2.imagePosPat) &&\n    dsfi1.refSegmentNumber === dsfi2.refSegmentNumber;\n\n  isEqual = isEqual &&\n    dsfi1.derivationImages.length === dsfi2.derivationImages.length;\n  for (let i = 0; i < dsfi1.derivationImages.length; ++i) {\n    const derivationImage1 = dsfi1.derivationImages[i];\n    const derivationImage2 = dsfi2.derivationImages[i];\n    isEqual = isEqual &&\n      derivationImage1.sourceImages.length ===\n        derivationImage2.sourceImages.length;\n    for (let j = 0; j < derivationImage1.length; ++j) {\n      const sourceImage1 = derivationImage1.sourceImages[j];\n      const sourceImage2 = derivationImage2.sourceImages[j];\n      isEqual = isEqual &&\n        sourceImage1.referencedSOPClassUID ===\n          sourceImage2.referencedSOPClassUID &&\n        sourceImage1.referencedSOPInstanceUID ===\n          sourceImage2.referencedSOPInstanceUID;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Get a dicom item from a frame information object.\n *\n * @param {object} frameInfo The frame information object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentFrameInfoItem(frameInfo) {\n  const item = {\n    FrameContentSequence: {\n      value: [\n        {\n          DimensionIndexValues: frameInfo.dimIndex\n        }\n      ]\n    },\n    PlanePositionSequence: {\n      value: [\n        {\n          ImagePositionPatient: frameInfo.imagePosPat\n        }\n      ]\n    },\n    SegmentIdentificationSequence: {\n      value: [\n        {\n          ReferencedSegmentNumber: frameInfo.refSegmentNumber\n        }\n      ]\n    }\n  };\n  // optional DerivationImageSequence\n  if (frameInfo.derivationImages !== undefined) {\n    const sourceImgPurposeOfReferenceCode = {\n      CodeMeaning: 'Source image for image processing operation',\n      CodeValue: 121_322,\n      CodingSchemeDesignator: 'DCM'\n    };\n    const segDerivationCode = {\n      CodeMeaning: 'Segmentation',\n      CodeValue: 113_076,\n      CodingSchemeDesignator: 'DCM'\n    };\n\n    const derivationImageItems = [];\n    for (const derivationImage of frameInfo.derivationImages) {\n      const sourceImages = [];\n      for (const sourceImage of derivationImage.sourceImages) {\n        sourceImages.push({\n          PurposeOfReferenceCodeSequence: {\n            value: [sourceImgPurposeOfReferenceCode]\n          },\n          ReferencedSOPClassUID: sourceImage.referencedSOPClassUID,\n          ReferencedSOPInstanceUID: sourceImage.referencedSOPInstanceUID\n        });\n      }\n\n      derivationImageItems.push({\n        DerivationCodeSequence: {\n          value: [segDerivationCode]\n        },\n        SourceImageSequence: {\n          value: sourceImages\n        }\n      });\n    }\n\n    item.DerivationImageSequence = {\n      value: derivationImageItems\n    };\n  }\n\n  return item;\n}\n","import {\n  dateToDateObj,\n  getDicomDate,\n  dateToTimeObj,\n  getDicomTime,\n} from '../dicom/dicomDate';\nimport {\n  getImage2DSize,\n  getSpacingFromMeasure,\n  getDimensionOrganization,\n  getDicomMeasureItem,\n  getDicomPlaneOrientationItem\n} from '../dicom/dicomElementsWrapper';\nimport {Tag} from '../dicom/dicomTag';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {\n  getSegment,\n  getDicomSegmentItem,\n} from '../dicom/dicomSegment';\nimport {\n  getSegmentFrameInfo,\n  getDicomSegmentFrameInfoItem\n} from '../dicom/dicomSegmentFrameInfo';\nimport {transferSyntaxKeywords} from '../dicom/dictionary';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {Point, Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {Size} from './size';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Merge two tag lists.\n *\n * @param {object} tags1 Base list, will be modified.\n * @param {object} tags2 List to merge.\n */\nfunction mergeTags(tags1, tags2) {\n  const keys2 = Object.keys(tags2);\n  for (const tagName2 of keys2) {\n    if (tags1[tagName2] !== undefined) {\n      logger.trace('Overwritting tag: ' + tagName2);\n    }\n    tags1[tagName2] = tags2[tagName2];\n  }\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(dataElements, tagDefinition) {\n  const element = dataElements[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * Create ROI slice buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @param {number} sliceOffset The slice offset.\n * @returns {object} The ROI slice image buffers.\n */\nfunction createRoiSliceBuffers(\n  image,\n  segments,\n  sliceOffset\n) {\n  // access functions\n  const numberOfComponents = image.getNumberOfComponents();\n  const isRGB = numberOfComponents === 3;\n  let getPixelValue;\n  let equalValues;\n  if (isRGB) {\n    getPixelValue = function (inputOffset) {\n      return {\n        r: image.getValueAtOffset(inputOffset),\n        g: image.getValueAtOffset(inputOffset + 1),\n        b: image.getValueAtOffset(inputOffset + 2)\n      };\n    };\n    equalValues = function (value, segment) {\n      return (\n        segment.displayRGBValue !== undefined &&\n        value.r === segment.displayRGBValue.r &&\n        value.g === segment.displayRGBValue.g &&\n        value.b === segment.displayRGBValue.b\n      );\n    };\n  } else {\n    getPixelValue = function (inputOffset) {\n      return image.getValueAtOffset(inputOffset);\n    };\n    equalValues = function (value, segment) {\n      return value === segment.displayValue;\n    };\n  }\n\n  // create binary mask buffers\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n  const sliceSize = size.getDimSize(2);\n  const buffers = {};\n  for (let o = 0; o < sliceSize; ++o) {\n    const inputOffset = (sliceOffset + o) * numberOfComponents;\n    const pixelValue = getPixelValue(inputOffset);\n    for (const segment of segments) {\n      const number2 = segment.number - 1;\n      if (equalValues(pixelValue, segment)) {\n        if (buffers[number2] === undefined) {\n          buffers[number2] = new Uint8Array(sliceSize);\n        }\n        buffers[number2][o] = 1;\n      }\n    }\n  }\n  return buffers;\n}\n\n/**\n * Create ROI buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @returns {object} The ROI buffers.\n */\nfunction createRoiBuffers(image, segments) {\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n\n  // image buffer to multi frame\n  const sliceSize = size.getDimSize(2);\n  const roiBuffers = {};\n  for (let k = 0; k < size.get(2); ++k) {\n    const sliceOffset = k * sliceSize;\n    // create slice buffers\n    const buffers = createRoiSliceBuffers(image, segments, sliceOffset);\n    // store slice buffers\n    const keys0 = Object.keys(buffers);\n    for (const key0 of keys0) {\n      if (roiBuffers[key0] === undefined) {\n        roiBuffers[key0] = {};\n      }\n      // ordering by slice index (follows posPat)\n      roiBuffers[key0][k] = buffers[key0];\n    }\n  }\n  return roiBuffers;\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: '00020010',\n    type: '1',\n    enum: [\n      transferSyntaxKeywords.ImplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRBigEndian\n    ]\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: '00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: '00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: '00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: '00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: '00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: '00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: '00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: '00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: '00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: '00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nexport function getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {Object<string, DataElement>} _dicomElements The DICOM tags.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n    return;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dataElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dataElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dataElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dataElements);\n\n    // Segment Sequence\n    const segSequence = dataElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayRGBValue !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dataElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dataElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (spacing.length() !== 3) {\n      throw new Error('Incomplete spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n    if (imageOrientationPatient.length !== 6) {\n      throw new Error('Incomplete imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, spacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isAboveEpsilon = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isAboveEpsilon(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, spacing, orientationMatrix);\n    const uids = ['0'];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m.toString());\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = frameSegment.displayRGBValue.r;\n            buffer[offset + 1] = frameSegment.displayRGBValue.g;\n            buffer[offset + 2] = frameSegment.displayRGBValue.b;\n          } else {\n            buffer[offset] = frameSegment.displayValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n    // Study\n    meta.StudyDate = safeGet('00080020');\n    meta.StudyTime = safeGet('00080030');\n    meta.StudyInstanceUID = safeGet('0020000D');\n    meta.StudyID = safeGet('00200010');\n    // Series\n    meta.SeriesDate = safeGet('00080021');\n    meta.SeriesTime = safeGet('00080031');\n    meta.SeriesInstanceUID = safeGet('0020000E');\n    meta.SeriesNumber = safeGet('00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = safeGet('00080090');\n    // patient info\n    meta.PatientName = safeGet('00100010');\n    meta.PatientID = safeGet('00100020');\n    meta.PatientBirthDate = safeGet('00100030');\n    meta.PatientSex = safeGet('00100040');\n    // Enhanced General Equipment Module\n    meta.Manufacturer = safeGet('00080070');\n    meta.ManufacturerModelName = safeGet('00081090');\n    meta.DeviceSerialNumber = safeGet('00181000');\n    meta.SoftwareVersions = safeGet('00181020');\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dataElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dataElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dataElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n  /**\n   * Convert a mask image into a DICOM segmentation object.\n   *\n   * @param {Image} image The mask image.\n   * @param {MaskSegment[]} segments The mask segments.\n   * @param {Image} sourceImage The source image.\n   * @param {Object<string, any>} [extraTags] Optional list of extra tags.\n   * @returns {Object<string, DataElement>} A list of dicom elements.\n   */\n  toDicom(\n    image,\n    segments,\n    sourceImage,\n    extraTags\n  ) {\n    // original image tags\n    const tags = image.getMeta();\n\n    // use image segments if not provided as input\n    if (segments === undefined) {\n      segments = tags.segments;\n    }\n\n    const geometry = image.getGeometry();\n    const size = geometry.getSize();\n\n    // (not in meta)\n    tags.Rows = size.get(1);\n    tags.Columns = size.get(0);\n    // update content tags\n    const now = new Date();\n    tags.ContentDate = getDicomDate(dateToDateObj(now));\n    tags.ContentTime = getDicomTime(dateToTimeObj(now));\n\n    // keep source image StudyInstanceUID\n    if (sourceImage !== undefined) {\n      tags.StudyInstanceUID = (sourceImage.getMeta()).StudyInstanceUID;\n    }\n\n    // segments\n    const segmentItems = [];\n    for (const segment of segments) {\n      segmentItems.push(getDicomSegmentItem(segment));\n    }\n    tags.SegmentSequence = {\n      value: segmentItems\n    };\n\n    // Shared Functional Groups Sequence\n    tags.SharedFunctionalGroupsSequence = {\n      value: [\n        {\n          PlaneOrientationSequence: {\n            value: [getDicomPlaneOrientationItem(geometry.getOrientation())]\n          },\n          PixelMeasuresSequence: {\n            value: [getDicomMeasureItem(geometry.getSpacing())]\n          }\n        }\n      ]\n    };\n\n    // image buffer to multi frame\n    const roiBuffers = createRoiBuffers(image, segments);\n\n    const frameInfos = [];\n\n    // flatten buffer array\n    const finalBuffers = [];\n    const referencedSOPs = [];\n    for (const segment of segments) {\n      const number40 = segment.number;\n      const number4 = number40 - 1;\n      // check if buffer has values\n      if (roiBuffers[number4] === undefined) {\n        continue;\n      }\n      const keys1 = Object.keys(roiBuffers[number4]);\n      // revert slice order\n      for (let k1 = keys1.length - 1; k1 >= 0; --k1) {\n        const key1 = Number.parseInt(keys1[k1], 10);\n        finalBuffers.push(roiBuffers[number4][key1]);\n        // frame info\n        const posPat = image.getGeometry().getOrigins()[key1];\n        const posPatArray = [posPat.getX(), posPat.getY(), posPat.getZ()];\n        const frameInfo = {\n          dimIndex: [number40, keys1.length - k1],\n          imagePosPat: posPatArray,\n          refSegmentNumber: number40\n        };\n        // derivation image info\n        if (sourceImage !== undefined) {\n          const sourceGeometry = sourceImage.getGeometry();\n          const sourceIndex = sourceGeometry.worldToIndex(\n            new Point([posPat.getX(), posPat.getY(), posPat.getZ()])\n          );\n          frameInfo.derivationImages = [\n            {\n              sourceImages: [\n                {\n                  referencedSOPInstanceUID:\n                    sourceImage.getImageUid(sourceIndex),\n                  referencedSOPClassUID:\n                    (sourceImage.getMeta()).SOPClassUID\n                }\n              ]\n            }\n          ];\n          // store as tag\n          referencedSOPs.push({\n            ReferencedSOPInstanceUID:\n              sourceImage.getImageUid(sourceIndex),\n            ReferencedSOPClassUID:\n              (sourceImage.getMeta()).SOPClassUID\n          });\n        }\n        frameInfos.push(frameInfo);\n      }\n    }\n\n    tags.NumberOfFrames = finalBuffers.length.toString();\n\n    // frame infos\n    const frameInfosTag = [];\n    for (const frameInfo of frameInfos) {\n      frameInfosTag.push(getDicomSegmentFrameInfoItem(frameInfo));\n    }\n    tags.PerFrameFunctionalGroupsSequence = {\n      value: frameInfosTag\n    };\n\n    // also store referenced SOPs in ReferencedSeriesSequence\n    if (sourceImage !== undefined) {\n      const refSeriesTag = [];\n      refSeriesTag.push({\n        ReferencedInstanceSequence: {\n          value: referencedSOPs\n        },\n        SeriesInstanceUID: (sourceImage.getMeta()).SeriesInstanceUID\n      });\n      tags.ReferencedSeriesSequence = {\n        value: refSeriesTag\n      };\n    }\n\n    // merge extra tags if provided\n    if (extraTags !== undefined) {\n      mergeTags(tags, extraTags);\n    }\n\n    // convert JSON to DICOM element object\n    const dicomElements = getElementsFromJSONTags(tags);\n\n    // pixel value length: divide by 8 to trigger binary write\n    const sliceSize = size.getDimSize(2);\n    const pixVl = (finalBuffers.length * sliceSize) / 8;\n    const de = new DataElement('OB');\n    de.tag = new Tag('7FE0', '0010');\n    de.vl = pixVl;\n    de.value = finalBuffers;\n    dicomElements['7FE00010'] = de;\n\n    return dicomElements;\n  }\n\n} // class MaskFactory\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {arrayContains} from '../utils/array';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33} from '../math/matrix';\nimport {NumberRange} from '../math/stats';\nimport {DataElement} from '../dicom/dataElement';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Create an Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The Image object.\n */\nexport function createImage(elements) {\n  const factory = new ImageFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0],\n    1\n  );\n}\n\n/**\n * Create a mask Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The mask Image object.\n */\nexport function createMaskImage(elements) {\n  const factory = new MaskFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0]\n  );\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {string[]}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {RescaleSlopeAndIntercept[]}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (`0:RGBRGBRGBRGB...` or\n   *   `1:RRR...GGG...BBB...`).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {Object<string, any>}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {NumberRange}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {NumberRange}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {string[]} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Check if this image includes the input uids.\n   *\n   * @param {string[]} uids UIDs to test for presence.\n   * @returns {boolean} True if all uids are in this image uids.\n   */\n  containsImageUids(uids) {\n    return arrayContains(this.#imageUids, uids);\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo Dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {RescaleSlopeAndIntercept} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {RescaleSlopeAndIntercept} inRsi The input rescale\n   *   slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(this.#rsi);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {Object<string, any>} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {Object<string, any>} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|RGB} value The value to check.\n   * @returns {number[]} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this.#numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for getting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this.#numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for getting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== bufferValue[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {boolean[]} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   * @fires Image#imagegeometrychange\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key +\n          ': ' + this.#meta[key] + ' != ' + rhs.getMeta()[key]);\n      }\n    }\n\n    // update ranges\n    const rhsRange = rhs.getDataRange();\n    const range = this.getDataRange();\n    this.#dataRange = {\n      min: Math.min(rhsRange.min, range.min),\n      max: Math.max(rhsRange.max, range.max),\n    };\n    const rhsResRange = rhs.getRescaledDataRange();\n    const resRange = this.getRescaledDataRange();\n    this.#rescaledDataRange = {\n      min: Math.min(rhsResRange.min, resRange.min),\n      max: Math.max(rhsResRange.max, resRange.max),\n    };\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n    /**\n     * Image geometry change event.\n     *\n     * @event Image#imagegeometrychange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagegeometrychange'});\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {NumberRange} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {NumberRange} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[]} offsets List of offsets where to set the data.\n   * @param {number|RGB} value The value to set at the given offsets.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsets(offsets, value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this.#numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for setting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this.#numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for setting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        this.#buffer[offset + j] = bufferValue[j];\n      }\n    }\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists where\n   *   to set the data.\n   * @param {RGB} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists\n   *   where to set the data.\n   * @param {RGB|Array} value The value to set at the given offsets.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (Array.isArray(value)) {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      } else if (typeof value.r !== 'undefined' &&\n        typeof value.g !== 'undefined' &&\n        typeof value.b !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagecontentchange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {View} from './view';\nimport {luts} from './luts';\nimport {\n  WindowLevel,\n  defaultPresets\n} from './windowLevel';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dataElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setColourMap('invPlain');\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      if (typeof luts['palette'] !== 'undefined') {\n        view.setColourMap('palette');\n      } else {\n        logger.warn('Cannot find Palette lut');\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowLevel(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\nimport {ModalityLut} from './modalityLut';\nimport {WindowLut} from './windowLut';\nimport {luts} from './luts';\nimport {VoiLut} from './voiLut';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {ViewFactory} from './viewFactory';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ColourMap} from './luts';\nimport {Matrix33} from '../math/matrix';\nimport {\n  Point,\n  Point3D\n} from '../math/point';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {string[]}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourmapchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * Create a View from DICOM elements and image.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @param {Image} image The associated image.\n * @returns {View} The View object.\n */\nexport function createView(elements, image) {\n  const factory = new ViewFactory();\n  return factory.create(elements, image);\n}\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // create the view\n *   const view = dwv.createView(dicomParser.getDicomElements(), image);\n *   // setup canvas\n *   const canvas = document.createElement('canvas');\n *   canvas.width = 256;\n *   canvas.height = 256;\n *   const ctx = canvas.getContext(\"2d\");\n *   // update the image data\n *   const imageData = ctx.createImageData(256, 256);\n *   view.generateImageData(imageData);\n *   ctx.putImageData(imageData, 0, 0);\n *   // update html\n *   const div = document.getElementById('dwv');\n *   div.appendChild(canvas);;\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {WindowLut}\n   */\n  #windowLut;\n\n  /**\n   * Flag for image constant RSI.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI;\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {WindowLevel}\n   */\n  #currentWl;\n\n  /**\n   * Colour map name.\n   *\n   * @type {string}\n   */\n  #colourMapName = 'plain';\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {Matrix33}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to the middle position.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {number[]|number} _value The pixel value.\n   *   Can be a number for monochrome data or an array for RGB data.\n   * @param {number} _index The index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  #getCurrentWindowLut() {\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // check position\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      // get the slice window level\n      const currentIndex = this.getCurrentIndex();\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      const currentPreset = this.#windowPresets[this.#currentPresetName];\n      const sliceWl = currentPreset.wl[offset];\n      // set window level: will send a change event, mark it as silent as\n      // this change is always triggered by a position change\n      this.setWindowLevel(sliceWl, this.#currentPresetName, true);\n    }\n\n    // if no current, use first id\n    if (typeof this.#currentWl === 'undefined') {\n      this.setWindowLevelPresetById(0, true);\n    }\n\n    // get the window lut\n    if (typeof this.#isConstantRSI === 'undefined' ||\n      this.#image.isConstantRSI() !== this.#isConstantRSI) {\n      this.#isConstantRSI = this.#image.isConstantRSI();\n      // set or update windowLut if isConstantRSI has changed\n      // (can be different at first slice and after having loaded\n      //  the full volume...)\n      let rsi;\n      let isDiscrete;\n      if (this.#isConstantRSI) {\n        rsi = this.#image.getRescaleSlopeAndIntercept();\n        isDiscrete = true;\n      } else {\n        rsi = new RescaleSlopeAndIntercept(1, 0);\n        isDiscrete = false;\n      }\n      // create the rescale lookup table\n      const modalityLut = new ModalityLut(\n        rsi,\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      this.#windowLut = new WindowLut(\n        modalityLut,\n        this.#image.getMeta().IsSigned,\n        isDiscrete);\n    }\n\n    // update VOI lut if not present or its window level\n    // is different from the current one\n    const voiLut = this.#windowLut.getVoiLut();\n    let voiLutWl;\n    if (typeof voiLut !== 'undefined') {\n      voiLutWl = voiLut.getWindowLevel();\n    }\n    if (typeof voiLut === 'undefined' ||\n      !this.#currentWl.equals(voiLutWl)) {\n      // set lut window level\n      const voiLut = new VoiLut(this.#currentWl);\n      this.#windowLut.setVoiLut(voiLut);\n    }\n\n    // return\n    return this.#windowLut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {string[]} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n          this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          // update existing\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#currentPresetName;\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#colourMapName;\n  }\n\n  /**\n   * Get the colour map object.\n   *\n   * @returns {ColourMap} The colour map.\n   */\n  #getColourMapLut() {\n    return luts[this.#colourMapName];\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {string} name The colour map name.\n   * @fires View#colourmapchange\n   */\n  setColourMap(name) {\n    // check if we have it\n    if (!luts[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n\n    this.#colourMapName = name;\n\n    /**\n     * Color change event.\n     *\n     * @event View#colourmapchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'colourmapchange',\n      value: [name]\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} silent Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        this.#currentPosition = position;\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        this.#currentPosition = position;\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {number[]} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(wl, name, silent) {\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (name !== 'manual' &&\n      typeof this.#windowPresets[name] === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // check if new wl\n    const isNewWl = !wl.equals(this.#currentWl);\n    // check if new name\n    const isNewName = this.#currentPresetName !== name;\n\n    // compare to previous if present\n    if (isNewWl || isNewName) {\n      // assign\n      this.#currentWl = wl;\n      this.#currentPresetName = name;\n\n      // update manual\n      if (name === 'manual') {\n        if (typeof this.#windowPresets[name] !== 'undefined') {\n          this.#windowPresets[name].wl[0] = wl;\n        } else {\n          // add if not present\n          this.addWindowPresets({\n            manual: {\n              wl: [wl],\n              name: 'manual'\n            }\n          });\n        }\n      }\n\n      /**\n       * Window/level change event.\n       *\n       * @event View#wlchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       * @property {number} wc The new window center value.\n       * @property {number} ww The new window wdth value.\n       * @property {boolean} skipGenerate Flag to skip view generation.\n       */\n      this.#fireEvent({\n        type: 'wlchange',\n        value: [wl.center, wl.width, name],\n        wc: wl.center,\n        ww: wl.width,\n        skipGenerate: silent\n      });\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    // same as #currentWl...\n    const windowLut = this.#getCurrentWindowLut();\n    return windowLut.getVoiLut().getWindowLevel();\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(wl, name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {WindowLevel} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl, 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const isRescaled = !image.isConstantRSI();\n    const iterator = getSliceIterator(\n      image, index, isRescaled, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.#getCurrentWindowLut(),\n        this.#getColourMapLut()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.#getColourMapLut(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class View\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLut} from './windowLut';\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {WindowLut} windowLut The window/level LUT.\n * @param {ColourMap} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {ColourMap} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {getTargetOrientation} from '../gui/layerGroup';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Spacing} spacing The spacing.\n   * @param {Matrix33} imageOrientation The image oientation.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(spacing, imageOrientation, viewOrientation) {\n    this.#spacing = spacing;\n    this.#imageOrientation = imageOrientation;\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {Scalar3D} offset3D The 3D offset as {x,y,z}.\n   * @returns {Scalar2D} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this.#viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this.#viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {Scalar3D} values Values as {x,y,z}.\n   * @returns {Scalar3D} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {getIdentityMat33} from '../math/matrix';\nimport {getCoronalMat33} from '../math/orientation';\nimport {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {precisionRound} from '../utils/string';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Point2D, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerId The lyaer id.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerId) {\n  return groupDivId + '-layer-' + layerId;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerId: split[1]\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {Scalar2D} offset The previous offset as {x,y}.\n * @param {Scalar2D} scale The previous scale as {x,y}.\n * @param {Scalar2D} newScale The new scale as {x,y}.\n * @param {Scalar2D} center The scale center as {x,y}.\n * @returns {Scalar2D} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * - Display position: {x,y},\n * - Plane position: Index (access: get(i)),\n * - (world) Position: Point3D (access: getX, getY, getZ).\n *\n * Display -> World:\n * - planePos = viewLayer.displayToPlanePos(displayPos)\n *   -> compensate for layer scale and offset,\n * - pos = viewController.getPositionFromPlanePoint(planePos).\n *\n * World -> Display:\n * - planePos = viewController.getOffset3DFromPlaneOffset(pos)\n *   no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  // jsdoc does not like\n  // @type {(ViewLayer|DrawLayer)[]}\n\n  /**\n   * List of layers.\n   *\n   * @type {Array<ViewLayer|DrawLayer>}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y,z}: all posterior scale will be on top of this one.\n   *\n   * @type {Scalar3D}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  #activeViewLayerIndex = undefined;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  #activeDrawLayerIndex = undefined;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * Crosshair HTML elements.\n   *\n   * @type {HTMLElement[]}\n   */\n  #crosshairHtmlElements = [];\n\n  /**\n   * Tooltip HTML element.\n   *\n   * @type {HTMLElement}\n   */\n  #tooltipHtmlElement;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layers\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.setImageSmoothing(flag);\n      }\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the added scale: the scale added to the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined') {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Check if this layerGroup contains a layer with the input id.\n   *\n   * @param {string} id The layer id to look for.\n   * @returns {boolean} True if this group contains\n   *   a layer with the input id.\n   */\n  includes(id) {\n    if (typeof id === 'undefined') {\n      return false;\n    }\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getId() === id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the number of view layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfViewLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined' &&\n        item instanceof ViewLayer) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getActiveViewLayer() {\n    let layer;\n    if (typeof this.#activeViewLayerIndex !== 'undefined') {\n      const tmpLayer = this.#layers[this.#activeViewLayerIndex];\n      if (tmpLayer instanceof ViewLayer) {\n        layer = tmpLayer;\n      }\n    } else {\n      logger.info('No active view layer to return');\n    }\n    return layer;\n  }\n\n  /**\n   * Get the base view layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getBaseViewLayer() {\n    let layer;\n    if (this.#layers[0] instanceof ViewLayer) {\n      layer = this.#layers[0];\n    }\n    return layer;\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        layer.getDataId() === dataId) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        if (layer.getViewController().equalImageMeta(meta)) {\n          res.push(layer);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {string[]} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        res.push(layer.getDataId());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer|undefined} The layer.\n   */\n  getActiveDrawLayer() {\n    let layer;\n    if (typeof this.#activeDrawLayerIndex !== 'undefined') {\n      const tmpLayer = this.#layers[this.#activeDrawLayerIndex];\n      if (tmpLayer instanceof DrawLayer) {\n        layer = tmpLayer;\n      }\n    } else {\n      logger.info('No active draw layer to return');\n    }\n    return layer;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof DrawLayer &&\n        layer.getDataId() === dataId) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    if (this.#layers[index] instanceof ViewLayer) {\n      this.#activeViewLayerIndex = index;\n      /**\n       * Active view layer change event.\n       *\n       * @event LayerGroup#activeviewlayerchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       */\n      this.#fireEvent({\n        type: 'activelayerchange',\n        value: [this.#layers[index]]\n      });\n    } else {\n      logger.warn('No view layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active view layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveViewLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveViewLayer(index);\n    } else {\n      logger.warn('No view layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveDrawLayer(index) {\n    if (this.#layers[index] instanceof DrawLayer) {\n      this.#activeDrawLayerIndex = index;\n      this.#fireEvent({\n        type: 'activelayerchange',\n        value: [this.#layers[index]]\n      });\n    } else {\n      logger.warn('No draw layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active draw layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveDrawLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveDrawLayer(index);\n    } else {\n      logger.warn('No draw layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * The new layer will be marked as the active view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    layer.setImageSmoothing(this.#imageSmoothing);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * The new layer will be marked as the active draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.addEventListener(eventName, this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to unbind.\n   */\n  #unbindViewLayer(viewLayer) {\n    // stop listening to position change to update other group layers\n    viewLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // stop propagating view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.removeEventListener(eventName, this.#fireEvent);\n    }\n    // stop propagating viewLayer events\n    viewLayer.removeEventListener('renderstart', this.#fireEvent);\n    viewLayer.removeEventListener('renderend', this.#fireEvent);\n\n    // stop view layer - image binding\n    // (binding is done in layer.setView)\n    viewLayer.unbindImage();\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to unbind.\n   */\n  #unbindDrawLayer(drawLayer) {\n    // propagate drawLayer events\n    drawLayer.removeEventListener('drawcreate', this.#fireEvent);\n    drawLayer.removeEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = undefined;\n    this.#activeDrawLayerIndex = undefined;\n    // remove possible crosshair\n    this.#removeCrosshairDiv();\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getDataId() === dataId) {\n        this.removeLayer(layer);\n      }\n    }\n  }\n\n  /**\n   * Remove a layer from this layer group.\n   * Warning: if current active layer, the index will\n   *   be set to `undefined`. Call one of the setActive\n   *   methods to define the active index.\n   *\n   * @param {ViewLayer | DrawLayer} layer The layer to remove.\n   */\n  removeLayer(layer) {\n    // find layer\n    const index = this.#layers.findIndex((item) => item === layer);\n    if (index === -1) {\n      throw new Error('Cannot find layer to remove');\n    }\n    // unbind and update active index\n    if (layer instanceof ViewLayer) {\n      this.#unbindViewLayer(layer);\n      if (this.#activeViewLayerIndex === index) {\n        if (index - 2 >= 0) {\n          this.setActiveViewLayer(index - 2);\n        } else {\n          this.#activeViewLayerIndex = undefined;\n        }\n      }\n    } else {\n      // delete layer draws\n      const numberOfDraws = layer.getNumberOfDraws();\n      if (typeof numberOfDraws !== 'undefined') {\n        let count = 0;\n        layer.addEventListener('drawdelete', (_event) => {\n          ++count;\n          // unbind when all draw are deleted\n          if (count === numberOfDraws) {\n            this.#unbindDrawLayer(layer);\n          }\n        });\n      }\n      layer.deleteDraws();\n      if (typeof numberOfDraws === 'undefined') {\n        this.#unbindDrawLayer(layer);\n      }\n      // reset active index\n      if (this.#activeDrawLayerIndex === index) {\n        if (index - 2 >= 0) {\n          this.setActiveDrawLayer(index - 2);\n        } else {\n          this.#activeDrawLayerIndex = undefined;\n        }\n      }\n    }\n    // reset in storage\n    this.#layers[index] = undefined;\n    // update html\n    layer.removeFromDOM();\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer to show crosshair');\n      return;\n    }\n\n    const vc = baseLayer.getViewController();\n    const planePos = vc.getPlanePositionFromPosition(position);\n    const displayPos = baseLayer.planePosToDisplay(planePos);\n\n    // horizontal line\n    if (typeof displayPos.getY() !== 'undefined') {\n      const lineH = document.createElement('hr');\n      lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n      lineH.className = 'horizontal';\n      lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n      lineH.style.left = '0px';\n      lineH.style.top = displayPos.getY() + 'px';\n      // add to local array\n      this.#crosshairHtmlElements.push(lineH);\n      // add to html\n      this.#containerDiv.appendChild(lineH);\n    }\n\n    // vertical line\n    if (typeof displayPos.getX() !== 'undefined') {\n      const lineV = document.createElement('hr');\n      lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n      lineV.className = 'vertical';\n      lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n      lineV.style.left = (displayPos.getX()) + 'px';\n      lineV.style.top = '0px';\n      // add to local array\n      this.#crosshairHtmlElements.push(lineV);\n      // add to html\n      this.#containerDiv.appendChild(lineV);\n    }\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    for (const element of this.#crosshairHtmlElements) {\n      element.remove();\n    }\n    this.#crosshairHtmlElements = [];\n  }\n\n  /**\n   * Displays a tooltip in a temporary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {Point2D} point The update point.\n   */\n  showTooltip(point) {\n    // remove previous div\n    this.removeTooltipDiv();\n\n    const viewLayer = this.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // tooltip position\n      span.style.left = (point.getX() + 10) + 'px';\n      span.style.top = (point.getY() + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n      // add to local var\n      this.#tooltipHtmlElement = span;\n      // add to html\n      this.#containerDiv.appendChild(span);\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  removeTooltipDiv() {\n    if (typeof this.#tooltipHtmlElement !== 'undefined') {\n      this.#tooltipHtmlElement.remove();\n      this.#tooltipHtmlElement = undefined;\n    }\n  }\n\n\n  /**\n   * Test if one of the view layers satisfies an input callbackFn.\n   *\n   * @param {Function} callbackFn A function that takes a ViewLayer as input\n   *   and returns a boolean.\n   * @returns {boolean} True if one of the ViewLayers satisfies the callbackFn.\n   */\n  someViewLayer(callbackFn) {\n    let hasOne = false;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        callbackFn(layer)) {\n        hasOne = true;\n        break;\n      }\n    }\n    return hasOne;\n  }\n\n  /**\n   * Can the input position be set on one of the view layers.\n   *\n   * @param {Point} position The input position.\n   * @returns {boolean} True if one view layer accepts the input position.\n   */\n  isPositionInBounds(position) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().isPositionInBounds(position);\n    });\n  }\n\n  /**\n   * Can one of the view layers be scrolled.\n   *\n   * @returns {boolean} True if one view layer can be scrolled.\n   */\n  canScroll() {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().canScroll();\n    });\n  }\n\n  /**\n   * Does one of the view layer have more than one slice in the\n   *   given dimension.\n   *\n   * @param {number} dim The input dimension.\n   * @returns {boolean} True if one view layer has more than one slice.\n   */\n  moreThanOne(dim) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().moreThanOne(dim);\n    });\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   * @function\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    let baseViewLayerOrigin0;\n    let baseViewLayerOrigin;\n    let scrollOffset;\n    let planeOffset;\n    // update position for all layers except the source one\n    for (const layer of this.#layers) {\n      if (typeof layer === 'undefined') {\n        continue;\n      }\n\n      // update base offset (does not trigger redraw)\n      let hasSetOffset = false;\n      if (layer instanceof ViewLayer) {\n        const vc = layer.getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        if (typeof baseViewLayerOrigin === 'undefined') {\n          // first view layer, store origins\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n          // no offset\n          scrollOffset = new Vector3D(0, 0, 0);\n          planeOffset = new Vector3D(0, 0, 0);\n        } else {\n          if (vc.isPositionInBounds(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n          }\n        }\n      }\n\n      // also set for draw layers\n      // (should be next after a view layer)\n      if (typeof scrollOffset !== 'undefined' &&\n        typeof planeOffset !== 'undefined') {\n        hasSetOffset =\n          layer.setBaseOffset(\n            scrollOffset, planeOffset,\n            baseViewLayerOrigin, baseViewLayerOrigin0\n          );\n      }\n\n      // reset to not propagate after draw layer\n      // TODO: revise, could be unstable...\n      if (layer instanceof DrawLayer) {\n        scrollOffset = undefined;\n        planeOffset = undefined;\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (layer.getId() !== event.srclayerid) {\n        hasSetPos = layer.setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        layer.draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the div to world size ratio needed to fit\n   *   the largest data.\n   *\n   * @returns {number|undefined} The ratio.\n   */\n  getDivToWorldSizeRatio() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max world size\n    const maxWorldSize = this.getMaxWorldSize();\n    if (typeof maxWorldSize === 'undefined') {\n      return undefined;\n    }\n    // if the container has a width but no height,\n    // resize it to follow the same ratio to completely\n    // fill the div with the image\n    if (this.#containerDiv.offsetHeight === 0) {\n      const ratioX = this.#containerDiv.offsetWidth / maxWorldSize.x;\n      const height = maxWorldSize.y * ratioX;\n      this.#containerDiv.style.height = height + 'px';\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxWorldSize.x,\n      this.#containerDiv.offsetHeight / maxWorldSize.y\n    );\n  }\n\n  /**\n   * Fit to container: set the layers div to world size ratio.\n   *\n   * @param {number} divToWorldSizeRatio The ratio.\n   */\n  fitToContainer(divToWorldSizeRatio) {\n    // get maximum world size\n    const maxWorldSize = this.getMaxWorldSize();\n    // exit if none\n    if (typeof maxWorldSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 *\n        (containerSize.x - Math.floor(maxWorldSize.x * divToWorldSizeRatio)),\n      y: -0.5 *\n        (containerSize.y - Math.floor(maxWorldSize.y * divToWorldSizeRatio))\n    };\n\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.fitToContainer(containerSize, divToWorldSizeRatio, fitOffset);\n      }\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data world (mm) size.\n   *\n   * @returns {Scalar2D|undefined} The largest size as {x,y}.\n   */\n  getMaxWorldSize() {\n    let maxSize = {x: 0, y: 0};\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        const size = layer.getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {Scalar3D} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setScale(this.#scale, center);\n      }\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {Scalar3D} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setOffset(this.#offset);\n      }\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.draw();\n      }\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.display(flag);\n      }\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {WindowLevel} from '../image/windowLevel';\nimport {Point, Point2D} from '../math/point';\nimport {Scalar2D} from '../math/scalar';\nimport {Matrix33} from '../math/matrix';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Third dimension player ID (created by setInterval).\n   *\n   * @type {number|undefined}\n   */\n  #playerID;\n\n  /**\n   * Is DICOM seg mask flag.\n   *\n   * @type {boolean}\n   */\n  #isMask = false;\n\n  /**\n   * @param {View} view The associated view.\n   */\n  constructor(view) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry().getRealSpacing(),\n      view.getImage().getGeometry().getOrientation(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#isMask = true;\n    }\n  }\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {PlaneHelper} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return this.#isMask;\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(\n      new Point2D(0, 0)\n    ));\n  }\n\n  /**\n   * Get the image modality.\n   *\n   * @returns {string} The modality.\n   */\n  getModality() {\n    return this.#view.getImage().getMeta().Modality;\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {string[]} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (typeof this.#playerID !== 'undefined');\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Opitonal position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} [index] Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setImage(img) {\n    this.#view.setImage(img);\n  }\n\n  /**\n   * Get the current view (2D) spacing.\n   *\n   * @returns {Scalar2D} The spacing as a 2D array.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing(\n      this.#view.getOrientation());\n    return spacing.get2D();\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position The input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit.\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Extract a slice from an image at the given index and orientation.\n   *\n   * @param {Image} image The image to parse.\n   * @param {Index} index The current index.\n   * @param {boolean} isRescaled Flag for rescaled values (default false).\n   * @param {Matrix33} orientation The desired orientation.\n   * @returns {Image} The extracted slice.\n   */\n  #getSlice(image, index, isRescaled, orientation) {\n    // generate slice values\n    const sliceIter = getSliceIterator(\n      image,\n      index,\n      isRescaled,\n      orientation\n    );\n    const sliceValues = getIteratorValues(sliceIter);\n    // oriented geometry\n    const orientedSize = image.getGeometry().getSize(orientation);\n    const sizeValues = orientedSize.getValues();\n    sizeValues[2] = 1;\n    const sliceSize = new Size(sizeValues);\n    const orientedSpacing = image.getGeometry().getSpacing(orientation);\n    const spacingValues = orientedSpacing.getValues();\n    spacingValues[2] = 1;\n    const sliceSpacing = new Spacing(spacingValues);\n    const sliceOrigin = new Point3D(0, 0, 0);\n    const sliceGeometry =\n      new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n    // slice image\n    // @ts-ignore\n    return new Image(sliceGeometry, sliceValues);\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let currentIndex = this.getCurrentIndex();\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this.#getSlice(image, currentIndex, rescaled, orientation);\n      // update position\n      currentIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, currentIndex, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {number[][][]} regions A list of [x, y] pairs (min, max).\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let currentIndex = this.getCurrentIndex();\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this.#getSlice(image, currentIndex, rescaled, orientation);\n      // update position\n      currentIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getVariableRegionSliceIterator(\n      image, currentIndex, rescaled, regions);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   * @deprecated Please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this.#view.getImage().isMonochrome();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the oriented image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n\n  /**\n   * Is the data size larger than one in the given dimension?\n   *\n   * @param {number} dim The dimension.\n   * @returns {boolean} True if the image size is larger than one\n   *   in the given dimension.\n   */\n  moreThanOne(dim) {\n    return this.getImageSize().moreThanOne(dim);\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    return this.#view.isPositionInBounds(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a world position from a 2D plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D plane position from a world position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {Point2D} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return new Point2D(\n      planePoint.getX(),\n      planePoint.getY(),\n    );\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {Point2D} point2D The 2D position.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Get the current index incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Index} The resulting index.\n   */\n  #getIncrementIndex(dim) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    return index.add(incr);\n  }\n\n  /**\n   * Get the current index decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Index} The resulting index.\n   */\n  #getDecrementIndex(dim) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    return index.add(incr);\n  }\n\n  /**\n   * Get the current index incremented in the scroll direction.\n   *\n   * @returns {Index} The resulting index.\n   */\n  #getIncrementScrollIndex() {\n    return this.#getIncrementIndex(this.getScrollIndex());\n  }\n\n  /**\n   * Get the current index decremented in the scroll direction.\n   *\n   * @returns {Index} The resulting index.\n   */\n  #getDecrementScrollIndex() {\n    return this.#getDecrementIndex(this.getScrollIndex());\n  }\n\n  /**\n   * Get the current position incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Point} The resulting point.\n   */\n  getIncrementPosition(dim) {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getIncrementIndex(dim));\n  }\n\n  /**\n   * Get the current position decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Point} The resulting point.\n   */\n  getDecrementPosition(dim) {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getDecrementIndex(dim));\n  }\n\n  /**\n   * Get the current position decremented in the scroll direction.\n   *\n   * @returns {Point} The resulting point.\n   */\n  getIncrementScrollPosition() {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getIncrementScrollIndex());\n  }\n\n  /**\n   * Get the current position decremented in the scroll direction.\n   *\n   * @returns {Point} The resulting point.\n   */\n  getDecrementScrollPosition() {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getDecrementScrollIndex());\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.setCurrentIndex(this.#getIncrementIndex(dim), silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.setCurrentIndex(this.#getDecrementIndex(dim), silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.setCurrentIndex(this.#getDecrementScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.setCurrentIndex(this.#getIncrementScrollIndex(), silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (typeof this.#playerID === 'undefined') {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = window.setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (typeof this.#playerID !== 'undefined') {\n      clearInterval(this.#playerID);\n      this.#playerID = undefined;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    return this.#view.getWindowLevel();\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#view.getCurrentWindowPresetName();\n  }\n\n  /**\n   * Set the window and level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   */\n  setWindowLevel(wl) {\n    this.#view.setWindowLevel(wl);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} name The colour map name.\n   */\n  setColourMap(name) {\n    this.#view.setColourMap(name);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Bind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  bindImageAndLayer(viewLayer) {\n    const image = this.#view.getImage();\n    image.addEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.addEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n  /**\n   * Unbind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  unbindImageAndLayer(viewLayer) {\n    const image = this.#view.getImage();\n    image.removeEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.removeEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n} // class ViewController\n","import {logger} from '../utils/logger';\nimport {Point2D} from '../math/point';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Overridalbe custom UI object for client defined UI.\n */\nexport const customUI = {\n  /**\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\n   *\n   * @param {object} data The roi data.\n   * @param {Function} callback The callback to launch on dialogue exit.\n   */\n  openRoiDialog(data, callback) {\n    const textExpr = prompt('Label', data.textExpr);\n    if (textExpr !== null) {\n      data.textExpr = textExpr;\n      callback(data);\n    }\n  }\n};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Point2D[]} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push(new Point2D(\n      touches[i].pageX - offsetLeft,\n      touches[i].pageY - offsetTop\n    ));\n  }\n  return positions;\n}\n\n/**\n * Get the offsets of an input touch event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D[]} The array of points.\n */\nexport function getTouchPoints(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input mouse event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D} The 2D point.\n */\nexport function getMousePoint(event) {\n  // offsetX/Y: the offset in the X coordinate of the mouse pointer\n  // between that event and the padding edge of the target node\n  // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n  // https://caniuse.com/mdn-api_mouseevent_offsetx\n  return new Point2D(\n    event.offsetX,\n    event.offsetY\n  );\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * Ref:\n * - {@link https://github.com/ivmartel/dwv/issues/902},\n * - {@link https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js}.\n *\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {Point2D} from '../math/point';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {Scalar2D}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   *\n   * See: {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled}.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * Layer group origin.\n   *\n   * @type {Point3D}\n   */\n  #layerGroupOrigin;\n\n  /**\n   * Layer group first origin.\n   *\n   * @type {Point3D}\n   */\n  #layerGroupOrigin0;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The data id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the layer zoom offset without the fit scale.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getAbsoluteZoomOffset() {\n    return {\n      x: this.#zoomOffset.x * this.#fitScale.x,\n      y: this.#zoomOffset.y * this.#fitScale.y\n    };\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {string} dataId The associated data id.\n   */\n  setView(view, dataId) {\n    this.#dataId = dataId;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourmapchange', this.#onColourMapChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view);\n    // bind layer and image\n    this.bindImage();\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataId === event.dataid) {\n      this.#viewController.setImage(event.value[0]);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Bind this layer to the view image.\n   */\n  bindImage() {\n    if (this.#viewController) {\n      this.#viewController.bindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Unbind this layer to the view image.\n   */\n  unbindImage() {\n    if (this.#viewController) {\n      this.#viewController.unbindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Handle an image content change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagecontentchange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      this.#isValidPosition = this.#viewController.isPositionInBounds();\n      // flag update and draw\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagegeometrychange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      const vcSize = this.#viewController.getImageSize().get2D();\n      if (this.#baseSize.x !== vcSize.x ||\n        this.#baseSize.y !== vcSize.y) {\n        // size changed, recalculate base offset\n        // in case origin changed\n        if (typeof this.#layerGroupOrigin !== 'undefined' &&\n          typeof this.#layerGroupOrigin0 !== 'undefined') {\n          const origin0 = this.#viewController.getOrigin();\n          const scrollOffset = this.#layerGroupOrigin0.minus(origin0);\n          const origin = this.#viewController.getOrigin(\n            this.#viewController.getCurrentPosition()\n          );\n          const planeOffset = this.#layerGroupOrigin.minus(origin);\n          this.setBaseOffset(scrollOffset, planeOffset);\n        }\n        // update base size\n        this.#setBaseSize(vcSize);\n        // flag update and draw\n        this.#needsDataUpdate = true;\n        this.draw();\n      }\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this.#containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this.#flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this.#flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Initialise the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Scalar2D} absoluteZoomOffset The zoom offset as {x,y}\n   *   without the fit scale (as provided by getAbsoluteZoomOffset).\n   */\n  initScale(newScale, absoluteZoomOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n    this.#scale = finalNewScale;\n\n    this.#zoomOffset = {\n      x: absoluteZoomOffset.x / this.#fitScale.x,\n      y: absoluteZoomOffset.y / this.#fitScale.y\n    };\n    this.#offset = {\n      x: this.#offset.x + this.#zoomOffset.x,\n      y: this.#offset.y + this.#zoomOffset.y\n    };\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @param {Point3D} [layerGroupOrigin] The layer group origin.\n   * @param {Point3D} [layerGroupOrigin0] The layer group first origin.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(\n    scrollOffset, planeOffset,\n    layerGroupOrigin, layerGroupOrigin0) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // store layer group origins\n    if (typeof layerGroupOrigin !== 'undefined' &&\n      typeof layerGroupOrigin0 !== 'undefined') {\n      this.#layerGroupOrigin = layerGroupOrigin;\n      this.#layerGroupOrigin0 = layerGroupOrigin0;\n    }\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to a 2D index.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Index} The equivalent 2D index.\n   */\n  displayToPlaneIndex(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Index([\n      Math.floor(planePos.getX()),\n      Math.floor(planePos.getY())\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The de-scaled point.\n   */\n  displayToPlaneScale(point2D) {\n    return new Point2D(\n      point2D.getX() / this.#scale.x,\n      point2D.getY() / this.#scale.y\n    );\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The plane position.\n   */\n  displayToPlanePos(point2D) {\n    const deScaled = this.displayToPlaneScale(point2D);\n    return new Point2D(\n      deScaled.getX() + this.#offset.x,\n      deScaled.getY() + this.#offset.y\n    );\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The display position, can be individually\n   *   undefined if out of bounds.\n   */\n  planePosToDisplay(point2D) {\n    let posX =\n      (point2D.getX() - this.#offset.x + this.#baseOffset.x) * this.#scale.x;\n    let posY =\n      (point2D.getY() - this.#offset.y + this.#baseOffset.y) * this.#scale.y;\n    // check if in bounds\n    if (posX < 0 || posX >= this.#canvas.width) {\n      posX = undefined;\n    }\n    if (posY < 0 || posY >= this.#canvas.height) {\n      posY = undefined;\n    }\n    return new Point2D(posX, posY);\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The main plane position.\n   */\n  displayToMainPlanePos(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Point2D(\n      planePos.getX() - this.#baseOffset.x,\n      planePos.getY() - this.#baseOffset.y\n    );\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothing;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {Scalar2D} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The fit size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    let needsDraw = false;\n\n    // set canvas size if different from previous\n    if (this.#canvas.width !== containerSize.x ||\n      this.#canvas.height !== containerSize.y) {\n      if (!canCreateCanvas(containerSize.x, containerSize.y)) {\n        throw new Error('Cannot resize canvas ' +\n          containerSize.x + ', ' + containerSize.y);\n      }\n      // canvas size change triggers canvas reset\n      this.#canvas.width = containerSize.x;\n      this.#canvas.height = containerSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // fit scale\n    const divToImageSizeRatio = {\n      x: divToWorldSizeRatio * this.#baseSpacing.x,\n      y: divToWorldSizeRatio * this.#baseSpacing.y\n    };\n    // #scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (#scale / fitScale) * newFitScale\n    const newScale = {\n      x: this.#scale.x * divToImageSizeRatio.x / this.#fitScale.x,\n      y: this.#scale.y * divToImageSizeRatio.y / this.#fitScale.y\n    };\n\n    // set scales if different from previous\n    if (this.#scale.x !== newScale.x ||\n      this.#scale.y !== newScale.y) {\n      this.#fitScale = divToImageSizeRatio;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / divToImageSizeRatio.x,\n      y: fitOffset.y / divToImageSizeRatio.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / divToImageSizeRatio.x,\n      y: containerSize.y / divToImageSizeRatio.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this.#flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update global offset\n      this.#offset = {\n        x: this.#offset.x +\n          newViewOffset.x - this.#viewOffset.x +\n          newFlipOffset.x - this.#flipOffset.x,\n        y: this.#offset.y +\n          newViewOffset.y - this.#viewOffset.y +\n          newFlipOffset.y - this.#flipOffset.y,\n      };\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      const eventName = names[i];\n      const passive = eventName !== 'wheel';\n      this.#containerDiv.addEventListener(\n        eventName, this.#fireEvent, {passive: passive});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourMapChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n} // ViewLayer class\n","import {getShadowColour} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {Scalar2D}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {Scalar2D}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {Scalar2D} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    return {\n      x: 2 * value / this.#zoomScale.x,\n      y: 2 * value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {Konva.Shape} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Draw group command.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {string} id The id of the created draw.\n       * @property {string} srclayerid The id of the layer of the draw.\n       * @property {string} dataid The associated data id.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id(),\n        srclayerid: this.#layer.getId(),\n        dataid: this.#layer.getDataId()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n\n\n/**\n * Move group command.\n */\nexport class MoveGroupCommand {\n\n  /**\n   * The group to move.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The 2D translation as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #translation;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {object} translation A 2D translation to move the group by.\n   * @param {DrawLayer} layer The layer where to move the group.\n   */\n  constructor(group, name, translation, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#translation = translation;\n    this.#layer = layer;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Move-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  execute() {\n    // translate group\n    this.#group.move(this.#translation);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw move event.\n     *\n     * @event MoveGroupCommand#drawmove\n     * @type {object}\n     * @property {string} id The id of the create draw.\n     * @property {string} srclayerid The id of the layer of the draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawmove',\n      id: this.#group.id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires MoveGroupCommand#drawmove\n   */\n  undo() {\n    // invert translate group\n    const minusTrans = {\n      x: -this.#translation.x,\n      y: -this.#translation.y\n    };\n    this.#group.move(minusTrans);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawmove',\n      id: this.#group.id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // MoveGroupCommand class\n\n\n/**\n * Change group command.\n */\nexport class ChangeGroupCommand {\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The shape factory.\n   *\n   * @type {object}\n   */\n  #factory;\n\n  /**\n   * The start anchor.\n   *\n   * @type {object}\n   */\n  #startAnchor;\n\n  /**\n   * The end anchor.\n   *\n   * @type {object}\n   */\n  #endAnchor;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * The associated view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController;\n\n  /**\n   * The app style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * @param {string} name The shape display name.\n   * @param {object} factory The shape factory.\n   * @param {object} startAnchor The anchor that starts the change.\n   * @param {object} endAnchor The anchor that ends the change.\n   * @param {DrawLayer} layer The layer where to change the group.\n   * @param {ViewController} viewController The associated viewController.\n   * @param {Style} style The app style.\n   */\n  constructor(\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\n    this.#name = name;\n    this.#factory = factory;\n    this.#startAnchor = startAnchor;\n    this.#endAnchor = endAnchor;\n    this.#layer = layer;\n    this.#viewController = viewController;\n    this.#style = style;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  execute() {\n    // change shape\n    this.#factory.update(\n      this.#endAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw change event.\n     *\n     * @event ChangeGroupCommand#drawchange\n     * @type {object}\n     * @property {string} id The id of the created draw.\n     * @property {string} srclayerid The id of the layer of the draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawchange',\n      id: this.#endAnchor.getParent().id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeGroupCommand#drawchange\n   */\n  undo() {\n    // invert change shape\n    this.#factory.update(\n      this.#startAnchor,\n      this.#style,\n      this.#viewController\n    );\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawchange',\n      id: this.#startAnchor.getParent().id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeGroupCommand class\n\n/**\n * Delete group command.\n */\nexport class DeleteGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * The group parent.\n   *\n   * @type {Konva.Container}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to delete the group.\n   */\n  constructor(group, name, layer) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  execute() {\n    // remove the group from its parent\n    this.#group.remove();\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    /**\n     * Draw delete event.\n     *\n     * @event DeleteGroupCommand#drawdelete\n     * @type {object}\n     * @property {string} id The id of the created draw.\n     * @property {string} srclayerid The id of the layer of the draw.\n     * @property {string} dataid The associated data id.\n     */\n    this.onExecute({\n      type: 'drawdelete',\n      id: this.#group.id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  undo() {\n    // add the group to its parent\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawcreate',\n      id: this.#group.id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteGroupCommand class\n","import {getIndexFromStringId} from '../math/index';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {getShadowColour} from '../utils/colour';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Index} from '../math/index';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Konva.\n *\n * Ref: {@link https://konvajs.org/}.\n *\n * @external Konva\n */\nimport Konva from 'konva';\n\n/**\n * Draw meta data.\n */\nexport class DrawMeta {\n  /**\n   * Draw quantification.\n   *\n   * @type {object}\n   */\n  quantification;\n\n  /**\n   * Draw text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string}\n   */\n  textExpr;\n}\n\n/**\n * Draw details.\n */\nexport class DrawDetails {\n  /**\n   * The draw ID.\n   *\n   * @type {number}\n   */\n  id;\n\n  /**\n   * The draw position: an Index converted to string.\n   *\n   * @type {string}\n   */\n  position;\n\n  /**\n   * The draw type.\n   *\n   * @type {string}\n   */\n  type;\n\n  /**\n   * The draw color: for example 'green', '#00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string}\n   */\n  color;\n\n  /**\n   * The draw meta.\n   *\n   * @type {DrawMeta}\n   */\n  meta;\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is a node an extra shape associated with a main one.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name starts with 'shape-'.\n */\nexport function isNodeNameShapeExtra(node) {\n  return node.name().startsWith('shape-');\n}\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * @callback testFn\n * @param {Konva.Node} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Is the input node a node that has the 'stroke' method.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\n */\nexport function canNodeChangeColour(node) {\n  return node.name() !== 'anchor' && node.name() !== 'label';\n}\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\nexport function getHierarchyLog(layer, prefix) {\n  if (typeof prefix === 'undefined') {\n    prefix = '';\n  }\n  const kids = layer.getChildren();\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n  for (let i = 0; i < kids.length; ++i) {\n    log += getHierarchyLog(kids[i], prefix + '    ');\n  }\n  return log;\n}\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #drawLayer;\n\n  /**\n   * The Konva layer.\n   *\n   * @type {Konva.Layer}\n   */\n  #konvaLayer;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * @param {DrawLayer} drawLayer The draw layer.\n   */\n  constructor(drawLayer) {\n    this.#drawLayer = drawLayer;\n    this.#konvaLayer = drawLayer.getKonvaLayer();\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {Konva.Group|undefined} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.#konvaLayer.getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup;\n    if (posGroups.length === 1) {\n      if (posGroups[0] instanceof Konva.Group) {\n        posGroup = posGroups[0];\n      }\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.#konvaLayer.add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups.');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Reset: clear the layers array.\n   */\n  reset() {\n    this.#konvaLayer = null;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.#konvaLayer.findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id\n      );\n    }\n    return group;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {Index} index The current position.\n   * @param {number} scrollIndex The scroll index.\n   */\n  activateDrawLayer(index, scrollIndex) {\n    // TODO: add layer info\n    // get and store the position group id\n    const dims = [scrollIndex];\n    for (let j = 3; j < index.length(); ++j) {\n      dims.push(j);\n    }\n    this.#currentPosGroupId = index.toStringId(dims);\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Get a list of drawing display details.\n   *\n   * @returns {DrawDetails[]} A list of draw details.\n   */\n  getDrawDisplayDetails() {\n    const list = [];\n    const groups = this.#konvaLayer.getChildren();\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\n      const position = getIndexFromStringId(groups[j].id());\n      // @ts-ignore\n      const collec = groups[j].getChildren();\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\n        const text = label.getChildren()[0];\n        let type = shape.className;\n        if (type === 'Line') {\n          const shapeExtrakids = collec[i].getChildren(\n            isNodeNameShapeExtra);\n          if (shape.closed()) {\n            type = 'Roi';\n          } else if (shapeExtrakids.length !== 0) {\n            const extraName0 = shapeExtrakids[0].name();\n            if (extraName0.indexOf('triangle') !== -1) {\n              type = 'Arrow';\n            } else if (extraName0.indexOf('arc') !== -1) {\n              type = 'Protractor';\n            } else {\n              type = 'Ruler';\n            }\n          }\n        }\n        if (type === 'Rect') {\n          type = 'Rectangle';\n        }\n        list.push({\n          id: collec[i].id(),\n          position: position.toString(),\n          type: type,\n          color: shape.stroke(),\n          meta: text.meta\n        });\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Get a list of drawing store details. Used in state.\n   *\n   * @returns {object} A list of draw details including id, text, quant...\n   * TODO Unify with getDrawDisplayDetails?\n   */\n  getDrawStoreDetails() {\n    const drawingsDetails = {};\n\n    // get all position groups\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\n\n    let posKids;\n    let group;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      // @ts-ignore\n      posKids = posGroups[i].getChildren();\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\n        group = posKids[j];\n        // remove anchors\n        const anchors = group.find('.anchor');\n        for (let a = 0; a < anchors.length; ++a) {\n          anchors[a].remove();\n        }\n        // get text\n        const texts = group.find('.text');\n        if (texts.length !== 1) {\n          logger.warn('There should not be more than one text per shape.');\n        }\n        // get meta (non konva vars)\n        drawingsDetails[group.id()] = {\n          meta: texts[0].meta\n        };\n      }\n    }\n    return drawingsDetails;\n  }\n\n  /**\n   * Set the drawings on the current stage.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {DrawDetails[]} drawingsDetails An array of drawings details.\n   * @param {object} cmdCallback The DrawCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *   DrawCommand has been executed.\n   */\n  setDrawings(\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\n    // regular Konva deserialize\n    const stateLayer = Konva.Node.create(drawings);\n\n    // get all position groups\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n      const statePosGroup = statePosGroups[i];\n\n      // Get or create position-group if it does not exist and\n      // append it to konvaLayer\n      let posGroup = this.#konvaLayer.getChildren(\n        isNodeWithId(statePosGroup.id()))[0];\n      if (typeof posGroup === 'undefined') {\n        posGroup = new Konva.Group({\n          id: statePosGroup.id(),\n          name: 'position-group',\n          visible: false\n        });\n        this.#konvaLayer.add(posGroup);\n      }\n\n      const statePosKids = statePosGroup.getChildren();\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n        // shape group (use first one since it will be removed from\n        // the group when we change it)\n        const stateGroup = statePosKids[0];\n        // add group to posGroup (switches its parent)\n        // @ts-ignore\n        posGroup.add(stateGroup);\n        // shape\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\n        // create the draw command\n        const cmd = new DrawGroupCommand(\n          stateGroup,\n          shape.className,\n          this.#drawLayer\n        );\n        // draw command callbacks\n        cmd.onExecute = cmdCallback;\n        cmd.onUndo = cmdCallback;\n        // details\n        if (drawingsDetails) {\n          const details = drawingsDetails[stateGroup.id()];\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\n          const text = label.getText();\n          // store details\n          text.meta = details.meta;\n          // reset text (it was not encoded)\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n        }\n        // execute\n        cmd.execute();\n        exeCallback(cmd);\n      }\n    }\n  }\n\n  /**\n   * Update a drawing from its details.\n   *\n   * @param {DrawDetails} drawDetails Details of the drawing to update.\n   */\n  updateDraw(drawDetails) {\n    // get the group\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\n    if (typeof group === 'undefined') {\n      logger.warn(\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\n      );\n      return;\n    }\n    // shape\n    // @ts-ignore\n    const shapes = group.getChildren(isNodeNameShape);\n    for (let i = 0; i < shapes.length; ++i) {\n      shapes[i].stroke(drawDetails.color);\n    }\n    // shape extra\n    // @ts-ignore\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\n    for (let j = 0; j < shapesExtra.length; ++j) {\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\n        shapesExtra[j].stroke(drawDetails.color);\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\n        // for example text\n        shapesExtra[j].fill(drawDetails.color);\n      }\n    }\n    // label\n    // @ts-ignore\n    const label = group.getChildren(isNodeNameLabel)[0];\n    const shadowColor = getShadowColour(drawDetails.color);\n    const kids = label.getChildren();\n    for (let k = 0; k < kids.length; ++k) {\n      const kid = kids[k];\n      kid.fill(drawDetails.color);\n      if (kids[k].className === 'Text') {\n        const text = kids[k];\n        text.shadowColor(shadowColor);\n        if (typeof drawDetails.meta !== 'undefined') {\n          text.meta = drawDetails.meta;\n          text.setText(replaceFlags(\n            text.meta.textExpr, text.meta.quantification\n          ));\n          label.setVisible(text.meta.textExpr.length !== 0);\n        }\n      }\n    }\n\n    // udpate current layer\n    this.#konvaLayer.draw();\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {Konva.Group} group The group to delete.\n   * @param {object} cmdCallback The DeleteCommand callback.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\n    const shape = group.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const delcmd = new DeleteGroupCommand(\n      group,\n      shapeDisplayName,\n      this.#drawLayer\n    );\n    delcmd.onExecute = cmdCallback;\n    delcmd.onUndo = cmdCallback;\n    delcmd.execute();\n    // callback\n    if (typeof exeCallback !== 'undefined') {\n      exeCallback(delcmd);\n    }\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {Function} cmdCallback The DeleteCommand callback.\n   * @param {Function} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  deleteDraw(id, cmdCallback, exeCallback) {\n    // get the group\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // delete\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\n\n    return true;\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {Function} cmdCallback The DeleteCommand callback.\n   * @param {Function} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(cmdCallback, exeCallback) {\n    const posGroups = this.#konvaLayer.getChildren();\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        const shapeGroups = posGroup.getChildren();\n        while (shapeGroups.length) {\n          if (shapeGroups[0] instanceof Konva.Group) {\n            this.deleteDrawGroup(shapeGroups[0], cmdCallback, exeCallback);\n          }\n        }\n      } else {\n        logger.warn('Found non group in layer while deleting');\n      }\n    }\n  }\n\n  /**\n   * Get the total number of draws\n   * (at all positions).\n   *\n   * @returns {number} The total number of draws.\n   */\n  getNumberOfDraws() {\n    const posGroups = this.#konvaLayer.getChildren();\n    let count = 0;\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        count += posGroup.getChildren().length;\n      }\n    }\n    return count;\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\nimport {PlaneHelper} from '../image/planeHelper';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {object}\n   */\n  #drawController;\n\n  /**\n   * The plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {Konva.Stage} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {Konva.Layer} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {object} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {PlaneHelper} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this.#containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this.#flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this.#flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ({\n        x: newScale.x * this.#flipScale.x,\n        y: newScale.y * this.#flipScale.y,\n        z: newScale.z * this.#flipScale.z,\n      });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {string} dataId The associated data id.\n   */\n  initialise(size, spacing, dataId) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#dataId = dataId;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n\n    // create draw controller\n    this.#drawController = new DrawController(this);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The container size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    // update konva\n    this.#konvaStage.width(containerSize.x);\n    this.#konvaStage.height(containerSize.y);\n\n    // fit scale\n    const divToImageSizeRatio = {\n      x: divToWorldSizeRatio * this.#baseSpacing.x,\n      y: divToWorldSizeRatio * this.#baseSpacing.y\n    };\n    // #scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (#scale / fitScale) * newFitScale\n    const newScale = {\n      x: this.#konvaStage.scale().x * divToImageSizeRatio.x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y * divToImageSizeRatio.y / this.#fitScale.y\n    };\n\n    // set scales if different from previous\n    if (this.#konvaStage.scale().x !== newScale.x ||\n      this.#konvaStage.scale().y !== newScale.y) {\n      this.#fitScale = divToImageSizeRatio;\n      this.#konvaStage.scale(newScale);\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / divToImageSizeRatio.x,\n      y: fitOffset.y / divToImageSizeRatio.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / divToImageSizeRatio.x,\n      y: containerSize.y / divToImageSizeRatio.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this.#flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update global offset\n      this.#konvaStage.offset({\n        x: this.#konvaStage.offset().x +\n          newViewOffset.x - this.#viewOffset.x +\n          newFlipOffset.x - this.#flipOffset.x,\n        y: this.#konvaStage.offset().y +\n          newViewOffset.y - this.#viewOffset.y +\n          newFlipOffset.y - this.#flipOffset.y,\n      });\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n    }\n  }\n\n  /**\n   * Check the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} True if the group is visible.\n   */\n  isGroupVisible(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Toggle the visibility of a given group.\n   *\n   * @param {string} id The id of the group.\n   * @returns {boolean} False if the group cannot be found.\n   */\n  toggleGroupVisibility(id) {\n    // get the group\n    const group = this.#drawController.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // toggle visible\n    group.visible(!group.isVisible());\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @param {string} id The id of the group to delete.\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(id, exeCallback) {\n    if (typeof this.#drawController !== 'undefined') {\n      this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @param {object} exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(exeCallback) {\n    if (typeof this.#drawController !== 'undefined') {\n      this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\n    }\n  }\n\n  /**\n   * Get the total number of draws of this layer\n   * (at all positions).\n   *\n   * @returns {number|undefined} The total number of draws.\n   */\n  getNumberOfDraws() {\n    let res;\n    if (typeof this.#drawController !== 'undefined') {\n      res = this.#drawController.getNumberOfDraws();\n    }\n    return res;\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    this.getDrawController().activateDrawLayer(\n      index, this.#planeHelper.getScrollIndex());\n    // TODO: add check\n    return true;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {Scalar2D} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in style::applyZoomScale:\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n","import {Point, Point3D} from '../math/point';\nimport {WindowLevel} from '../image/windowLevel';\nimport {LayerGroup} from './layerGroup';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        if (event.value.length === 2) {\n          const wl = new WindowLevel(event.value[0], event.value[1]);\n          vc.setWindowLevel(wl);\n        }\n        if (event.value.length === 3) {\n          vc.setWindowLevelPreset(event.value[2]);\n        }\n      }\n    };\n  };\n}\n\n/**\n * Colour map binder.\n */\nexport class ColourMapBinder {\n  getEventType = function () {\n    return 'colourmapchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setColourMap(event.value[0]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data id\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder,\n  ColourMapBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  /**\n   * Associated layer groups.\n   *\n   * @type {LayerGroup[]}\n   */\n  #layerGroups = [];\n\n  /**\n   * Active layer group index.\n   *\n   * @type {number|undefined}\n   */\n  #activeLayerGroupIndex;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    if (typeof this.getLayerGroup(index) !== 'undefined') {\n      this.#activeLayerGroupIndex = index;\n    } else {\n      logger.warn('No layer group to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * The new layer group will be marked as the active layer group.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    layerGroup.setImageSmoothing(this.#imageSmoothing);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = undefined;\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.removeLayersByDataId(dataId);\n    }\n  }\n\n  /**\n   * Remove a layer group from this stage.\n   *\n   * @param {LayerGroup} layerGroup The layer group to remove.\n   */\n  removeLayerGroup(layerGroup) {\n    // find layer\n    const index = this.#layerGroups.findIndex((item) => item === layerGroup);\n    if (index === -1) {\n      throw new Error('Cannot find layerGroup to remove');\n    }\n    // unbind\n    this.unbindLayerGroups();\n    // empty layer group\n    layerGroup.empty();\n    // remove from storage\n    this.#layerGroups.splice(index, 1);\n    // update active index\n    if (this.#activeLayerGroupIndex === index) {\n      this.#activeLayerGroupIndex = undefined;\n    }\n    // bind\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Fit to container: synchronise the div to world size ratio\n   *   of the group layers.\n   */\n  fitToContainer() {\n    // find the minimum ratio\n    let minRatio;\n    const hasRatio = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const ratio = this.#layerGroups[i].getDivToWorldSizeRatio();\n      if (typeof ratio !== 'undefined') {\n        hasRatio.push(i);\n        if (typeof minRatio === 'undefined' || ratio < minRatio) {\n          minRatio = ratio;\n        }\n      }\n    }\n    // exit if no ratio\n    if (typeof minRatio === 'undefined') {\n      return;\n    }\n    // apply min ratio to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasRatio.includes(j)) {\n        this.#layerGroups[j].fitToContainer(minRatio);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layer groups\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].setImageSmoothing(flag);\n    }\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\nimport {WindowLevel} from '../image/windowLevel';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021):\n *   - store position as array,\n *   - new draw position group key.\n * - v0.4 (dwv 0.29.0, 06/2021):\n *   - move drawing details into meta property,\n *   - remove scale center and translation, add offset.\n * - v0.3 (dwv v0.23.0, 03/2018):\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation,\n *   - new details structure: simple array of objects referenced by draw ids.\n * - v0.2 (dwv v0.17.0, 12/2016):\n *   - adds draw details: array [nslices][nframes] of detail objects.\n * - v0.1 (dwv v0.15.0, 07/2016):\n *   - adds version,\n *   - drawings: array [nslices][nframes] with all groups.\n * - initial release (dwv v0.10.0, 05/2015), no version number:\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings,\n *   - drawings: array [nslices] with all groups.\n */\nexport class State {\n  /**\n   * Save the application state as JSON.\n   *\n   * @param {App} app The associated application.\n   * @returns {string} The state as a JSON string.\n   */\n  toJSON(app) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const position = viewController.getCurrentIndex();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    const wl = viewController.getWindowLevel();\n    // return a JSON string\n    return JSON.stringify({\n      version: '0.5',\n      'window-center': wl.center,\n      'window-width': wl.width,\n      position: position.getValues(),\n      scale: app.getAddedScale(),\n      offset: app.getOffset(),\n      drawings: drawLayer.getKonvaLayer().toObject(),\n      drawingsDetails: drawController.getDrawStoreDetails()\n    });\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The state as a JSON string.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {App} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    const wl = new WindowLevel(data['window-center'], data['window-width']);\n    viewController.setWindowLevel(wl);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // render to draw the view layer\n    app.render(app.getDataIds()[0]); //todo: fix\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3:\n * - v0.2: one layer per slice/frame,\n * - v0.3: one layer, one group per slice. `setDrawing` expects the full stage.\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2:\n * - v0.1: text on its own,\n * - v0.2: text as part of label.\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3:\n * - v0.2: array [nslices][nframes] with all,\n * - v0.3: simple array of objects referenced by draw ids.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4:\n * - v0.3: properties at group root,\n * - v0.4: properties in group meta object.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: position as object,\n * - v0.5: position as array.\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: draw id as 'slice-0_frame-1',\n * - v0.5: draw id as '#2-0_#3-1'.\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  return new URL(uri, window.location.origin);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: `base?query#fragment`.\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   `[dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest`.\n * Or encoded URI with base and key value/pairs:\n *   `[dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)`.\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n *   be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode. Can be:\n * - key (default): keep the key\n * - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {string[]} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {string[]} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","import {ListenerHandler} from '../utils/listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // enable shortcuts\n    this.enableShortcuts(true);\n  }\n\n  /**\n   * Enable or disable shortcuts. The 'init' methods enables shortcuts\n   *  by default. Call this method after init to disable shortcuts.\n   *\n   * @param {boolean} flag True to enable shortcuts.\n   */\n  enableShortcuts(flag) {\n    if (flag) {\n      window.addEventListener('keydown',\n        this.#getCallback('window', 'keydown'), true);\n    } else {\n      window.removeEventListener('keydown',\n        this.#getCallback('window', 'keydown'), true);\n    }\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {LayerGroup} layerGroup The associated layer group.\n   * @param {ViewLayer|DrawLayer} layer The layer to listen to.\n   */\n  bindLayerGroup(layerGroup, layer) {\n    const divId = layerGroup.getDivId();\n    // listen to active layer changes\n    layerGroup.addEventListener(\n      'activelayerchange', this.#getActiveLayerChangeHandler(divId));\n    // bind the layer\n    this.#internalBindLayerGroup(divId, layer);\n  }\n\n  /**\n   * Bind a layer group to this controller.\n   *\n   * @param {string} layerGroupDivId The layer group div id.\n   * @param {ViewLayer|DrawLayer} layer The layer.\n   */\n  #internalBindLayerGroup(layerGroupDivId, layer) {\n    // remove from local list if preset\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    // replace layer in local list\n    this.#boundLayers[layerGroupDivId] = layer;\n    // bind layer\n    this.#bindLayer(layer);\n  }\n\n  /**\n   * Get an active layer change handler.\n   *\n   * @param {string} divId The associated layer group div id.\n   * @returns {Function} The event handler.\n   */\n  #getActiveLayerChangeHandler(divId) {\n    return (event) => {\n      const layer = event.value[0];\n      this.#internalBindLayerGroup(divId, layer);\n    };\n  }\n\n  /**\n   * Add canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to start listening to.\n   */\n  #bindLayer(layer) {\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getCallback(layerId, eventType) {\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      const applySelectedTool = (event) => {\n        // make sure we have a tool\n        if (this.#selectedTool) {\n          const func = this.#selectedTool[event.type];\n          if (func) {\n            func(event);\n          }\n        }\n      };\n      // store callback\n      this.#callbackStore[layerId][eventType] = applySelectedTool;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {string[]}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {XMLHttpRequest[]}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {string[]} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {XMLHttpRequest} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {string} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.#addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass\n   *   to the request,\n   * - batchSize: the size of the request url batch.\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest}.\n       *\n       * @external XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      const errorCallback =\n        this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onerror = (event) => {\n        this.#addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this.#augmentCallbackEvent(this.onabort, dataElement);\n      request.onabort = (event) => {\n        this.#addLoadend();\n        abortCallback(event);\n      };\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this.#loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","/**\n * Thread Pool.\n *\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/Worker}.\n *\n * @external Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task.\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * Ref: {@link https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js}.\n *\n * @external JpegImage\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * Ref: {@link https://github.com/rii-mango/JPEGLosslessDecoderJS}.\n *\n * @external jpeg\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * Ref: {@link https://github.com/jpambrun/jpx-medical/blob/master/jpx.js}.\n *\n * @external JpxImage\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      index: info.index,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n  #factories = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory|undefined} The associated factory.\n   */\n  #getFactory(elements) {\n    let factory;\n    // mask factory for DICOM SEG\n    const modalityElement = elements['00080060'];\n    if (typeof modalityElement !== 'undefined') {\n      const modality = modalityElement.value[0];\n      if (modality === 'SEG') {\n        factory = new MaskFactory();\n      }\n    }\n    // image factory for pixel data\n    if (typeof factory === 'undefined') {\n      const pixelElement = elements['7FE00010'];\n      if (typeof pixelElement !== 'undefined') {\n        factory = new ImageFactory();\n      }\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the image object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImage(index, origin) {\n    const dataElements = this.#dicomParserStore[index].getDicomElements();\n    const factory = this.#factories[index];\n    // exit if no factory\n    if (typeof factory === 'undefined') {\n      return;\n    }\n    // create the image\n    try {\n      const image = factory.create(\n        dataElements,\n        this.#finalBufferStore[index],\n        this.#options.numberOfFiles);\n      // call onloaditem\n      this.onloaditem({\n        data: {\n          image: image,\n          info: dataElements\n        },\n        source: origin,\n        warn: factory.getWarning()\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Generate the image object from an uncompressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImageUncompressed(index, origin) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: 100,\n      total: 100,\n      index: index,\n      source: origin\n    });\n    // generate image\n    this.#generateImage(index, origin);\n    // send load events\n    this.onload({\n      source: origin\n    });\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Generate the image object from an compressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {Array} pixelBuffer The dicom parser.\n   * @param {string} algoName The compression algorithm name.\n   */\n  #generateImageCompressed(index, pixelBuffer, algoName) {\n    const dicomParser = this.#dicomParserStore[index];\n\n    // gather pixel buffer meta data\n    const bitsAllocated =\n      dicomParser.getDicomElements()['00280100'].value[0];\n    const pixelRepresentation =\n      dicomParser.getDicomElements()['00280103'].value[0];\n    const pixelMeta = {\n      bitsAllocated: bitsAllocated,\n      isSigned: (pixelRepresentation === 1)\n    };\n    const columnsElement = dicomParser.getDicomElements()['00280011'];\n    const rowsElement = dicomParser.getDicomElements()['00280010'];\n    if (typeof columnsElement !== 'undefined' &&\n      typeof rowsElement !== 'undefined') {\n      pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n    }\n    const samplesPerPixelElement =\n      dicomParser.getDicomElements()['00280002'];\n    if (typeof samplesPerPixelElement !== 'undefined') {\n      pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n    }\n    const planarConfigurationElement =\n      dicomParser.getDicomElements()['00280006'];\n    if (typeof planarConfigurationElement !== 'undefined') {\n      pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n    }\n\n    const numberOfItems = pixelBuffer.length;\n\n    // setup the decoder (one decoder per all converts)\n    if (this.#pixelDecoder === null) {\n      this.#pixelDecoder = new PixelBufferDecoder(\n        algoName, numberOfItems);\n      // callbacks\n      // pixelDecoder.ondecodestart: nothing to do\n      this.#pixelDecoder.ondecodeditem = (event) => {\n        this.#onDecodedItem(event);\n        // send onload and onloadend when all items have been decoded\n        if (event.itemNumber + 1 === event.numberOfItems) {\n          this.onload(event);\n          this.onloadend(event);\n        }\n      };\n      // pixelDecoder.ondecoded: nothing to do\n      // pixelDecoder.ondecodeend: nothing to do\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n\n    // launch decode\n    for (let i = 0; i < numberOfItems; ++i) {\n      this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n        {\n          itemNumber: i,\n          numberOfItems: numberOfItems,\n          index: index\n        }\n      );\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.index,\n      source: origin\n    });\n\n    const dataIndex = event.index;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateImage(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Handle non image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #handleNonImageData(index, origin) {\n    const dicomParser = this.#dicomParserStore[index];\n    this.onloaditem({\n      data: {\n        info: dicomParser.getDicomElements()\n      },\n      source: origin,\n    });\n    // send load events\n    this.onload({\n      source: origin\n    });\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Handle image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #handleImageData(index, origin) {\n    const dicomParser = this.#dicomParserStore[index];\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    this.#finalBufferStore[index] = pixelBuffer[0];\n\n    // transfer syntax (always there)\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = typeof algoName !== 'undefined';\n\n    if (needDecompression) {\n      // generate image\n      this.#generateImageCompressed(\n        index,\n        pixelBuffer,\n        algoName);\n    } else {\n      this.#generateImageUncompressed(index, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n    // start event\n    this.onloadstart({\n      source: origin,\n      index: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let factory;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      factory = this.#getFactory(dicomParser.getDicomElements());\n      if (typeof factory !== 'undefined') {\n        factory.checkElements(dicomParser.getDicomElements());\n      }\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#factories[dataIndex] = factory;\n\n    // handle parsed data\n    if (typeof factory === 'undefined') {\n      this.#handleNonImageData(dataIndex, origin);\n    } else {\n      this.#handleImageData(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame.\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event.\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous).\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if one of the folowing conditions is true:\n   * - the file has a 'dcm' extension,\n   * - the file has no extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'dicom',\n   * - the `options.requestHeaders` contains a 'Accept: application/dicom',\n   * - the url has a 'contentType' and it is 'application/dicom'\n   *   (as in wado urls),\n   * - the url has no 'contentType' and no extension or the extension is 'dcm'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'dicom') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/dicom' and no '+'\n          const acceptValue = 'application/dicom';\n          return startsWith(acceptHeader.value, acceptValue) &&\n            acceptHeader.value[acceptValue.length] !== '+';\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/dicom')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'json' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'json',\n   * - the `options.requestHeaders` contains a 'Accept: application/json' or\n   *   'Accept: application/dicom+json',\n   * - the url has a 'json' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'json') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/json' or 'application/dicom+json\n          return startsWith(acceptHeader.value, 'application/json') ||\n            startsWith(acceptHeader.value, 'application/dicom+json');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/json')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * Always returns false.\n   *\n   * @param {File} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'multipart',\n   * - the `options.requestHeaders` contains a 'Accept: multipart/related'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'multipart') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'multipart/related'\n          return startsWith(acceptHeader.value, 'multipart/related');\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * If abort is triggered, all image.onload callbacks have to be cancelled.\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'image.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawimage',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: image/'.\n   * - the url has a 'contentType' and it is 'image/jpeg', 'image/png'\n   *   or 'image/gif' (as in wado urls),\n   * - the url has no 'contentType' and the extension is 'jpeg', 'jpg',\n   *   'png' or 'gif'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawimage') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'image/'\n          return startsWith(acceptHeader.value, 'image/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n *\n * Url example (cors enabled):\n *   {@link https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4}.\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'video.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawvideo',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: video/'.\n   * - the url has a 'mp4', 'ogg' or 'webm' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawvideo') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'video/'\n          return startsWith(acceptHeader.value, 'video/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * Ref: {@link https://github.com/Stuk/jszip}.\n *\n * @external JSZip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback.\n   *\n   * @param {ArrayBuffer} content Unzipped file image.\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'zip' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'zip',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: application/zip'.\n   * - the url has a 'zip' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'zip') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/zip'\n          return startsWith(acceptHeader.value, 'application/zip');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/zip')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class ZipLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {File[]}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {FileReader[]}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {File[]} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {FileReader} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {File} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {File[]} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/FileReader}.\n       *\n       * @external FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\n      // reader.onloadend: nothing to do\n      const errorCallback =\n        this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onerror = (event) => {\n        this.#addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this.#augmentCallbackEvent(this.onabort, dataElement);\n      reader.onabort = (event) => {\n        this.#addLoadend();\n        abortCallback(event);\n      };\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @param {string} dataId The data Id.\n   */\n  loadFiles(files, dataId) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0], dataId);\n    } else {\n      this.#loadImageFiles(files, dataId);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} dataId The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n\n  loadURLs(urls, dataId, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], dataId, options);\n    } else {\n      this.#loadImageUrls(urls, dataId, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: '', filename: '', data: data}].\n   * @param {string} dataId The data Id.\n   */\n  loadImageObject(data, dataId) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image', dataId);\n  }\n\n  /**\n   * Get the currently loaded data ids.\n   *\n   * @returns {string[]} The data ids.\n   */\n  getLoadingDataIds() {\n    return Object.keys(this.#currentLoaders);\n  }\n\n  /**\n   * Abort an individual current loader.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abort(dataId) {\n    if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n      this.#currentLoaders[dataId].loader.abort();\n      delete this.#currentLoaders[dataId];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {File[]} files The list of image files to load.\n   * @param {string} dataId The data Id.\n   */\n  #loadImageFiles(files, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image', dataId);\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', dataId, options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   * @param {string} dataId The data Id.\n   */\n  #loadStateFile(file, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state', dataId);\n  }\n\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', dataId, options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {string[]|File[]|Array} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {string} dataId The data id.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, dataId, options) {\n    const eventInfo = {\n      loadtype: loadType,\n      dataid: dataId\n    };\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[dataId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        dataid: dataId\n      };\n      if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[dataId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[dataId] !== 'undefined' &&\n        this.#currentLoaders[dataId].isFirstItem) {\n        this.#currentLoaders[dataId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[dataId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        dataid: dataId\n      });\n      this.onloadend({\n        dataid: dataId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data: meta and possible image.\n */\nclass DicomData {\n  /**\n   * DICOM meta data.\n   *\n   * @type {object}\n   */\n  meta;\n  /**\n   * DICOM image.\n   *\n   * @type {Image|undefined}\n   */\n  image;\n\n  /**\n   * @param {object} meta The DICOM meta data.\n   * @param {Image} image The DICOM image.\n   */\n  constructor(meta, image) {\n    this.meta = meta;\n    this.image = image;\n  }\n}\n\n/*\n * Data (list of {image, meta}) controller.\n */\nexport class DataController {\n\n  /**\n   * List of DICOM data.\n   *\n   * @type {Object<string, DicomData>}\n   */\n  #dataList = {};\n\n  /**\n   * Distinct data loaded counter.\n   *\n   * @type {number}\n   */\n  #dataIdCounter = -1;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the next data id.\n   *\n   * @returns {string} The data id.\n   */\n  getNextDataId() {\n    ++this.#dataIdCounter;\n    return this.#dataIdCounter.toString();\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return Object.keys(this.#dataList);\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#dataList = {};\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DicomData|undefined} The DICOM data.\n   */\n  get(dataId) {\n    return this.#dataList[dataId];\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    const res = [];\n    // check input\n    if (typeof uids === 'undefined' ||\n      uids.length === 0) {\n      return res;\n    }\n    const keys = Object.keys(this.#dataList);\n    for (const key of keys) {\n      if (this.#dataList[key].image.containsImageUids(uids)) {\n        res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image to set.\n   */\n  setImage(dataId, image) {\n    this.#dataList[dataId].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'imageset',\n      value: [image],\n      dataid: dataId\n    });\n    // listen to image change\n    image.addEventListener('imagecontentchange', this.#getFireEvent(dataId));\n    image.addEventListener('imagegeometrychange', this.#getFireEvent(dataId));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  addNew(dataId, image, meta) {\n    if (typeof this.#dataList[dataId] !== 'undefined') {\n      throw new Error('Data id already used in storage: ' + dataId);\n    }\n    // store the new image\n    this.#dataList[dataId] = new DicomData(meta, image);\n    // listen to image change\n    if (typeof image !== 'undefined') {\n      image.addEventListener('imagecontentchange', this.#getFireEvent(dataId));\n      image.addEventListener('imagegeometrychange', this.#getFireEvent(dataId));\n    }\n  }\n\n  /**\n   * Remove a data from the list.\n   *\n   * @param {string} dataId The data id.\n   */\n  remove(dataId) {\n    if (typeof this.#dataList[dataId] !== 'undefined') {\n      // stop listeners\n      const image = this.#dataList[dataId].image;\n      if (typeof image !== 'undefined') {\n        image.removeEventListener(\n          'imagecontentchange', this.#getFireEvent(dataId));\n        image.removeEventListener(\n          'imagegeometrychange', this.#getFireEvent(dataId));\n      }\n      // fire a data remove event\n      this.#fireEvent({\n        type: 'imageremove',\n        dataid: dataId\n      });\n      // remove data from list\n      delete this.#dataList[dataId];\n    }\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image.\n   * @param {object} meta The image meta.\n   */\n  update(dataId, image, meta) {\n    if (typeof this.#dataList[dataId] === 'undefined') {\n      throw new Error('Cannot find data to update: ' + dataId);\n    }\n    const dataToUpdate = this.#dataList[dataId];\n\n    // add slice to current image\n    if (typeof dataToUpdate.image !== 'undefined' &&\n      typeof image !== 'undefined'\n    ) {\n      dataToUpdate.image.appendSlice(image);\n    }\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      meta,\n      idKey,\n      'value');\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input data id\n   * to the event value.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(dataId) {\n    return (event) => {\n      event.dataid = dataId;\n      this.#fireEvent(event);\n    };\n  }\n\n} // DataController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n *\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>.\n *\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>.\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {ListenerHandler} from '../utils/listen';\nimport {getReverseOrientation} from '../dicom/dicomParser';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a number toprecision function with the provided precision.\n *\n * @param {number} precision The precision to achieve.\n * @returns {Function} The to precision function.\n */\nfunction getNumberToPrecision(precision) {\n  return function (num) {\n    return Number(num).toPrecision(precision);\n  };\n}\n\n/**\n * Create a default replace format from a given length.\n * For example: '{v0}, {v1}'.\n *\n * @param {number} length The length of the format.\n * @returns {string} A replace format.\n */\nfunction createDefaultReplaceFormat(length) {\n  let res = '';\n  for (let i = 0; i < length; ++i) {\n    if (i !== 0) {\n      res += ', ';\n    }\n    res += '{v' + i + '}';\n  }\n  return res;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces in the form: '{v0}, {v1}'.\n *\n * @param {string} inputStr The input string.\n * @param {string[]} values An array of strings.\n * @example\n *    var values = [\"a\", \"b\"];\n *    var str = \"The length is: {v0}. The size is: {v1}\";\n *    var res = replaceFlags(str, values);\n *    // \"The length is: a. The size is: b\"\n * @returns {string} The result string.\n */\nfunction replaceFlags(inputStr, values) {\n  let res = inputStr;\n  for (let i = 0; i < values.length; ++i) {\n    res = res.replace('{v' + i + '}', values[i]);\n  }\n  return res;\n}\n\n/**\n * DICOM Header overlay info.\n */\nexport class OverlayData {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Overlay config.\n   *\n   * @type {object}\n   */\n  #configs;\n\n  /**\n   * List of event used by the config.\n   *\n   * @type {string[]}\n   */\n  #eventNames = [];\n\n  /**\n   * Flag to know if listening to app.\n   *\n   * @type {boolean}\n   */\n  #isListening;\n\n  /**\n   * Overlay data.\n   *\n   * @type {Array}\n   */\n  #data = [];\n\n  /**\n   * Current data uid: set on pos change.\n   *\n   * @type {number}\n   */\n  #currentDataUid;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {App} app The associated application.\n   * @param {string} dataId The associated data id.\n   * @param {object} configs The overlay config.\n   */\n  constructor(app, dataId, configs) {\n    this.#app = app;\n    this.#dataId = dataId;\n    this.#configs = configs;\n\n    // parse overlays to get the list of events to listen to\n    const keys = Object.keys(this.#configs);\n    for (let i = 0; i < keys.length; ++i) {\n      const config = this.#configs[keys[i]];\n      for (let j = 0; j < config.length; ++j) {\n        const eventType = config[j].event;\n        if (typeof eventType !== 'undefined') {\n          if (!this.#eventNames.includes(eventType)) {\n            this.#eventNames.push(eventType);\n          }\n        }\n      }\n    }\n    // add app listeners\n    this.addAppListeners();\n  }\n\n  /**\n   * Reset the data.\n   */\n  reset() {\n    this.#data = [];\n    this.#currentDataUid = undefined;\n  }\n\n  /**\n   * Handle a new loaded item event.\n   *\n   * @param {object} data The item meta data.\n   */\n  addItemMeta(data) {\n    // create and store overlay data\n    let dataUid;\n    // check if dicom data (00020010: transfer syntax)\n    if (typeof data['00020010'] !== 'undefined') {\n      if (typeof data['00080018'] !== 'undefined') {\n        // SOP instance UID\n        dataUid = data['00080018'].value[0];\n      } else {\n        dataUid = data.length;\n      }\n      this.#data[dataUid] = createOverlayData(data, this.#configs);\n    } else {\n      // image file case\n      const keys = Object.keys(data);\n      for (let d = 0; d < keys.length; ++d) {\n        const obj = data[keys[d]];\n        if (keys[d] === 'imageUid') {\n          dataUid = obj.value;\n          break;\n        }\n      }\n      this.#data[dataUid] = createOverlayDataForDom(data, this.#configs);\n    }\n    // store uid\n    this.#currentDataUid = dataUid;\n  }\n\n  /**\n   * Handle a changed slice event.\n   *\n   * @param {object} event The slicechange event.\n   */\n  #onSliceChange = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n    if (typeof event.data !== 'undefined' &&\n      typeof event.data.imageUid !== 'undefined' &&\n      this.#currentDataUid !== event.data.imageUid) {\n      this.#currentDataUid = event.data.imageUid;\n      this.#updateData(event);\n    }\n  };\n\n  /**\n   * Update the overlay data.\n   *\n   * @param {object} event An event defined by the overlay map and\n   *   registered in toggleListeners.\n   */\n  #updateData = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n\n    const sliceOverlayData = this.#data[this.#currentDataUid];\n    if (typeof sliceOverlayData === 'undefined') {\n      console.warn('No slice overlay data for: ' + this.#currentDataUid);\n      return;\n    }\n\n    for (let n = 0; n < sliceOverlayData.length; ++n) {\n      let text = undefined;\n      if (typeof sliceOverlayData[n].tags !== 'undefined') {\n        // update tags only on slice change\n        if (event.type === 'positionchange') {\n          text = sliceOverlayData[n].value;\n        }\n      } else {\n        // update text if the value is an event type\n        if (typeof sliceOverlayData[n].event !== 'undefined' &&\n          sliceOverlayData[n].event === event.type) {\n          const format = sliceOverlayData[n].format;\n          let values = event.value;\n          // optional number precision\n          if (typeof sliceOverlayData[n].precision !== 'undefined') {\n            let mapFunc = null;\n            if (sliceOverlayData[n].precision === 'round') {\n              mapFunc = Math.round;\n            } else {\n              mapFunc = getNumberToPrecision(sliceOverlayData[n].precision);\n            }\n            values = values.map(mapFunc);\n          }\n          text = replaceFlags(format, values);\n        }\n      }\n      if (typeof text !== 'undefined') {\n        sliceOverlayData[n].value = text;\n      }\n    }\n\n    // fire valuechange for listeners\n    this.#fireEvent({type: 'valuechange', data: sliceOverlayData});\n  };\n\n  /**\n   * Is this class listening to app events.\n   *\n   * @returns {boolean} True is listening to app events.\n   */\n  isListening() {\n    return this.#isListening;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  addAppListeners() {\n    // listen to update tags data\n    this.#app.addEventListener('positionchange', this.#onSliceChange);\n    // add event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.addEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = true;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  removeAppListeners() {\n    // stop listening to update tags data\n    this.#app.removeEventListener('positionchange', this.#onSliceChange);\n    // remove event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.removeEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = false;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent(event) {\n    this.#listenerHandler.fireEvent(event);\n  }\n\n} // class OverlayData\n\n/**\n * Create overlay data array for a DICOM image.\n *\n * @param {object} dicomElements DICOM elements of the image.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayData(dicomElements, configs) {\n  const overlays = [];\n  let modality;\n  const modElement = dicomElements['00080060'];\n  if (typeof modElement !== 'undefined') {\n    modality = modElement.value[0];\n  } else {\n    return overlays;\n  }\n  const config = configs[modality] || configs['*'];\n  if (!config) {\n    return overlays;\n  }\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        const elem = dicomElements[tags[i]];\n        if (typeof elem !== 'undefined') {\n          values.push(dicomElements[tags[i]].value);\n        } else {\n          values.push('');\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  // (0020,0020) Patient Orientation\n  const poElement = dicomElements['00200020'];\n  if (typeof poElement !== 'undefined' &&\n    poElement.value.length === 2\n  ) {\n    const po0 = poElement.value[0];\n    const po1 = poElement.value[1];\n    overlays.push({\n      pos: 'cr', value: po0, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'cl', value: getReverseOrientation(po0), format: '{v0}'\n    });\n    overlays.push({\n      pos: 'bc', value: po1, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'tc', value: getReverseOrientation(po1), format: '{v0}'\n    });\n  }\n\n  return overlays;\n}\n\n/**\n * Create overlay data array for a DOM image.\n *\n * @param {object} info Meta data.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayDataForDom(info, configs) {\n  const overlays = [];\n  const config = configs.DOM;\n  if (!config) {\n    return overlays;\n  }\n\n  const infoKeys = Object.keys(info);\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        for (let j = 0; j < infoKeys.length; ++j) {\n          if (tags[i] === infoKeys[j]) {\n            values.push(info[infoKeys[j]].value);\n          }\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  return overlays;\n}\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a normalised spin speed in the Y direction to try to support\n * trackpads (small and large deltaY) and mouse wheel (large deltaY).\n * Should return 1 or -1 for a single mouse wheel tick.\n *\n * @param {object} event The wheel event.\n * @returns {number} The normalised spin Y.\n */\nfunction getSpinY(event) {\n  // (notes of 03/2024)\n\n  // firefox seems to change the value of deltaY\n  // if you ask for deltaMode before (?????)\n\n  // deltaY (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 4\n  // - firefox: [linux] 132, [mac]: 16\n\n  // wheelDelta (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 240\n  // - firefox: [linux] 120, [mac]: 48\n\n  // -> using wheelDelta for mouse wheel detection as\n  //    it is consistently larger than trackpad scroll\n\n  // wheelDeltaY and deltaY do not go in the same direction,\n  // using -deltaY so that they do...\n\n  if (typeof event.wheelDeltaY === 'undefined') {\n    //logger.warn('No wheel delta, scroll could be tricky...);\n    return -event.deltaY;\n  } else {\n    const threshold = 45;\n    if (event.wheelDeltaY > threshold) {\n      return 1;\n    } else if (event.wheelDeltaY < -threshold) {\n      return -1;\n    } else {\n      return -event.deltaY / 60;\n    }\n  }\n}\n\n/**\n * Class to sum wheel events and know if that sum\n * corresponds to a 'tick'.\n */\nclass ScrollSum {\n  /**\n   * The scroll sum.\n   *\n   * @type {number}\n   */\n  #sum = 0;\n\n  /**\n   * Get the scroll sum.\n   *\n   * @returns {number} The scroll sum.\n   */\n  getSum() {\n    return this.#sum;\n  }\n\n  /**\n   * Add scroll.\n   *\n   * @param {object} event The wheel event.\n   */\n  add(event) {\n    this.#sum += getSpinY(event);\n  }\n\n  /**\n   * Clear the scroll sum.\n   */\n  clear() {\n    this.#sum = 0;\n  }\n\n  /**\n   * Does the accumulated scroll correspond to a 'tick'.\n   *\n   * @returns {boolean} True if the sum corresponds to a 'tick'.\n   */\n  isTick() {\n    return Math.abs(this.#sum) >= 1;\n  }\n}\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated scroll.\n   *\n   * @type {ScrollSum}\n   */\n  #scrollSum = new ScrollSum();\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel(event) {\n    this.#scrollSum.add(event);\n    const up = this.#scrollSum.getSum() >= 0;\n\n    // exit if no tick\n    if (!this.#scrollSum.isTick()) {\n      return;\n    } else {\n      this.#scrollSum.clear();\n    }\n\n    // prevent default page scroll\n    event.preventDefault();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    let newPosition;\n    if (layerGroup.canScroll()) {\n      if (up) {\n        newPosition = viewController.getIncrementScrollPosition();\n      } else {\n        newPosition = viewController.getDecrementScrollPosition();\n      }\n    } else if (layerGroup.moreThanOne(3)) {\n      if (up) {\n        newPosition = viewController.getIncrementPosition(3);\n      } else {\n        newPosition = viewController.getDecrementPosition(3);\n      }\n    }\n\n    // set all layers if at least one can be set\n    if (typeof newPosition !== 'undefined' &&\n      layerGroup.isPositionInBounds(newPosition)) {\n      viewController.setCurrentPosition(newPosition);\n    }\n  }\n\n} // ScrollWheel class\n","/**\n * Namespace for translation function\n *   (in a namespace to allow for override from client).\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    // defaut expects something like 'unit.cm2'\n    const unit = {\n      mm: 'mm',\n      cm2: 'cm²',\n      degree: '°'\n    };\n    const props = key.split('.');\n    if (props.length !== 2) {\n      throw new Error('Unexpected translation key length.');\n    }\n    if (props[0] !== 'unit') {\n      throw new Error('Unexpected translation key prefix.');\n    }\n    return unit[props[1]];\n  }\n\n};\n","import {Point2D} from './point';\nimport {i18n} from '../utils/i18n';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacing2D) {\n    let wlen = null;\n    if (spacing2D !== null) {\n      const dxs = this.getDeltaX() * spacing2D.x;\n      const dys = this.getDeltaY() * spacing2D.y;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing2D = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing2D);\n    if (length !== null) {\n      quant.length = {value: length, unit: i18n.t('unit.mm')};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Get a perpendicular line to an input one.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @returns {object} A perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length) {\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  // check slope:\n  // 0 -> horizontal\n  // Infinite -> vertical (a/Infinite = 0)\n  if (line.getSlope() !== 0) {\n    // a0 * a1 = -1\n    const slope = -1 / line.getSlope();\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n    const intercept = point.getY() - slope * point.getX();\n\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\n    // -> x = x0 +- d / sqrt(1+m^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  } else {\n    // horizontal input line -> perpendicular is vertical!\n    // begin point\n    beginX = point.getX();\n    beginY = point.getY() - length / 2;\n    // end point\n    endX = point.getX();\n    endY = point.getY() + length / 2;\n  }\n  // perpendicalar line\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","import {logger} from '../utils/logger';\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\nimport {validateAnchorPosition} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {ViewController} from '../app/viewController';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {Style} style The application style.\n * @returns {Konva.Ellipse} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(3);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Shape editor.\n */\nexport class ShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Shape factory list.\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {Konva.Shape}\n   */\n  #shape = null;\n\n  /**\n   * Associated draw layer. Used to bound anchor move.\n   *\n   * @type {DrawLayer}\n   */\n  #drawLayer;\n\n  /**\n   * Associated view controller. Used for quantification update.\n   *\n   * @type {ViewController}\n   */\n  #viewController = null;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Draw event callback.\n   *\n   * @type {eventFn}\n   */\n  #drawEventCallback = null;\n\n  /**\n   * Set the tool options.\n   *\n   * @param {Array} list The list of shape classes.\n   */\n  setFactoryList(list) {\n    this.#shapeFactoryList = list;\n  }\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {Konva.Shape} inshape The shape to edit.\n   * @param {DrawLayer} drawLayer The associated draw layer.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  setShape(inshape, drawLayer, viewController) {\n    this.#shape = inshape;\n    this.#drawLayer = drawLayer;\n    this.#viewController = viewController;\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n      // find a factory for the input shape\n      const group = this.#shape.getParent();\n      const keys = Object.keys(this.#shapeFactoryList);\n      this.#currentFactory = null;\n      for (let i = 0; i < keys.length; ++i) {\n        const factory = new this.#shapeFactoryList[keys[i]];\n        if (factory.isFactoryGroup(group)) {\n          this.#currentFactory = factory;\n          // stop at first find\n          break;\n        }\n      }\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {Konva.Shape} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Set the draw event callback.\n   *\n   * @param {eventFn} callback The callback.\n   */\n  setDrawEventCallback(callback) {\n    this.#drawEventCallback = callback;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the editor.\n   */\n  reset() {\n    this.#shape = undefined;\n    this.#drawLayer = undefined;\n    this.#viewController = undefined;\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Get a simple clone of the input anchor.\n   *\n   * @param {Konva.Shape} anchor The anchor to clone.\n   * @returns {object} A clone of the input anchor.\n   */\n  #getClone(anchor) {\n    // create closure to properties\n    const parent = anchor.getParent();\n    const id = anchor.id();\n    const x = anchor.x();\n    const y = anchor.y();\n    // create clone object\n    const clone = {};\n    clone.getParent = function () {\n      return parent;\n    };\n    clone.id = function () {\n      return id;\n    };\n    clone.x = function () {\n      return x;\n    };\n    clone.y = function () {\n      return y;\n    };\n    return clone;\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let startAnchor = null;\n\n    // command name based on shape type\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      startAnchor = this.#getClone(anchor);\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // validate the anchor position\n      validateAnchorPosition(this.#drawLayer.getBaseSize(), anchor);\n      // update shape\n      this.#currentFactory.update(\n        anchor, this.#app.getStyle(), this.#viewController);\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      const endAnchor = this.#getClone(anchor);\n      // store the change command\n      const chgcmd = new ChangeGroupCommand(\n        shapeDisplayName,\n        this.#currentFactory,\n        startAnchor,\n        endAnchor,\n        this.#drawLayer,\n        this.#viewController,\n        this.#app.getStyle()\n      );\n      chgcmd.onExecute = this.#drawEventCallback;\n      chgcmd.onUndo = this.#drawEventCallback;\n      chgcmd.execute();\n      this.#app.addToUndoStack(chgcmd);\n      // reset start anchor\n      startAnchor = endAnchor;\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints,\n  customUI\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {replaceFlags} from '../utils/string';\nimport {\n  getShapeDisplayName,\n  DrawGroupCommand,\n  DeleteGroupCommand,\n  MoveGroupCommand\n} from './drawCommands';\nimport {\n  isNodeNameShape\n} from '../app/drawController';\nimport {ScrollWheel} from './scrollWheel';\nimport {ShapeEditor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {DrawTrash} from './drawTrash';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw of layer group structure.\n *\n * ```\n * drawLayer\n * |_ positionGroup: {name=\"position-group\", id=\"#2-0#_#3-1\"}\n *    |_ shapeGroup: {name=\"{shape name}-group\", id=\"#\"}\n *       |_ shape: {name=\"shape\"},\n *       |_ label: {name=\"label\"},\n *       |_ extra: line tick, protractor arc...\n * ```\n *\n * Discussion:\n * - posGroup > shapeGroup:\n *   (pro) slice/frame display: 1 loop -\n *   (cons) multi-slice shape splitted in positionGroups.\n * - shapeGroup > posGroup:\n *   (pros) more logical -\n *   (cons) slice/frame display: 2 loops.\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Shape editor.\n   *\n   * @type {ShapeEditor}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {DrawTrash}\n   */\n  #trash;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeEditor = new ShapeEditor(app);\n    // associate the event listeners of the editor\n    //  with those of the draw tool\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\n\n    this.#style = app.getStyle();\n    this.#trash = new DrawTrash();\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #isDrawing = false;\n\n  /**\n   * Shape factory list.\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {Point2D}\n   */\n  #lastPoint = null;\n\n  /**\n   * Active shape, ie shape with mouse over.\n   *\n   * @type {Konva.Group}\n   */\n  #activeShapeGroup;\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * With scroll flag.\n   *\n   * @type {boolean}\n   */\n  #withScroll = true;\n\n  /**\n   * Auto shape colour: will use defaults colours and\n   * vary them according to the layer.\n   *\n   * @type {boolean}\n   */\n  #autoShapeColour = true;\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Flag to know if the last added point was made by mouse move.\n   *\n   * @type {boolean}\n   */\n  #lastIsMouseMovePoint = false;\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #switchEditOrCreateShapeGroup(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n\n    // determine if the click happened in an existing shape\n    const kshape = stage.getIntersection({\n      x: point.getX(),\n      y: point.getY()\n    });\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    // If shape exists, let user to edit\n    if (kshape) {\n      this.#selectShapeGroup(layerGroup, drawLayer, kshape);\n      return;\n    }\n    // Else, is a new shape creation\n    this.#startShapeGroupCreation(layerGroup, point);\n  }\n\n  /**\n   * Initializes the new shape creation:\n   * - Updates the started variable,\n   * - Gets the factory,\n   * - Initializes the points array.\n   *\n   * @param {LayerGroup} layerGroup The layer group where the user clicks.\n   * @param {Point2D} point The start point where the user clicks.\n   */\n  #startShapeGroupCreation(layerGroup, point) {\n    // disable edition\n    this.#shapeEditor.disable();\n    this.#shapeEditor.reset();\n    this.#setToDrawingState();\n    // store point\n    const viewLayer = layerGroup.getActiveViewLayer();\n    this.#lastPoint = viewLayer.displayToPlanePos(point);\n    this.#points.push(this.#lastPoint);\n  }\n\n  /**\n   * Sets the variables to drawing state:\n   * - Updates is drawing variable,\n   * - Initializes the current factory,\n   * - Resets points.\n   */\n  #setToDrawingState() {\n    // start storing points\n    this.#isDrawing = true;\n    // set factory\n    this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n    // clear array\n    this.#points = [];\n  }\n\n  /**\n   * Resets the variables to not drawing state:\n   * - Destroys tmp shape group,\n   * - Updates is drawing variable,\n   * - Resets points.\n   */\n  #setToNotDrawingState() {\n    this.#isDrawing = false;\n    this.#points = [];\n  }\n\n  /**\n   * Selects a shape group.\n   *\n   * @param {LayerGroup} layerGroup The layer group where the user clicks.\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   * @param {Konva.Shape} kshape The shape that has been selected.\n   */\n  #selectShapeGroup(layerGroup, drawLayer, kshape) {\n    const group = kshape.getParent();\n    const selectedShape = group.find('.shape')[0];\n    // reset editor if click on other shape\n    // (and avoid anchors mouse down)\n    if (selectedShape &&\n        selectedShape instanceof Konva.Shape &&\n        selectedShape !== this.#shapeEditor.getShape()) {\n      this.#shapeEditor.disable();\n      const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n      this.#shapeEditor.setShape(selectedShape, drawLayer, viewController);\n      this.#shapeEditor.enable();\n    }\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #updateShapeGroupCreation(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(point);\n\n    // draw line to current pos\n    if (Math.abs(pos.getX() - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this.#lastPoint.getY()) > 0) {\n      // clear last mouse move point\n      if (this.#lastIsMouseMovePoint) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = pos;\n      // mark it as temporary\n      this.#lastIsMouseMovePoint = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   *\n   * @param {string} divId The layer group divId.\n   */\n  #finishShapeGroupCreation(divId) {\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(divId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      this.#setToNotDrawingState();\n    }\n\n    // reset mouse move point flag\n    this.#lastIsMouseMovePoint = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if not started draw\n    if (this.#isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#switchEditOrCreateShapeGroup(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#updateShapeGroupCreation(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    this.#setToNotDrawingState();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // exit if not started draw\n    if (this.#isDrawing) {\n      return;\n    }\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#switchEditOrCreateShapeGroup(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const touchPoints = getTouchPoints(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(touchPoints[0]);\n\n    if (Math.abs(pos.getX() - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = pos;\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    if (this.#withScroll) {\n      this.#scrollWhell.wheel(event);\n    }\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#isDrawing) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n\n    // press delete or backspace key\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      this.#shapeEditor.isActive()) {\n      // get shape\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\n      if (!(shapeGroup instanceof Konva.Group)) {\n        return;\n      }\n      const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n      if (!(shape instanceof Konva.Shape)) {\n        return;\n      }\n      // delete command\n      const drawLayer = this.#app.getActiveLayerGroup().getActiveDrawLayer();\n      this.#emitDeleteCommand(drawLayer, shapeGroup, shape);\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      const konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // set state\n      this.#setToNotDrawingState();\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Point2D[]} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const viewLayer = layerGroup.getActiveViewLayer();\n\n    // auto mode: vary shape colour with layer id\n    if (this.#autoShapeColour) {\n      const colours = [\n        '#ffff80', '#ff80ff', '#80ffff', '#80ff80', '8080ff', 'ff8080'\n      ];\n      // warning: depends on layer id nomenclature\n      const viewLayerId = viewLayer.getId();\n      const layerId = viewLayerId.substring(viewLayerId.length - 1);\n      // expecting one draw layer per view layer\n      const layerIndex = parseInt(layerId, 10) / 2;\n      const colour = colours[layerIndex];\n      if (typeof colour !== 'undefined') {\n        this.#style.setLineColour(colour);\n      }\n    }\n\n    // create shape group\n    const viewController = viewLayer.getViewController();\n    this.#tmpShapeGroup = this.#currentFactory.create(\n      tmpPoints, this.#style, viewController);\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Point2D[]} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    // remove temporary shape draw\n    // (has to be done before sending drawcreate event)\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const drawController = drawLayer.getDrawController();\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // create final shape\n    const finalShapeGroup = this.#currentFactory.create(\n      finalPoints, this.#style, viewController);\n    finalShapeGroup.id(guid());\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(finalShapeGroup);\n\n    // re-activate layer\n    konvaLayer.listening(true);\n    this.#emitDrawGroupCommand(drawLayer, finalShapeGroup);\n\n    // activate shape listeners\n    this.#addShapeListeners(layerGroup, finalShapeGroup);\n  }\n\n  /**\n   * Create a draw group command, execute it and add\n   *   it to the undo stack.\n   *\n   * @param {DrawLayer} drawLayer The associated layer.\n   * @param {Konva.Group} shapeGroup The shape group to draw.\n   */\n  #emitDrawGroupCommand(drawLayer, shapeGroup) {\n    // draw shape command\n    const command = new DrawGroupCommand(\n      shapeGroup,\n      this.#shapeName,\n      drawLayer\n    );\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    // execute it\n    command.execute();\n    // add it to undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Create a delete group command, execute it and add\n   *   it to the undo stack.\n   *\n   * @param {DrawLayer} drawLayer The associated layer.\n   * @param {Konva.Group} shapeGroup The shape group to delete.\n   * @param {Konva.Shape} shape The shape to delete.\n   */\n  #emitDeleteCommand(drawLayer, shapeGroup, shape) {\n    const shapeDisplayName = getShapeDisplayName(shape);\n    // delete command\n    const delcmd = new DeleteGroupCommand(\n      shapeGroup,\n      shapeDisplayName,\n      drawLayer\n    );\n    delcmd.onExecute = this.#fireEvent;\n    delcmd.onUndo = this.#fireEvent;\n    // execute it\n    delcmd.execute();\n    // add it to undo stack\n    this.#app.addToUndoStack(delcmd);\n  }\n\n  /**\n   * Create a move group command and add\n   *   it to the undo stack. To no execute it.\n   *\n   * @param {DrawLayer} drawLayer The associated layer.\n   * @param {Konva.Group} shapeGroup The shape group to move.\n   * @param {Konva.Shape} shape The shape to move.\n   * @param {object} translation The move translation as {x,y}.\n   */\n  #storeMoveCommand(drawLayer, shapeGroup, shape, translation) {\n    const shapeDisplayName = getShapeDisplayName(shape);\n    const mvcmd = new MoveGroupCommand(\n      shapeGroup,\n      shapeDisplayName,\n      translation,\n      drawLayer\n    );\n    mvcmd.onExecute = this.#fireEvent;\n    mvcmd.onUndo = this.#fireEvent;\n    // add it to undo stack\n    this.#app.addToUndoStack(mvcmd);\n  }\n\n  /**\n   * Get a layerGroup position callback.\n   *\n   * TODO: check needo for store item removal.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {Function} The layerGroup position callback.\n   */\n  #getPositionCallback(layerGroup) {\n    const divId = layerGroup.getDivId();\n    if (typeof this.#callbackStore[divId] === 'undefined') {\n      this.#callbackStore[divId] = () => {\n        this.#updateDrawLayer(layerGroup);\n      };\n    }\n    return this.#callbackStore[divId];\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // reset shape display properties\n    this.#shapeEditor.disable();\n    this.#shapeEditor.reset();\n    // get the current draw layer\n    const layerGroup = this.#app.getActiveLayerGroup();\n    if (typeof layerGroup === 'undefined') {\n      throw new Error('No active layerGroup to activate draw on');\n    }\n    this.#activateCurrentPositionShapes(flag, layerGroup);\n    // listen to app change to update the draw layer\n    if (flag) {\n      // store cursor\n      this.#originalCursor = document.body.style.cursor;\n      // TODO: merge with drawController.activateDrawLayer?\n      this.#app.addEventListener('positionchange',\n        this.#getPositionCallback(layerGroup)\n      );\n    } else {\n      // reset shape and cursor\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#originalCursor = undefined;\n      // remove listeners\n      this.#app.removeEventListener('positionchange',\n        this.#getPositionCallback(layerGroup)\n      );\n    }\n  }\n\n  /**\n   * Update the draw layer.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #updateDrawLayer(layerGroup) {\n    // activate the shape at current position\n    this.#activateCurrentPositionShapes(true, layerGroup);\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} visible Set the draw layer visible or not.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #activateCurrentPositionShapes(visible, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      return;\n    }\n    const drawController = drawLayer.getDrawController();\n\n    // get shape groups at the current position\n    const shapeGroups =\n      drawController.getCurrentPosGroup().getChildren();\n\n    // set shape display properties\n    if (visible) {\n      // activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#addShapeListeners(layerGroup, group);\n      });\n    } else {\n      // de-activate shape listeners\n      shapeGroups.forEach((group) => {\n        this.#removeShapeListeners(group);\n      });\n    }\n    // draw\n    const konvaLayer = drawLayer.getKonvaLayer();\n    if (shapeGroups.length !== 0) {\n      konvaLayer.listening(true);\n    }\n    konvaLayer.draw();\n  }\n\n  /**\n   * Remove shape group listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set off.\n   */\n  #removeShapeListeners(shapeGroup) {\n    // mouse over\n    this.#removeShapeOverListeners(shapeGroup);\n    // drag\n    shapeGroup.draggable(false);\n    shapeGroup.off('dragstart.draw');\n    shapeGroup.off('dragmove.draw');\n    shapeGroup.off('dragend.draw');\n    shapeGroup.off('dblclick');\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {Scalar2D} index The input index as {x,y}.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {Scalar2D} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Reset the active shape group and mouse cursor to their original state.\n   */\n  #resetActiveShapeGroup() {\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n    }\n    if (typeof this.#activeShapeGroup !== 'undefined') {\n      this.#activeShapeGroup.opacity(1);\n    }\n  }\n\n  /**\n   * Add shape group mouse over and out listeners: updates\n   *   shape group opacity and cursor.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  #addShapeOverListeners(shapeGroup) {\n    // handle mouse over\n    shapeGroup.on('mouseover', () => {\n      // store locally\n      this.#activeShapeGroup = shapeGroup;\n      // change cursor and opacity\n      document.body.style.cursor = this.#mouseOverCursor;\n      shapeGroup.opacity(0.75);\n    });\n\n    // handle mouse out\n    shapeGroup.on('mouseout', () => {\n      // reset cursor and opacity\n      this.#resetActiveShapeGroup();\n      // reset local var\n      this.#activeShapeGroup = undefined;\n    });\n  }\n\n  /**\n   * Remove shape group mouse over and out listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  #removeShapeOverListeners(shapeGroup) {\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n  }\n\n  /**\n   * Get a groups' shape factory.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   * @returns {object} The corresponding factory.\n   */\n  #getShapeFactory(shapeGroup) {\n    let factory;\n    const keys = Object.keys(this.#shapeFactoryList);\n    for (let i = 0; i < keys.length; ++i) {\n      factory = new this.#shapeFactoryList[keys[i]];\n      if (factory.isFactoryGroup(shapeGroup)) {\n        // stop at first find\n        break;\n      }\n    }\n    if (typeof factory === 'undefined') {\n      throw new Error('Cannot find factory to update quantification.');\n    }\n    return factory;\n  }\n\n  /**\n   * Add shape group listeners.\n   *\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   */\n  #addShapeListeners(layerGroup, shapeGroup) {\n    // shape mouse over\n    this.#addShapeOverListeners(shapeGroup);\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    // make it draggable\n    shapeGroup.draggable(true);\n    // cache drag start position\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\n\n    // command name based on shape type\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n\n    let colour = null;\n\n    // drag start event handling\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\n      // store colour\n      const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n      if (!(shape instanceof Konva.Shape)) {\n        return;\n      }\n      colour = shape.stroke();\n      // display trash\n      this.#trash.activate(drawLayer);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag move event handling\n    shapeGroup.on('dragmove.draw', (event) => {\n      const group = event.target;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // validate the group position\n      validateGroupPosition(drawLayer.getBaseSize(), group);\n      // get appropriate factory\n      const factory = this.#getShapeFactory(shapeGroup);\n      // update quantification if possible\n      if (typeof factory.updateQuantification !== 'undefined') {\n        const vc = layerGroup.getActiveViewLayer().getViewController();\n        factory.updateQuantification(group, vc);\n      }\n      // highlight trash when on it\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      this.#trash.changeChildrenColourOnTrashHover(eventPos,\n        shapeGroup, colour);\n      // draw\n      konvaLayer.draw();\n    });\n    // drag end event handling\n    shapeGroup.on('dragend.draw', (event) => {\n      const group = event.target;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: group.x(), y: group.y()};\n      // delete case\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this.#getRealPosition(offset, layerGroup);\n      if (this.#trash.isOverTrash(eventPos)) {\n        // compensate for the drag translation\n        group.x(dragStartPos.x);\n        group.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.reset();\n        this.#trash.changeGroupChildrenColour(shapeGroup, colour);\n        this.#emitDeleteCommand(drawLayer, shapeGroup, shape);\n        // reset cursor\n        document.body.style.cursor = this.#originalCursor;\n      } else {\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          // the move is handled by Konva, create a command but\n          // do not execute it\n          this.#storeMoveCommand(drawLayer, group, shape, translation);\n          // manually trigger a move event\n          this.#fireEvent({\n            type: 'drawmove',\n            id: group.id(),\n            srclayerid: drawLayer.getId(),\n            dataid: drawLayer.getDataId()\n          });\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {x: group.x(), y: group.y()};\n    });\n    // double click handling: update label\n    shapeGroup.on('dblclick', (event) => {\n      const group = event.currentTarget;\n      if (!(group instanceof Konva.Group)) {\n        return;\n      }\n      // get the label object for this shape\n      const label = group.findOne('Label');\n      if (!(label instanceof Konva.Label)) {\n        return;\n      }\n      // should just be one\n      if (typeof label === 'undefined') {\n        throw new Error('Could not find the shape label.');\n      }\n      const ktext = label.getText();\n      // id for event\n      const groupId = group.id();\n\n      const onSaveCallback = (meta) => {\n        // store meta\n        // @ts-expect-error\n        ktext.meta = meta;\n        // update text expression\n        ktext.setText(replaceFlags(\n          meta.textExpr, meta.quantification));\n        // hide label if no text\n        label.visible(meta.textExpr.length !== 0);\n\n        // trigger event\n        this.#fireEvent({\n          type: 'drawchange',\n          id: groupId,\n          srclayerid: drawLayer.getId(),\n          dataid: drawLayer.getDataId()\n        });\n        // draw\n        konvaLayer.draw();\n      };\n\n      // call roi dialog\n      // @ts-expect-error\n      customUI.openRoiDialog(ktext.meta, onSaveCallback);\n    });\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n    // pass them to the editor\n    this.#shapeEditor.setFactoryList(options);\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.autoShapeColour !== 'undefined') {\n      this.#autoShapeColour = features.autoShapeColour;\n    }\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n      this.#autoShapeColour = false;\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#mouseOverCursor = features.mouseOverCursor;\n    }\n    if (typeof features.withScroll !== 'undefined') {\n      this.#withScroll = features.withScroll;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n\n/**\n * Get the minimum position in a groups' anchors.\n *\n * @param {Konva.Group} group The group that contains anchors.\n * @returns {Point2D|undefined} The minimum position.\n */\nfunction getAnchorMin(group) {\n  const anchors = group.find('.anchor');\n  if (anchors.length === 0) {\n    return undefined;\n  }\n  let minX = anchors[0].x();\n  let minY = anchors[0].y();\n  for (let i = 0; i < anchors.length; ++i) {\n    minX = Math.min(minX, anchors[i].x());\n    minY = Math.min(minY, anchors[i].y());\n  }\n\n  return new Point2D(minX, minY);\n}\n\n/**\n * Bound a node position.\n *\n * @param {Konva.Node} node The node to bound the position.\n * @param {Point2D} min The minimum position.\n * @param {Point2D} max The maximum position.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.getX()) {\n    node.x(min.getX());\n    changed = true;\n  } else if (node.x() > max.getX()) {\n    node.x(max.getX());\n    changed = true;\n  }\n  if (node.y() < min.getY()) {\n    node.y(min.getY());\n    changed = true;\n  } else if (node.y() > max.getY()) {\n    node.y(max.getY());\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Validate a group position.\n *\n * @param {Scalar2D} stageSize The stage size {x,y}.\n * @param {Konva.Group} group The group to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nfunction validateGroupPosition(stageSize, group) {\n  // if anchors get mixed, width/height can be negative\n  const shape = group.getChildren(isNodeNameShape)[0];\n  const anchorMin = getAnchorMin(group);\n  // handle no anchor: when dragging the label, the editor does\n  //   not activate\n  if (typeof anchorMin === 'undefined') {\n    return null;\n  }\n\n  const min = new Point2D(\n    -anchorMin.getX(),\n    -anchorMin.getY()\n  );\n  const max = new Point2D(\n    stageSize.x - (anchorMin.getX() + Math.abs(shape.width())),\n    stageSize.y - (anchorMin.getY() + Math.abs(shape.height()))\n  );\n\n  return boundNodePosition(group, min, max);\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {Scalar2D} stageSize The stage size {x,y}.\n * @param {Konva.Shape} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = new Point2D(\n    -group.x(),\n    -group.y()\n  );\n  const max = new Point2D(\n    stageSize.x - group.x(),\n    stageSize.y - group.y()\n  );\n\n  return boundNodePosition(anchor, min, max);\n}\n","import Konva from 'konva';\n\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\nexport class DrawTrash {\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {Konva.Group}\n   */\n  #trash;\n\n  constructor() {\n    this.createTrashIcon();\n\n  }\n\n  /**\n   * Creates the trash icon o positionates it.\n   */\n  createTrashIcon() {\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   *\n   * Activates the trash, by showing the icon into the layer draw layer.\n   *\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   */\n  activate(drawLayer) {\n    const stage = drawLayer.getKonvaStage();\n    const scale = stage.scale();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n    this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n    this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n    this.#trash.scale(invscale);\n    konvaLayer.add(this.#trash);\n    // draw\n    konvaLayer.draw();\n  }\n\n  /**\n   *\n   * Change colour on trash over.\n   *\n   * @param {Scalar2D} eventPosition The event drag move position.\n   * @param {Konva.Group} shapeGroup The shape group whose colour\n   *   must be change.\n   * @param {string} originalShapeColour The original shape colour.\n   */\n  changeChildrenColourOnTrashHover(eventPosition,\n    shapeGroup, originalShapeColour) {\n    if (this.isOverTrash(eventPosition)) {\n      this.changeGroupChildrenColour(this.#trash, 'orange');\n      this.changeGroupChildrenColour(shapeGroup, 'red');\n      return;\n\n    }\n    this.changeGroupChildrenColour(this.#trash, 'red');\n    this.changeGroupChildrenColour(shapeGroup, originalShapeColour);\n  }\n\n  /**\n   * Change colour on trash out.\n   *\n   * @param {Konva.Group} group The group whose colour must be change.\n   * @param {string} colour The new colour to be set.\n   */\n  changeGroupChildrenColour(group, colour) {\n    group.getChildren().forEach(function (tshape) {\n      if (tshape instanceof Konva.Shape &&\n        typeof tshape.stroke !== 'undefined') {\n        tshape.stroke(colour);\n      }\n    });\n  }\n\n  /**\n   * Removes the trash from the draw layer.\n   */\n  remove() {\n    this.#trash.remove();\n  }\n\n  /**\n   * Determines if the event is over trash.\n   *\n   * @param {Scalar2D} eventPosition The event position.\n   * @returns {boolean} True if the event is over trash.\n   */\n  isOverTrash(eventPosition) {\n    const trashHalfWidth =\n        this.#trash.width() * Math.abs(this.#trash.scaleX()) / 2;\n    const trashHalfHeight =\n        this.#trash.height() * Math.abs(this.#trash.scaleY()) / 2;\n    return Math.abs(eventPosition.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPosition.y - this.#trash.y()) < trashHalfHeight;\n  }\n\n}","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points = [];\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Point2D[]} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n} // ROI class\n","// linting 'type {Object.<bla, bla>}' will give:\n// warning  Use object shorthand or index signatures instead of `Object`,\n//   e.g., `{[key: string]: string}` jsdoc/check-types\n// pb: jsdoc does not support the object shorthand\n//   and ignoring will give vscode warning since the doc linting is not\n//   activated by default.\n\n// Overridable default object.\nexport const defaults = {\n  /**\n   * List of default window level presets.\n   *\n   * @type {Object.<string, Object.<string, string>>}\n   */\n  labelText: {\n    arrow: {\n      '*': ''\n    },\n    circle: {\n      '*': '{surface}'\n    },\n    ellipse: {\n      '*': '{surface}'\n    },\n    freeHand: {\n      '*': ''\n    },\n    protractor: {\n      '*': '{angle}'\n    },\n    rectangle: {\n      '*': '{surface}'\n    },\n    roi: {\n      '*': ''\n    },\n    ruler: {\n      '*': '{length}'\n    }\n  }\n};\n","import {ROI} from '../math/roi';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'roi-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} [viewController] The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const roi = new ROI();\n    // add input points to the ROI\n    roi.addPoints(points);\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    if (typeof viewController !== 'undefined') {\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.roi[modality] !== 'undefined') {\n        textExpr = defaults.labelText.roi[modality];\n      } else {\n        textExpr = defaults.labelText.roi['*'];\n      }\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: roi.getPoint(0).getX(),\n      y: roi.getPoint(0).getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a roi shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kroi instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kroi.points();\n    const index = parseInt(anchor.id(), 10);\n    points[index] = anchor.x() - kroi.x();\n    points[index + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    ktext.setText(meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kroi.x(),\n      y: points[1] + kroi.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class RoiFactory\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Point2D[]} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {number[]} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Point2D[]}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {number[]}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Point2D[]} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * Compute grey scale.\n *\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object.\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * Compute gradient.\n *\n * @param {object} greyscale The input greyscale.\n * @returns {object} A gradient object.\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors.\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * See: {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}.\n *\n * Highly inspired from: {@link http://code.google.com/p/livewire-javascript/}.\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  #costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Circle#Equations}.\n   *\n   * Circle formula: `x*x + y*y = r*r`.\n   *\n   * Implies: `y = (+-) sqrt(r*r - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.radius = {\n      value: this.getRadius() * spacing2D.x,\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {i18n} from '../utils/i18n';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Ellipse#Standard_equation}.\n   *\n   * Ellipse formula: `x*x / a*a + y*y / b*b = 1`.\n   *\n   * Implies: `y = (+-)(b/a) * sqrt(a*a - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.a = {\n      value: this.getA() * spacing2D.x,\n      unit: i18n.t('unit.mm')\n    };\n    quant.b = {\n      value: this.getB() * spacing2D.y,\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {number[]} radius The 2 ellipse radiuses.\n * @param {number[]} dir The 2 ellipse directions.\n * @returns {Index[]} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {i18n} from '../utils/i18n';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits as {min, max} (Point2D).\n   */\n  getRound() {\n    const roundBegin = new Point2D(\n      Math.round(this.getBegin().getX()),\n      Math.round(this.getBegin().getY())\n    );\n    const roundEnd = new Point2D(\n      Math.round(this.getEnd().getX()),\n      Math.round(this.getEnd().getY())\n    );\n    return {\n      min: roundBegin,\n      max: roundEnd\n    };\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.width = {\n      value: this.getWidth() * spacing2D.x,\n      unit: i18n.t('unit.mm')\n    };\n    quant.height = {\n      value: this.getHeight() * spacing2D.y,\n      unit: i18n.t('unit.mm')\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const unit = viewController.getPixelUnit();\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: unit};\n      quant.max = {value: quantif.max, unit: unit};\n      quant.mean = {value: quantif.mean, unit: unit};\n      quant.stdDev = {value: quantif.stdDev, unit: unit};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: unit};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: unit};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: unit};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list.\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run threshod filter on.');\n    }\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      this.#filter.setOriginalImage(this.#app.getImage(args.dataId));\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sharpen filter on.');\n    }\n    const filter = new SharpenFilter();\n    filter.setOriginalImage(this.#app.getImage(args.dataId));\n    const command = new RunFilterCommand(filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sobel filter on.');\n    }\n    const filter = new SobelFilter();\n    filter.setOriginalImage(this.#app.getImage(args.dataId));\n    const command = new RunFilterCommand(filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {string} dataId The data to filter.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, dataId, app) {\n    this.#filter = filter;\n    this.#dataId = dataId;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setImage(this.#dataId, this.#filter.update());\n    // update display\n    this.#app.render(this.#dataId);\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName(),\n      dataId: this.#dataId\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setImage(this.#dataId, this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(this.#dataId);\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName(),\n      dataid: this.#dataId\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {FreeHandFactory} from './freeHand';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\n/**\n * List of client provided tools to be added to\n * the default ones.\n *\n * @type {Object<string, any>}\n */\nexport const toolList = {};\n\nexport const defaultToolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\nexport const toolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    FreeHandFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  validateWindowWidth,\n  WindowLevel as WindowLevelValues\n} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {WindowLevel: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const diffY = this.#startPoint.getY() - point.getY();\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = viewController.getWindowLevel().center;\n    const width = viewController.getWindowLevel().width;\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n    // set\n    const wl = new WindowLevelValues(windowCenter, windowWidth);\n    viewController.setWindowLevel(wl);\n\n    // store position\n    this.#startPoint = point;\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    this.#start(touchPoints[0]);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(mousePoint);\n    const viewController = viewLayer.getViewController();\n    const image = this.#app.getImage(viewLayer.getDataId());\n\n    // update view controller\n    const wl = new WindowLevelValues(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      viewController.getWindowLevel().width\n    );\n    viewController.setWindowLevel(wl);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new dwv.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getImage(0).getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID;\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Current layer group div id.\n   *\n   * @type {string}\n   */\n  #currentDivId;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n\n    // start flag\n    this.#started = true;\n    this.#startPoint = point;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(point, divId);\n      }\n      return;\n    }\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    let newPosition;\n\n    // difference to last Y position\n    const diffY = point.getY() - this.#startPoint.getY();\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && layerGroup.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        newPosition = viewController.getDecrementScrollPosition();\n      } else {\n        newPosition = viewController.getIncrementScrollPosition();\n      }\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove && layerGroup.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        newPosition = viewController.getIncrementPosition(3);\n      } else {\n        newPosition = viewController.getDecrementPosition(3);\n      }\n    }\n\n    // set all layers if at least one can be set\n    if (typeof newPosition !== 'undefined' &&\n      layerGroup.isPositionInBounds(newPosition)) {\n      viewController.setCurrentPosition(newPosition);\n    }\n\n    // reset origin point\n    if (xMove || yMove) {\n      this.#startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this.#touchTimerID = setTimeout(() => {\n      this.dblclick(event);\n    }, 500);\n    // call start\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call update\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Display a tooltip at the given point.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #showTooltip(point, divId) {\n    // get layer group\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    this.#currentDivId = divId;\n    // show new tooltip\n    layerGroup.showTooltip(point);\n  }\n\n  /**\n   * Remove the last tooltip html div.\n   */\n  #removeTooltipDiv() {\n    if (typeof this.#currentDivId !== 'undefined') {\n      const layerGroup = this.#app.getLayerGroupByDivId(this.#currentDivId);\n      layerGroup.removeTooltipDiv();\n      this.#currentDivId = undefined;\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {ZoomAndPan: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Move flag: true if mouse or touch move.\n   *\n   * @type {boolean}\n   */\n  #hasMoved;\n\n  /**\n   * Line between input points.\n   *\n   * @type {Line}\n   */\n  #pointsLine;\n\n  /**\n   * PointsLine midpoint.\n   *\n   * @type {Point2D}\n   */\n  #midPoint;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n    this.#hasMoved = false;\n  }\n\n  /**\n   * Two touch start.\n   *\n   * @param {Point2D[]} points The start points.\n   */\n  #twoTouchStart = (points) => {\n    this.#started = true;\n    this.#startPoint = points[0];\n    this.#hasMoved = false;\n    // points line\n    this.#pointsLine = new Line(points[0], points[1]);\n    this.#midPoint = this.#pointsLine.getMidpoint();\n  };\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n    this.#hasMoved = true;\n\n    // calculate translation\n    const tx = point.getX() - this.#startPoint.getX();\n    const ty = point.getY() - this.#startPoint.getY();\n    // apply translation\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(\n      new Point2D(tx, ty)\n    );\n    const offset3D = viewController.getOffset3DFromPlaneOffset({\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    });\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.#startPoint = point;\n  }\n\n  /**\n   * Two touch update.\n   *\n   * @param {Point2D[]} points The update points.\n   * @param {string} divId The layer group divId.\n   */\n  #twoTouchUpdate = (points, divId) => {\n    if (!this.#started) {\n      return;\n    }\n    this.#hasMoved = true;\n\n    const newLine = new Line(points[0], points[1]);\n    const lineRatio = newLine.getLength() / this.#pointsLine.getLength();\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = points[0].getY() - this.#startPoint.getY();\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (layerGroup.canScroll()) {\n        let newPosition;\n        if (diffY > 0) {\n          newPosition = viewController.getIncrementScrollPosition();\n        } else {\n          newPosition = viewController.getDecrementScrollPosition();\n        }\n        // set all layers if at least one can be set\n        if (typeof newPosition !== 'undefined' &&\n          layerGroup.isPositionInBounds(newPosition)) {\n          viewController.setCurrentPosition(newPosition);\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05 &&\n        typeof this.#midPoint !== 'undefined') {\n        const planePos = viewLayer.displayToMainPlanePos(this.#midPoint);\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #setCurrentPosition(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // update position if no move\n    if (!this.#hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this.#setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    if (touchPoints.length === 1) {\n      this.#start(touchPoints[0]);\n    } else if (touchPoints.length === 2) {\n      this.#twoTouchStart(touchPoints);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    if (touchPoints.length === 1) {\n      this.#update(touchPoints[0], layerDetails.groupDivId);\n    } else if (touchPoints.length === 2) {\n      this.#twoTouchUpdate(touchPoints, layerDetails.groupDivId);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // update position if no move\n    if (!this.#hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this.#setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    // prevent default page scroll\n    event.preventDefault();\n\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(mousePoint);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Opacity: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerGroup = this.#app.getLayerGroupByDivId(divId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.#startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    this.#start(touchPoints[0]);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // Opacity class\n","import {DrawGroupCommand} from '../tools/drawCommands';\nimport {RoiFactory} from '../tools/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * Ref: {@link https://github.com/Tamersoul/magic-wand-js}.\n *\n * @external MagicWand\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info.\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points.\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * Threshold default tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * Threshold tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Timeout for painting on mousemove.\n   *\n   */\n  #painterTimeout;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set.\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   * @returns {Scalar2D} The coordinates as a {x,y}.\n   */\n  #getIndex = (point, divId) => {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(point);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Array} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold, false);\n    // Paint the border\n    if (this.#border) {\n      const factory = new RoiFactory();\n      this.#shapeGroup = factory.create(this.#border, this.#style);\n      this.#shapeGroup.id(guid());\n\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // get the position group\n      const posGroup = drawController.getCurrentPosGroup();\n      // add shape group to position group\n      posGroup.add(this.#shapeGroup);\n\n      // draw shape command\n      this.#command = new DrawGroupCommand(\n        this.#shapeGroup,\n        'floodfill',\n        drawLayer\n      );\n      this.#command.onExecute = this.#fireEvent;\n      this.#command.onUndo = this.#fireEvent;\n      // // draw\n      this.#command.execute();\n      // save it in undo stack\n      this.#app.addToUndoStack(this.#command);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found.\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Modify tolerance threshold and redraw ROI.\n   *\n   * @param {number} modifyThreshold The new threshold.\n   * @param {object} shape The shape to update.\n   */\n  modifyThreshold(modifyThreshold, shape) {\n\n    if (!shape && this.#shapeGroup) {\n      shape = this.#shapeGroup.getChildren(function (node) {\n        return node.name() === 'shape';\n      })[0];\n    } else {\n      throw 'No shape found';\n    }\n\n    clearTimeout(this.#painterTimeout);\n    this.#painterTimeout = setTimeout(() => {\n      this.#border = this.#calcBorder(\n        this.#initialpoint, modifyThreshold, true);\n      if (!this.#border) {\n        return false;\n      }\n      const arr = [];\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\n        arr.push(this.#border[i].x);\n        arr.push(this.#border[i].y);\n      }\n      shape.setPoints(arr);\n      const shapeLayer = shape.getLayer();\n      shapeLayer.draw();\n      this.onThresholdChange(modifyThreshold);\n    }, 100);\n  }\n\n  /**\n   * Event fired when threshold change.\n   *\n   * @param {number} _value Current threshold.\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getIndex(point, divId);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n\n    const movedpoint = this.#getIndex(point, divId);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n    this.modifyThreshold(this.#currentthreshold);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n    // TODO: re-activate\n    // if (this.#extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","import {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {RoiFactory} from '../tools/roi';\nimport {DrawGroupCommand} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Draw command.\n   *\n   * @type {object}\n   */\n  #command = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #shapeGroup = null;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.#startPoint = new Point2D(index.get(0), index.get(1));\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      this.#shapeGroup = null;\n      // update zoom scale\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      const diffX = Math.abs(index.get(0) - this.#startPoint.getX());\n      const diffY = Math.abs(index.get(1) - this.#startPoint.getY());\n      // final point: at 'tolerance' of the initial point\n      if (diffX < this.#tolerance &&\n        diffY < this.#tolerance) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    // remove previous draw\n    if (this.#shapeGroup) {\n      this.#shapeGroup.destroy();\n    }\n    // create shape\n    const factory = new RoiFactory();\n    this.#shapeGroup = factory.create(\n      this.#currentPath.pointArray, this.#style);\n    this.#shapeGroup.id(guid());\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    // get the position group\n    const posGroup = drawController.getCurrentPosGroup();\n    // add shape group to position group\n    posGroup.add(this.#shapeGroup);\n\n    // draw shape command\n    this.#command = new DrawGroupCommand(\n      this.#shapeGroup,\n      'livewire',\n      drawLayer\n    );\n    // draw\n    this.#command.execute();\n  }\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // fire creation event (was not propagated during draw)\n    this.#fireEvent({\n      type: 'drawcreate',\n      id: this.#shapeGroup.id()\n    });\n    // listen\n    this.#command.onExecute = this.#fireEvent;\n    this.#command.onUndo = this.#fireEvent;\n    // save command in undo stack\n    this.#app.addToUndoStack(this.#command);\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {Point2D} from '../math/point';\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'line-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an arrow shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // larger hitfunc\n    const tickLen = style.applyZoomScale(10).x;\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n    // triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    const radius = Math.abs(style.applyZoomScale(8).x);\n    const kpoly = new Konva.RegularPolygon({\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\n      sides: 3,\n      radius: radius,\n      rotation: -angle,\n      fill: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-triangle'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.arrow[modality] !== 'undefined') {\n      textExpr = defaults.labelText.arrow[modality];\n    } else {\n      textExpr = defaults.labelText.arrow['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta data\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kpoly);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an arrow shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an arrow shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n    if (!(ktriangle instanceof Konva.RegularPolygon)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // larger hitfunc\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const tickLen = style.applyZoomScale(10).x;\n    const linePerp0 = getPerpendicularLine(line, p2b, tickLen);\n    const linePerp1 = getPerpendicularLine(line, p2e, tickLen);\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // udate triangle\n    const beginTy = new Point2D(\n      line.getBegin().getX(),\n      line.getBegin().getY() - 10);\n    const verticalLine = new Line(line.getBegin(), beginTy);\n    const angle = getAngle(line, verticalLine);\n    const angleRad = angle * Math.PI / 180;\n    ktriangle.x(\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\n    ktriangle.y(\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\n    ktriangle.rotation(-angle);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    ktext.setText(ktext.meta.textExpr);\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * ktext.width(),\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class ArrowFactory\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'circle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Calculates the mathematical circle.\n   *\n   * @param {Point2D[]} points The points that define the circle.\n   * @returns {Circle} The mathematical circle.\n   */\n  #calculateMathShape(points) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    return new Circle(points[0], radius);\n  }\n\n  /**\n   * Creates the konva circle shape.\n   *\n   * @param {Circle} circle The mathematical circle.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Circle} The konva circle shape.\n   */\n  #createShape(circle, style) {\n    return new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Creates the konva label.\n   *\n   * @param {Circle} circle The mathematical circle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Label} The Konva label.\n   */\n  #createLabel(circle, style, viewController) {\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.circle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.circle[modality];\n    } else {\n      textExpr = defaults.labelText.circle['*'];\n    }\n    const quant = circle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta data\n    // @ts-expect-error\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: circle.getCenter().getX() - circle.getRadius(),\n      y: circle.getCenter().getY() + circle.getRadius(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    return klabel;\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the circle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // Create group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n\n    // Create and add shape\n    const mathShape = this.#calculateMathShape(points);\n    const kShape = this.#createShape(mathShape, style);\n    group.add(kShape);\n    // Create and add label\n    const kLabel = this.#createLabel(mathShape, style, viewController);\n    group.add(kLabel);\n    // Add shadow (if debug)\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowCircle(mathShape);\n      group.add(kshadow);\n    }\n\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a circle shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // circle center\n    const center = {\n      x: kcircle.x(),\n      y: kcircle.y()\n    };\n\n    let radius;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radius = center.x - anchor.x();\n      // update self (while blocking y)\n      left.x(anchor.x());\n      left.y(right.y());\n      // update others\n      right.x(center.x + radius);\n      bottom.y(center.y + radius);\n      top.y(center.y - radius);\n      break;\n    case 'right':\n      radius = anchor.x() - center.x;\n      // update self (while blocking y)\n      right.x(anchor.x());\n      right.y(left.y());\n      // update others\n      left.x(center.x - radius);\n      bottom.y(center.y + radius);\n      top.y(center.y - radius);\n      break;\n    case 'bottom':\n      radius = anchor.y() - center.y;\n      // update self (while blocking x)\n      bottom.x(top.x());\n      bottom.y(anchor.y());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      top.y(center.y - radius);\n      break;\n    case 'top':\n      radius = center.y - anchor.y();\n      // update self (while blocking x)\n      top.x(bottom.x());\n      top.y(anchor.y());\n      // update others\n      left.x(center.x - radius);\n      right.x(center.x + radius);\n      bottom.y(center.y + radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // update shape: just update the radius\n    kcircle.radius(Math.abs(radius));\n    // new circle\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const circle = new Circle(centerPoint, radius);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowCircle(circle, group));\n    }\n\n    // update label position\n    const textPos = {\n      x: center.x - Math.abs(radius),\n      y: center.y + Math.abs(radius)\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateCircleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Circle (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  #updateCircleQuantification(\n    group, viewController) {\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kcircle.x(),\n      group.y() + kcircle.y()\n    );\n    // circle\n    const circle = new Circle(centerPoint, kcircle.radius());\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = circle.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Circle} circle The circle to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group} The shadow konva group.\n   */\n  #getShadowCircle(circle, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class CircleFactory\n","import {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ellipse-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the ellipse.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(\n    points, style, viewController) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    const ellipse = new Ellipse(points[0], a, b);\n    // draw shape\n    const radius = {x: ellipse.getA(), y: ellipse.getB()};\n    const kshape = new Konva.Ellipse({\n      x: ellipse.getCenter().getX(),\n      y: ellipse.getCenter().getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ellipse[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ellipse[modality];\n    } else {\n      textExpr = defaults.labelText.ellipse['*'];\n    }\n    const quant = ellipse.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: ellipse.getCenter().getX() - ellipse.getA(),\n      y: ellipse.getCenter().getY() + ellipse.getB(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowEllipse(ellipse);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update an ellipse shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const ellipseX = shape.x();\n    const ellipseY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      ellipseX - radius.x, ellipseY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX + radius.x, ellipseY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX, ellipseY + radius.y, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      ellipseX, ellipseY - radius.y, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update an ellipse shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, _style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // ellipse center\n    const center = {\n      x: kellipse.x(),\n      y: kellipse.y()\n    };\n\n    let radiusX;\n    let radiusY;\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radiusX = center.x - anchor.x();\n      radiusY = top.y() - center.y;\n      // update self (while blocking y)\n      left.x(anchor.x());\n      left.y(right.y());\n      // update others\n      right.x(center.x + radiusX);\n      break;\n    case 'right':\n      radiusX = anchor.x() - center.x;\n      radiusY = top.y() - center.y;\n      // update self (while blocking y)\n      right.x(anchor.x());\n      right.y(left.y());\n      // update others\n      left.x(center.x - radiusX);\n      break;\n    case 'bottom':\n      radiusX = center.x - left.x();\n      radiusY = anchor.y() - center.y;\n      // update self (while blocking x)\n      bottom.x(top.x());\n      bottom.y(anchor.y());\n      // update others\n      top.y(center.y - radiusY);\n      break;\n    case 'top':\n      radiusX = center.x - left.x();\n      radiusY = center.y - anchor.y();\n      // update self (while blocking x)\n      top.x(bottom.x());\n      top.y(anchor.y());\n      // update others\n      bottom.y(center.y + radiusY);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    kellipse.position(center);\n    const radiusAbs = {\n      x: Math.abs(radiusX),\n      y: Math.abs(radiusY)\n    };\n    if (radiusAbs) {\n      kellipse.radius(radiusAbs);\n    }\n    // new ellipse\n    const centerPoint = new Point2D(\n      group.x() + center.x,\n      group.y() + center.y\n    );\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\n\n    // debug shadow\n    if (kshadow) {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getShadowEllipse(ellipse, group));\n    }\n\n    // update label position\n    const textPos = {\n      x: center.x - radiusAbs.x,\n      y: center.y + radiusAbs.y\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateEllipseQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of an Ellipse (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  #updateEllipseQuantification(group, viewController) {\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const centerPoint = new Point2D(\n      group.x() + kellipse.x(),\n      group.y() + kellipse.y()\n    );\n    // circle\n    const ellipse = new Ellipse(\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = ellipse.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Ellipse} ellipse The ellipse to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group} The shadow konva group.\n   */\n  #getShadowEllipse(ellipse, group) {\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n} // class EllipseFactory\n","import {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * FreeHand factory.\n */\nexport class FreeHandFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'freeHand-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 25;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // points stored the Konvajs way\n    const arr = [];\n    for (let i = 0; i < points.length; ++i) {\n      arr.push(points[i].getX());\n      arr.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: arr,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      tension: 0.5\n    });\n\n    // text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.freeHand[modality] !== 'undefined') {\n      textExpr = defaults.labelText.freeHand[modality];\n    } else {\n      textExpr = defaults.labelText.freeHand['*'];\n    }\n    ktext.setText(textExpr);\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: {}\n    };\n\n    // label\n    const klabel = new Konva.Label({\n      x: points[0].getX(),\n      y: points[0].getY() + style.scale(10),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a free hand shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      const name = i.toString();\n      anchors.push(getDefaultAnchor(\n        px, py, name, style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Update a FreeHand shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n    point.x(anchor.x());\n    point.y(anchor.y());\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the list)\n    const points = kline.points();\n    const index = parseInt(anchor.id(), 10);\n    points[index] = anchor.x() - kline.x();\n    points[index + 1] = anchor.y() - kline.y();\n    // concat to make Konva think it is a new array\n    kline.points(points.concat());\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    ktext.setText(meta.textExpr);\n    // update position\n    const textPos = {\n      x: points[0] + kline.x(),\n      y: points[1] + kline.y() + style.scale(10)\n    };\n    klabel.position(textPos);\n  }\n\n} // class FreeHandFactory\n","import {Line, getAngle} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {i18n} from '../utils/i18n';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'protractor-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a protractor shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the protractor.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line0 = new Line(points[0], points[1]);\n    // points stored the Konvajs way\n    const pointsArray = [];\n    for (let i = 0; i < points.length; ++i) {\n      pointsArray.push(points[i].getX());\n      pointsArray.push(points[i].getY());\n    }\n    // draw shape\n    const kshape = new Konva.Line({\n      points: pointsArray,\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    // text and decoration\n    if (points.length === 3) {\n      const line1 = new Line(points[1], points[2]);\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(points[0].getX(), points[0].getY());\n        context.lineTo(points[1].getX(), points[1].getY());\n        context.lineTo(points[2].getX(), points[2].getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n      // quantification\n      let angle = getAngle(line0, line1);\n      let inclination = line0.getInclination();\n      if (angle > 180) {\n        angle = 360 - angle;\n        inclination += angle;\n      }\n\n      // quantification\n      const ktext = new Konva.Text({\n        fontSize: style.getFontSize(),\n        fontFamily: style.getFontFamily(),\n        fill: style.getLineColour(),\n        padding: style.getTextPadding(),\n        shadowColor: style.getShadowLineColour(),\n        shadowOffset: style.getShadowOffset(),\n        name: 'text'\n      });\n      let textExpr = '';\n      const modality = viewController.getModality();\n      if (typeof defaults.labelText.protractor[modality] !== 'undefined') {\n        textExpr = defaults.labelText.protractor[modality];\n      } else {\n        textExpr = defaults.labelText.protractor['*'];\n      }\n      const quant = {\n        angle: {\n          value: angle,\n          unit: i18n.t('unit.degree')\n        }\n      };\n      ktext.setText(replaceFlags(textExpr, quant));\n      // augment text with meta\n      // @ts-ignore\n      ktext.meta = {\n        textExpr: textExpr,\n        quantification: quant\n      };\n\n      // label\n      const midX =\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n      const midY =\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n      const klabel = new Konva.Label({\n        x: midX,\n        y: midY - style.applyZoomScale(15).y,\n        scale: style.applyZoomScale(1),\n        visible: textExpr.length !== 0,\n        name: 'label'\n      });\n      klabel.add(ktext);\n      klabel.add(new Konva.Tag({\n        fill: style.getLineColour(),\n        opacity: style.getTagOpacity()\n      }));\n\n      // arc\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n      const karc = new Konva.Arc({\n        innerRadius: radius,\n        outerRadius: radius,\n        stroke: style.getLineColour(),\n        strokeWidth: style.getStrokeWidth(),\n        strokeScaleEnabled: false,\n        angle: angle,\n        rotation: -inclination,\n        x: points[1].getX(),\n        y: points[1].getY(),\n        name: 'shape-arc'\n      });\n      // add to group\n      group.add(klabel);\n      group.add(karc);\n    }\n    // add shape to group\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    // return group\n    return group;\n  }\n\n  /**\n   * Get anchors to update a protractor shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Array} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a protractor shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} _viewController The associated view controller.\n   */\n  update(anchor, style, _viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n    if (!(karc instanceof Konva.Arc)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const mx = mid.x() - kline.x();\n    const my = mid.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, mx, my, ex, ey]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(bx, by);\n      context.lineTo(mx, my);\n      context.lineTo(ex, ey);\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n    // update text\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(mid.x(), mid.y());\n    const p2d2 = new Point2D(end.x(), end.y());\n    const line0 = new Line(p2d0, p2d1);\n    const line1 = new Line(p2d1, p2d2);\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = {\n      angle: {value: angle, unit: i18n.t('unit.degree')}\n    };\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n    // update position\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n    const textPos = {\n      x: midX,\n      y: midY - style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n  }\n\n} // class ProtractorFactory\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\nimport {DRAW_DEBUG} from './draw';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'rectangle-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the rectangle.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const rectangle = new Rectangle(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n    // label text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.rectangle[modality] !== 'undefined') {\n      textExpr = defaults.labelText.rectangle[modality];\n    } else {\n      textExpr = defaults.labelText.rectangle['*'];\n    }\n    const quant = rectangle.quantify(\n      viewController,\n      getFlags(textExpr));\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n    // label\n    const klabel = new Konva.Label({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getEnd().getY(),\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = this.#getShadowRectangle(rectangle);\n    }\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    if (kshadow) {\n      group.add(kshadow);\n    }\n    group.add(klabel);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {Konva.Shape} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a rectangle shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n      // find special points\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n    // debug shadow\n    let kshadow;\n    if (DRAW_DEBUG) {\n      kshadow = group.getChildren(function (node) {\n        return node.name() === 'shadow';\n      })[0];\n    }\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'topLeft':\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n    // update shape\n    krect.position(topLeft.position());\n    const width = topRight.x() - topLeft.x();\n    const height = bottomLeft.y() - topLeft.y();\n    if (width && height) {\n      krect.size({width: width, height: height});\n    }\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + topLeft.x(),\n      group.y() + topLeft.y()\n    );\n    const p2d1 = new Point2D(\n      group.x() + bottomRight.x(),\n      group.y() + bottomRight.y()\n    );\n    // new rect\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // debug shadow based on round (used in quantification)\n    if (kshadow) {\n      const round = rect.getRound();\n      const rWidth = round.max.getX() - round.min.getX();\n      const rHeight = round.max.getY() - round.min.getY();\n      kshadow.position({\n        x: round.min.getX() - group.x(),\n        y: round.min.getY() - group.y()\n      });\n      kshadow.size({width: rWidth, height: rHeight});\n    }\n\n    // update label position\n    const textPos = {\n      x: rect.getBegin().getX() - group.x(),\n      y: rect.getEnd().getY() - group.y()\n    };\n    klabel.position(textPos);\n\n    // update quantification\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle.\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  updateQuantification(group, viewController) {\n    this.#updateRectangleQuantification(group, viewController);\n  }\n\n  /**\n   * Update the quantification of a Rectangle (as a static\n   *   function to be used in update).\n   *\n   * @param {Konva.Group} group The group with the shape.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  #updateRectangleQuantification(group, viewController) {\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    // positions: add possible group offset\n    const p2d0 = new Point2D(\n      group.x() + krect.x(),\n      group.y() + krect.y()\n    );\n    const p2d1 = new Point2D(\n      p2d0.getX() + krect.width(),\n      p2d0.getY() + krect.height()\n    );\n    // rectangle\n    const rect = new Rectangle(p2d0, p2d1);\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = rect.quantify(\n      viewController,\n      getFlags(meta.textExpr));\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Rectangle} rectangle The rectangle to shadow.\n   * @returns {Konva.Rect} The shadow konva shape.\n   */\n  #getShadowRectangle(rectangle) {\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n} // class RectangleFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {replaceFlags} from '../utils/string';\nimport {defaults} from '../app/defaults';\nimport {getDefaultAnchor} from './editor';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Style} from '../gui/style';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return 'ruler-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Is the input group a group of this factory?\n   *\n   * @param {Konva.Group} group The group to test.\n   * @returns {boolean} True if the group is from this fcatory.\n   */\n  isFactoryGroup(group) {\n    return this.getGroupName() === group.name();\n  }\n\n  /**\n   * Create a ruler shape to be displayed.\n   *\n   * @param {Point2D[]} points The points from which to extract the line.\n   * @param {Style} style The drawing style.\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {Konva.Group} The Konva group.\n   */\n  create(points, style, viewController) {\n    // physical shape\n    const line = new Line(points[0], points[1]);\n    // draw shape\n    const kshape = new Konva.Line({\n      points: [line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    const tickLen = style.applyZoomScale(10).x;\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\n    const ktick0 = new Konva.Line({\n      points: [linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\n    const ktick1 = new Konva.Line({\n      points: [linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()],\n      stroke: style.getLineColour(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    // larger hitfunc\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    // quantification\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: style.getLineColour(),\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    let textExpr = '';\n    const modality = viewController.getModality();\n    if (typeof defaults.labelText.ruler[modality] !== 'undefined') {\n      textExpr = defaults.labelText.ruler[modality];\n    } else {\n      textExpr = defaults.labelText.ruler['*'];\n    }\n    const quant = line.quantify(viewController);\n    ktext.setText(replaceFlags(textExpr, quant));\n    // augment text with meta\n    // @ts-ignore\n    ktext.meta = {\n      textExpr: textExpr,\n      quantification: quant\n    };\n\n    // label\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const klabel = new Konva.Label({\n      x: line.getEnd().getX() + dX * style.applyZoomScale(ktext.width()).x,\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\n      scale: style.applyZoomScale(1),\n      visible: textExpr.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: style.getLineColour(),\n      opacity: style.getTagOpacity()\n    }));\n\n    // return group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.add(klabel);\n    group.add(ktick0);\n    group.add(ktick1);\n    group.add(kshape);\n    group.visible(true); // dont inherit\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ruler shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Update a ruler shape.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The app style.\n   * @param {ViewController} viewController The associated view controller.\n   */\n  update(anchor, style, viewController) {\n    // parent group\n    const group = anchor.getParent();\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n    if (!(ktick0 instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n    if (!(ktick1 instanceof Konva.Line)) {\n      return;\n    }\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n    // update shape and compensate for possible drag\n    // note: shape.position() and shape.size() won't work...\n    const bx = begin.x() - kline.x();\n    const by = begin.y() - kline.y();\n    const ex = end.x() - kline.x();\n    const ey = end.y() - kline.y();\n    kline.points([bx, by, ex, ey]);\n    // new line\n    const p2d0 = new Point2D(begin.x(), begin.y());\n    const p2d1 = new Point2D(end.x(), end.y());\n    const line = new Line(p2d0, p2d1);\n    // tick\n    const tickLen = style.applyZoomScale(10).x;\n    const p2b = new Point2D(bx, by);\n    const p2e = new Point2D(ex, ey);\n    const linePerp0 = getPerpendicularLine(line, p2b, tickLen);\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(line, p2e, tickLen);\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n\n    // update text\n    const ktext = klabel.getText();\n    // @ts-expect-error\n    const meta = ktext.meta;\n    const quantification = line.quantify(viewController);\n    ktext.setText(replaceFlags(meta.textExpr, quantification));\n    // update meta\n    meta.quantification = quantification;\n    // update position\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\n    const textPos = {\n      x: line.getEnd().getX() + dX * style.applyZoomScale(ktext.width()).x,\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\n    };\n    klabel.position(textPos);\n  }\n\n} // class RulerFactory\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {\n  getMatrixFromName,\n  getOrientationStringLPS,\n  Orientation\n} from '../math/orientation';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {\n  getViewOrientation,\n  getLayerDetailsFromLayerDivId\n} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../tools/undo';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {OverlayData} from '../gui/overlayData';\nimport {toolList, defaultToolList, toolOptions} from '../tools';\nimport {binderList} from '../gui/stage';\nimport {WindowLevel} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Image} from '../image/image';\nimport {Matrix33} from '../math/matrix';\nimport {DataElement} from '../dicom/dataElement';\nimport {Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * View configuration: mainly defines the ´divId´\n * of the associated HTML div.\n */\nexport class ViewConfig {\n  /**\n   * Associated HTML div id.\n   *\n   * @type {string}\n   */\n  divId;\n  /**\n   * Optional orientation of the data; 'axial', 'coronal' or 'sagittal'.\n   * If undefined, will use the data aquisition plane.\n   *\n   * @type {string|undefined}\n   */\n  orientation;\n  /**\n   * Optional view colour map name.\n   *\n   * @type {string|undefined}\n   */\n  colourMap;\n  /**\n   * Optional layer opacity; in [0, 1] range.\n   *\n   * @type {number|undefined}\n   */\n  opacity;\n  /**\n   * Optional layer window level preset name.\n   * If present, the preset name will be used and\n   * the window centre and width ignored.\n   *\n   * @type {string|undefined}\n   */\n  wlPresetName;\n  /**\n   * Optional layer window center.\n   *\n   * @type {number|undefined}\n   */\n  windowCenter;\n  /**\n   * Optional layer window width.\n   *\n   * @type {number|undefined}\n   */\n  windowWidth;\n\n  /**\n   * @param {string} divId The associated HTML div id.\n   */\n  constructor(divId) {\n    this.divId = divId;\n  }\n}\n\n/**\n * Tool configuration.\n */\nexport class ToolConfig {\n  /**\n   * Optional tool options.\n   * For Draw: list of shape names.\n   * For Filter: list of filter names.\n   *\n   * @type {string[]|undefined}\n   */\n  options;\n\n  /**\n   * @param {string[]} [options] Optional tool options.\n   */\n  constructor(options) {\n    this.options = options;\n  }\n}\n\n/**\n * Application options.\n */\nexport class AppOptions {\n  /**\n   * DataId indexed object containing the data view configurations.\n   *\n   * @type {Object<string, ViewConfig[]>|undefined}\n   */\n  dataViewConfigs;\n  /**\n   * Tool name indexed object containing individual tool configurations.\n   *\n   * @type {Object<string, ToolConfig>|undefined}\n   */\n  tools;\n  /**\n   * Optional array of layerGroup binder names.\n   *\n   * @type {string[]|undefined}\n   */\n  binders;\n  /**\n   * Optional boolean flag to trigger the first data render\n   *   after the first loaded data or not. Defaults to true.\n   *\n   * @type {boolean|undefined}\n   */\n  viewOnFirstLoadItem;\n  /**\n   * Optional default chraracterset string used for DICOM parsing if\n   *   not passed in DICOM file.\n   *\n   * Valid values: {@link https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings}.\n   *\n   * @type {string|undefined}\n   */\n  defaultCharacterSet;\n  /**\n   * Optional overlay config.\n   *\n   * @type {object|undefined}\n   */\n  overlayConfig;\n  /**\n   * DOM root document.\n   *\n   * @type {DocumentFragment}\n   */\n  rootDocument;\n\n  /**\n   * @param {Object<string, ViewConfig[]>} [dataViewConfigs] Optional dataId\n   *   indexed object containing the data view configurations.\n   */\n  constructor(dataViewConfigs) {\n    this.dataViewConfigs = dataViewConfigs;\n  }\n}\n\n/**\n * List of ViewConfigs indexed by dataIds.\n *\n * @typedef {Object<string, ViewConfig[]>} DataViewConfigs\n */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * app.init(options);\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  /**\n   * App options.\n   *\n   * @type {AppOptions}\n   */\n  #options = null;\n\n  /**\n   * Data controller.\n   *\n   * @type {DataController}\n   */\n  #dataController = null;\n\n  /**\n   * Toolbox controller.\n   *\n   * @type {ToolboxController}\n   */\n  #toolboxController = null;\n\n  /**\n   * Load controller.\n   *\n   * @type {LoadController}\n   */\n  #loadController = null;\n\n  /**\n   * Stage.\n   *\n   * @type {Stage}\n   */\n  #stage = null;\n\n  /**\n   * Undo stack.\n   *\n   * @type {UndoStack}\n   */\n  #undoStack = null;\n\n  /**\n   * Style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  // overlay datas\n  #overlayDatas = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the image.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Image|undefined} The associated image.\n   */\n  getImage(dataId) {\n    let res;\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      res = this.#dataController.get(dataId).image;\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at the given id.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} img The associated image.\n   */\n  setImage(dataId, img) {\n    this.#dataController.setImage(dataId, img);\n  }\n\n  /**\n   * Add a new image.\n   *\n   * @param {Image} image The new image.\n   * @param {object} meta The image meta.\n   * @param {string} source The source of the new image,\n   *   will be passed with load events.\n   * @returns {string} The new image data id.\n   */\n  addNewImage(image, meta, source) {\n    const dataId = this.#dataController.getNextDataId();\n\n    // load start event\n    this.#fireEvent({\n      type: 'loadstart',\n      loadtype: 'image',\n      source: source,\n      dataid: dataId\n    });\n\n    // add image to data controller\n    this.#dataController.addNew(dataId, image, meta);\n\n    // load item event\n    this.#fireEvent({\n      type: 'loaditem',\n      loadtype: 'image',\n      data: meta,\n      source: source,\n      dataid: dataId,\n      isfirstitem: true\n    });\n\n    // optional render\n    if (this.#options.viewOnFirstLoadItem) {\n      this.render(dataId);\n    }\n\n    // load events\n    this.#fireEvent({\n      type: 'load',\n      loadtype: 'image',\n      source: source,\n      dataid: dataId\n    });\n    this.#fireEvent({\n      type: 'loadend',\n      loadtype: 'image',\n      source: source,\n      dataid: dataId\n    });\n\n    return dataId;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Object<string, DataElement>|undefined} The list of meta data.\n   */\n  getMetaData(dataId) {\n    let res;\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      res = this.#dataController.get(dataId).meta;\n    }\n    return res;\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return this.#dataController.getDataIds();\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    return this.#dataController.getDataIdsFromSopUids(uids);\n  }\n\n  /**\n   * Can the data (of the active view of the active layer) be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data\n   * (of the active view of the active layer)?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the active layer group scale on top of the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale of the active layer group.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset of the active layer group.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {ToolboxController} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    this.#stage.setActiveLayerGroup(index);\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    return this.#stage.getViewLayersByDataId(dataId);\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    return this.#stage.getDrawLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   * @function\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {AppOptions} opt The application options.\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n   * const viewConfigs = {'*': [viewConfig0]};\n   * const options = new dwv.AppOptions(viewConfigs);\n   * options.viewOnFirstLoadItem = false;\n   * app.init(options);\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n    if (typeof this.#options.dataViewConfigs === 'undefined') {\n      this.#options.dataViewConfigs = {};\n    }\n    if (typeof this.#options.rootDocument === 'undefined') {\n      this.#options.rootDocument = document;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (typeof this.#options.tools !== 'undefined') {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the default tool list\n        let toolConstructor = defaultToolList[toolName];\n        // or use external one\n        if (typeof toolConstructor === 'undefined') {\n          toolConstructor = toolList[toolName];\n        }\n        if (typeof toolConstructor !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolConstructor(this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined' &&\n            toolParams.options.length !== 0) {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\n                  'undefined') {\n                  appToolOptions[optionName] =\n                    toolOptions[toolNamespace][optionClassName];\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            } else {\n              appToolOptions = toolParams.options;\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#dataController.reset();\n    this.#stage.empty();\n    this.#overlayDatas = {};\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadFiles = (files) => {\n    // Get new data id\n    const dataId = this.#dataController.getNextDataId();\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files, dataId);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass to the request,\n   * - batchSize: the size of the request url batch.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadURLs = (urls, options) => {\n    // Get new data id\n    const dataId = this.#dataController.getNextDataId();\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, dataId, options);\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   * @function\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadImageObject = (data) => {\n    // Get new data id\n    const dataId = this.#dataController.getNextDataId();\n    this.#loadController.loadImageObject(data, dataId);\n  };\n\n  /**\n   * Abort all the current loads.\n   */\n  abortAllLoads() {\n    const ids = this.#loadController.getLoadingDataIds();\n    for (const id of ids) {\n      this.abortLoad(id);\n    }\n  }\n\n  /**\n   * Abort an individual data load.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abortLoad(dataId) {\n    // abort load\n    this.#loadController.abort(dataId);\n    // remove data\n    this.#dataController.remove(dataId);\n    // clean up stage\n    this.#stage.removeLayersByDataId(dataId);\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.fitToContainer();\n  }\n\n  /**\n   * Init the Window/Level display\n   * (of the active layer of the active layer group).\n   *\n   * @deprecated Please set the opacity of the desired view layer directly.\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Set the imageSmoothing flag value. Default is false.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#stage.setImageSmoothing(flag);\n    this.#stage.draw();\n  }\n\n  /**\n   * Get the layer group configuration from a data id.\n   *\n   * @param {string} dataId The data id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig[]} The list of associated configs.\n   */\n  getViewConfigs(dataId, excludeStarConfig) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs[dataId] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataId];\n    } else if (!excludeStarConfig &&\n      typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the layer group configuration for a data id and group\n   * div id.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} groupDivId The layer group div id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig|undefined} The associated config.\n   */\n  getViewConfig(dataId, groupDivId, excludeStarConfig) {\n    const configs = this.getViewConfigs(dataId, excludeStarConfig);\n    return configs.find(function (item) {\n      return item.divId === groupDivId;\n    });\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {Object<string, ViewConfig[]>} The configuration list.\n   */\n  getDataViewConfigs() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration.\n   * Resets the stage and recreates all the views.\n   *\n   * @param {Object<string, ViewConfig[]>} configs The configuration list.\n   */\n  setDataViewConfigs(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Add a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  addDataViewConfig(dataId, config) {\n    // add to list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      configs[dataId] = [];\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      this.#options.dataViewConfigs[dataId].push(config);\n    } else {\n      throw new Error('Duplicate view config for data ' + dataId +\n        ' and div ' + config.divId);\n    }\n\n    // add layer group if not done\n    if (typeof this.#stage.getLayerGroupByDivId(config.divId) === 'undefined') {\n      this.#createLayerGroup(config);\n    }\n\n    // render (will create layers)\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [config]);\n    }\n  }\n\n  /**\n   * Remove a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   */\n  removeDataViewConfig(dataId, divId) {\n    // remove from list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      // no config for dataId\n      return;\n    }\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      // no config for divId\n      return;\n    }\n    configs[dataId].splice(itemIndex, 1);\n    if (configs[dataId].length === 0) {\n      delete configs[dataId];\n    }\n\n    // data is loaded, remove view\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      const lg = this.#stage.getLayerGroupByDivId(divId);\n      if (typeof lg !== 'undefined') {\n        const vls = lg.getViewLayersByDataId(dataId);\n        if (vls.length === 1) {\n          lg.removeLayer(vls[0]);\n        } else {\n          throw new Error('Expected one view layer, got ' + vls.length);\n        }\n        const dls = lg.getDrawLayersByDataId(dataId);\n        if (dls.length === 1) {\n          lg.removeLayer(dls[0]);\n        } else {\n          throw new Error('Expected one draw layer, got ' + dls.length);\n        }\n        if (lg.getNumberOfLayers() === 0) {\n          this.#stage.removeLayerGroup(lg);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update an existing data view config.\n   * Removes and re-creates the layer if found.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  updateDataViewConfig(dataId, divId, config) {\n    const configs = this.#options.dataViewConfigs;\n    // check data id\n    if (typeof configs[dataId] === 'undefined') {\n      throw new Error('No config for dataId: ' + dataId);\n    }\n    // check div id\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      throw new Error('No config for dataId: ' +\n        dataId + ' and divId: ' + divId);\n    }\n    // update config\n    const configToUpdate = configs[dataId][itemIndex];\n    for (const prop in config) {\n      configToUpdate[prop] = config[prop];\n    }\n\n    // remove previous layers\n    const lg = this.#stage.getLayerGroupByDivId(configToUpdate.divId);\n    if (typeof lg !== 'undefined') {\n      const vls = lg.getViewLayersByDataId(dataId);\n      if (vls.length === 1) {\n        lg.removeLayer(vls[0]);\n      } else {\n        throw new Error('Expected one view layer, got ' + vls.length);\n      }\n      const dls = lg.getDrawLayersByDataId(dataId);\n      if (dls.length === 1) {\n        lg.removeLayer(dls[0]);\n      } else {\n        throw new Error('Expected one draw layer, got ' + dls.length);\n      }\n    }\n\n    // render (will create layer)\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [configToUpdate]);\n    }\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and binds them.\n   *\n   * @param {DataViewConfigs} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const viewConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < viewConfigs.length; ++j) {\n        const viewConfig = viewConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          this.#createLayerGroup(viewConfig);\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a layer group according to a view config:\n   * adds it to stage and binds it.\n   *\n   * @param {ViewConfig} viewConfig The view config.\n   */\n  #createLayerGroup(viewConfig) {\n    // create new layer group\n    const element = this.#options.rootDocument.getElementById(viewConfig.divId);\n    const layerGroup = this.#stage.addLayerGroup(element);\n    // bind events\n    this.#bindLayerGroupToApp(layerGroup);\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {string[]} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {string} dataId The data id to render.\n   * @param {ViewConfig[]} [viewConfigs] The list of configs to render.\n   */\n  render(dataId, viewConfigs) {\n    if (typeof dataId === 'undefined' || dataId === null) {\n      throw new Error('Cannot render without data id');\n    }\n    if (typeof this.getImage(dataId) === 'undefined') {\n      logger.warn('Not rendering non image data, id: ' + dataId);\n      return;\n    }\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // use options list if non provided\n    if (typeof viewConfigs === 'undefined') {\n      viewConfigs = this.getViewConfigs(dataId);\n    }\n\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataId +\n        ' (no data view config)');\n      return;\n    }\n\n    // loop on configs\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n        this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // add view\n      // warn: needs a loaded DOM\n      if (typeof this.#dataController.get(dataId) !== 'undefined' &&\n        layerGroup.getViewLayersByDataId(dataId).length === 0) {\n        this.#addViewLayer(dataId, config);\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom the layers of the active layer group.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers of the active layer group.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty, z: 0});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the active view layer (of the active layer group) opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   * @deprecated Please set the opacity of the desired view layer directly.\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings of the active layer group.\n   *\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   */\n  setDrawings(drawings, drawingsDetails) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    const drawController =\n      layerGroup.getActiveDrawLayer().getDrawController();\n\n    drawController.setDrawings(\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\n\n    drawController.activateDrawLayer(\n      viewController.getCurrentOrientedIndex(),\n      viewController.getScrollIndex());\n  }\n\n  /**\n   * Get the JSON state of the app.\n   *\n   * @returns {string} The state of the app as a JSON string.\n   */\n  getJsonState() {\n    const state = new State();\n    return state.toJSON(this);\n  }\n\n  /**\n   * Apply a JSON state to this app.\n   *\n   * @param {string} jsonState The state of the app as a JSON string.\n   */\n  applyJsonState(jsonState) {\n    const state = new State();\n    state.apply(this, state.fromJSON(jsonState));\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @function\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App#keydown\n   * @function\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo,\n   * - CRTL-Y: redo,\n   * - CRTL-ARROW_LEFT: next element on fourth dim,\n   * - CRTL-ARROW_UP: next element on third dim,\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim,\n   * - CRTL-ARROW_DOWN: previous element on third dim.\n   *\n   * Applies to the active view of the active layer group.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   * @function\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const layerGroup = this.#stage.getActiveLayerGroup();\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (viewController.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (layerGroup.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (layerGroup.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (layerGroup.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display.\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map of the active view of the active layer group.\n   *\n   * @param {string} name The colour map name.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  setColourMap(name) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMap(name);\n  }\n\n  /**\n   * Set the window/level preset of the active view of the active layer group.\n   *\n   * @param {string} preset The window/level preset.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool.\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      let layer = null;\n      if (tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (layer) {\n        this.#toolboxController.bindLayerGroup(layerGroup, layer);\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  /**\n   * Get the overlay data for a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {OverlayData|undefined} The overlay data.\n   */\n  getOverlayData(dataId) {\n    let data;\n    if (typeof this.#overlayDatas !== 'undefined') {\n      data = this.#overlayDatas[dataId];\n    }\n    return data;\n  }\n\n  /**\n   * Toggle overlay listeners.\n   *\n   * @param {string} dataId The data id.\n   */\n  toggleOverlayListeners(dataId) {\n    const data = this.getOverlayData(dataId);\n    if (typeof data !== 'undefined') {\n      if (data.isListening()) {\n        data.removeAppListeners();\n      } else {\n        data.addAppListeners();\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    // create overlay data\n    if (typeof this.#options.overlayConfig !== 'undefined') {\n      this.#overlayDatas[event.dataid] = new OverlayData(\n        this, event.dataid, this.#options.overlayConfig);\n    }\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.addNew(\n          event.dataid, event.data.image, event.data.info);\n      } else {\n        this.#dataController.update(\n          event.dataid, event.data.image, event.data.info);\n      }\n      eventMetaData = event.data.info;\n    } else if (event.loadtype === 'state') {\n      this.applyJsonState(event.data);\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      dataid: event.dataid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    // update overlay data if present\n    if (typeof this.#overlayDatas !== 'undefined' &&\n      typeof this.#overlayDatas[event.dataid] !== 'undefined') {\n      this.#overlayDatas[event.dataid].addItemMeta(eventMetaData);\n    }\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n      this.getViewConfigs(event.dataid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.dataid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#error\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'error';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#abort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'abort';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {object} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n    // updata data view config\n    group.addEventListener('wlchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        // reset previous values\n        config.windowCenter = undefined;\n        config.windowWidth = undefined;\n        config.wlPresetName = undefined;\n        // window width and center\n        if (event.value.length === 2) {\n          config.windowCenter = event.value[0];\n          config.windowWidth = event.value[1];\n        }\n        // window level preset name\n        if (event.value.length === 3) {\n          config.wlPresetName = event.value[2];\n        }\n      }\n    });\n    group.addEventListener('opacitychange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.opacity = event.value[0];\n      }\n    });\n    group.addEventListener('colourmapchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.colourMap = event.value[0];\n      }\n    });\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  #addViewLayer(dataId, viewConfig) {\n    const data = this.#dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataId);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    if (typeof viewConfig.opacity !== 'undefined') {\n      opacity = viewConfig.opacity;\n    } else {\n      if (!isBaseLayer) {\n        opacity = 0.5;\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataId);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n\n    // view controller\n    const viewController = viewLayer.getViewController();\n    // window/level\n    if (typeof viewConfig.wlPresetName !== 'undefined') {\n      viewController.setWindowLevelPreset(viewConfig.wlPresetName);\n    } else if (typeof viewConfig.windowCenter !== 'undefined' &&\n      typeof viewConfig.windowWidth !== 'undefined') {\n      const wl = new WindowLevel(\n        viewConfig.windowCenter, viewConfig.windowWidth);\n      viewController.setWindowLevel(wl);\n    }\n    // colour map\n    if (typeof viewConfig.colourMap !== 'undefined') {\n      viewController.setColourMap(viewConfig.colourMap);\n    } else {\n      if (!isBaseLayer) {\n        if (data.image.getMeta().Modality === 'PT') {\n          viewController.setColourMap('hot');\n        } else {\n          viewController.setColourMap('rainbow');\n        }\n      }\n    }\n\n    // listen to image set\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\n\n    // optional draw layer\n    let drawLayer;\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      drawLayer = layerGroup.addDrawLayer();\n      drawLayer.initialise(size2D, spacing2D, dataId);\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\n    }\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.fitToContainer();\n\n    // view layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n\n    // get and apply flip flags\n    const flipFlags = this.#getViewFlipFlags(\n      imageGeometry.getOrientation(),\n      viewConfig.orientation);\n    if (flipFlags.offset.x) {\n      viewLayer.addFlipOffsetX();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.addFlipOffsetX();\n      }\n    }\n    if (flipFlags.offset.y) {\n      viewLayer.addFlipOffsetY();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.addFlipOffsetY();\n      }\n    }\n    if (flipFlags.scale.x) {\n      viewLayer.flipScaleX();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleX();\n      }\n    }\n    if (flipFlags.scale.y) {\n      viewLayer.flipScaleY();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleY();\n      }\n    }\n    if (flipFlags.scale.z) {\n      viewLayer.flipScaleZ();\n      if (typeof drawLayer !== 'undefined') {\n        drawLayer.flipScaleZ();\n      }\n    }\n\n    // layer scale (done after possible flip)\n    if (!isBaseLayer) {\n      // use zoom offset of base layer\n      const baseViewLayer = layerGroup.getBaseViewLayer();\n      viewLayer.initScale(\n        layerGroup.getScale(),\n        baseViewLayer.getAbsoluteZoomOffset()\n      );\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n    }\n    if (typeof drawLayer !== 'undefined') {\n      drawLayer.setScale(layerGroup.getScale());\n    }\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayerGroup(layerGroup, viewLayer);\n    }\n\n    // initialise the toolbox for base\n    if (isBaseLayer) {\n      if (this.#toolboxController) {\n        this.#toolboxController.init();\n      }\n    }\n  }\n\n  /**\n   * Get the view flip flags: offset (x, y) and scale (x, y, z) flags.\n   *\n   * @param {Matrix33} imageOrientation The image orientation.\n   * @param {string} viewConfigOrientation The view config orientation.\n   * @returns {object} Offset and scale flip flags.\n   */\n  #getViewFlipFlags(imageOrientation, viewConfigOrientation) {\n    // 'simple' orientation code (does not take into account angles)\n    const orientationCode =\n      getOrientationStringLPS(imageOrientation.asOneAndZeros());\n    if (typeof orientationCode === 'undefined') {\n      throw new Error('Unsupported undefined orientation code');\n    }\n\n    // view orientation flags\n    const isViewUndefined = typeof viewConfigOrientation === 'undefined';\n    const isViewAxial = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Axial;\n    const isViewCoronal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Coronal;\n    const isViewSagittal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Sagittal;\n\n    // default flags\n    const flipOffset = {\n      x: false,\n      y: false\n    };\n    const flipScale = {\n      x: false,\n      y: false,\n      z: false\n    };\n\n    if (orientationCode === 'LPS') {\n      // axial\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'LAI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'RPI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.x = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RAS') {\n      // axial\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'LSA') {\n      // coronal\n      flipOffset.y = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.y = true;\n        flipScale.z = true;\n      }\n    // } else if (orientationCode === 'LIP') { // nothing to do\n    } else if (orientationCode === 'RSP') {\n      // coronal\n      if (isViewUndefined || isViewCoronal) {\n        flipOffset.x = true;\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.x = true;\n        flipScale.x = true;\n      } else if (isViewSagittal) {\n        flipOffset.y = true;\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RIA') {\n      // coronal\n      flipOffset.x = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.x = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipScale.y = true;\n      }\n    } else if (orientationCode === 'PSL') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'PIR') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewAxial || isViewCoronal) {\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'ASR') {\n      // sagittal\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipScale.z = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'AIL') {\n      // sagittal\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else {\n      logger.warn('Unsupported orientation code: ' +\n        orientationCode + ', display could be incorrect');\n    }\n\n    return {\n      scale: flipScale,\n      offset: flipOffset\n    };\n  }\n\n} // class App\n","import {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst tagKeys = {\n  NumericValue: '0040A30A',\n  FloatingPointValue: '0040A161',\n  RationalNumeratorValue: '0040A162',\n  RationalDenominatorValue: '0040A163',\n  MeasurementUnitsCodeSequence: '004008EA'\n};\n\n/**\n * DICOM measured value: property of a numeric measurement.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.html#table_C.18.1-1}.\n */\nexport class MeasuredValue {\n  /**\n   * @type {number}\n   */\n  numericValue;\n\n  /**\n   * @type {number}\n   */\n  floatingPointValue;\n\n  /**\n   * @type {number}\n   */\n  rationalNumeratorValue;\n\n  /**\n   * @type {number}\n   */\n  rationalDenominatorValue;\n\n  /**\n   * @type {object}\n   */\n  measurementUnitsCode;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.numericValue + ' ' +\n      this.measurementUnitsCode.toString();\n  };\n\n};\n\n/**\n * Get a measured value object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MeasuredValue} A measured value object.\n */\nexport function getMeasuredValue(dataElements) {\n  const value = new MeasuredValue();\n\n  if (typeof dataElements[tagKeys.NumericValue] !== 'undefined') {\n    value.numericValue = dataElements[tagKeys.NumericValue].value[0];\n  }\n  if (typeof dataElements[tagKeys.FloatingPointValue] !== 'undefined') {\n    value.floatingPointValue =\n      dataElements[tagKeys.FloatingPointValue].value[0];\n  }\n  if (typeof dataElements[tagKeys.RationalNumeratorValue] !== 'undefined') {\n    value.rationalNumeratorValue =\n      dataElements[tagKeys.RationalNumeratorValue].value[0];\n  }\n  if (typeof dataElements[tagKeys.RationalDenominatorValue] !== 'undefined') {\n    value.rationalDenominatorValue =\n      dataElements[tagKeys.RationalDenominatorValue].value[0];\n  }\n  if (typeof dataElements[tagKeys.MeasurementUnitsCodeSequence] !==\n    'undefined') {\n    value.measurementUnitsCode = getCode(\n      dataElements[tagKeys.MeasurementUnitsCodeSequence].value[0]);\n  }\n\n  return value;\n};\n\n/**\n * Get a simple dicom element item from a measured value object.\n *\n * @param {MeasuredValue} value The measured value object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomMeasuredValueItem(value) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof value.measurementUnitsCode !== 'undefined') {\n    item.MeasurementUnitsCodeSequence = {\n      value: [getDicomCodeItem(value.measurementUnitsCode)]\n    };\n  }\n  if (typeof value.floatingPointValue !== 'undefined') {\n    item.FloatingPointValue = value.floatingPointValue;\n  }\n  if (typeof value.rationalNumeratorValue !== 'undefined') {\n    item.RationalNumeratorValue = value.rationalNumeratorValue;\n  }\n  if (typeof value.rationalDenominatorValue !== 'undefined') {\n    item.RationalDenominatorValue = value.rationalDenominatorValue;\n  }\n  if (typeof value.numericValue !== 'undefined') {\n    item.NumericValue = value.numericValue;\n  }\n\n  // return\n  return item;\n}\n","import {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\nimport {\n  getMeasuredValue,\n  getDicomMeasuredValueItem\n} from './dicomMeasuredValue';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst tagKeys = {\n  MeasuredValueSequence: '0040A300',\n  NumericValueQualifierCodeSequence: '0040A301'\n};\n\n/**\n * DICOM numeric measurement: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.html#table_C.18.1-1}.\n */\nexport class NumericMeasurement {\n  /**\n   * @type {object}\n   */\n  measuredValue;\n\n  /**\n   * @type {object}\n   */\n  numericValueQualifierCode;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    let res = this.measuredValue.toString();\n    if (typeof this.numericValueQualifierCode !== 'undefined') {\n      res += ' ' + this.numericValueQualifierCode.toString();\n    }\n    return res;\n  }\n};\n\n/**\n * Get a measurement object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {NumericMeasurement} A measurement object.\n */\nexport function getNumericMeasurement(dataElements) {\n  const measurement = new NumericMeasurement();\n\n  if (typeof dataElements[tagKeys.MeasuredValueSequence] !== 'undefined') {\n    measurement.measuredValue = getMeasuredValue(\n      dataElements[tagKeys.MeasuredValueSequence].value[0]);\n  }\n  if (typeof dataElements[tagKeys.NumericValueQualifierCodeSequence] !==\n    'undefined') {\n    measurement.numericValueQualifierCode = getCode(\n      dataElements[tagKeys.NumericValueQualifierCodeSequence].value[0]);\n  }\n\n  return measurement;\n};\n\n/**\n * Get a simple dicom element item from a measurement object.\n *\n * @param {NumericMeasurement} measurement The measurement object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomNumericMeasurementItem(measurement) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof measurement.measuredValue !== 'undefined') {\n    item.MeasuredValueSequence = {\n      value: [getDicomMeasuredValueItem(measurement.measuredValue)]\n    };\n  }\n  if (typeof measurement.numericValueQualifierCode !== 'undefined') {\n    item.NumericValueQualifierCodeSequence = {\n      value: [getDicomCodeItem(measurement.numericValueQualifierCode)]\n    };\n  }\n\n  // return\n  return item;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst tagKeys = {\n  ReferencedSOPClassUID: '00081150',\n  ReferencedSOPInstanceUID: '00081155'\n};\n\n/**\n * DICOM sop instance reference.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_10.8.html#table_10-11}.\n */\nexport class SopInstanceReference {\n  /**\n   * @type {string}\n   */\n  referencedSOPClassUID;\n\n  /**\n   * @type {string}\n   */\n  referencedSOPInstanceUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.referencedSOPInstanceUID + ' (class: ' +\n      this.referencedSOPClassUID + ')';\n  };\n};\n\n/**\n * Get a SOP reference object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SopInstanceReference} A SOP reference object.\n */\nexport function getSopInstanceReference(dataElements) {\n  const ref = new SopInstanceReference();\n\n  if (typeof dataElements[tagKeys.ReferencedSOPClassUID] !== 'undefined') {\n    ref.referencedSOPClassUID =\n      dataElements[tagKeys.ReferencedSOPClassUID].value[0];\n  }\n  if (typeof dataElements[tagKeys.ReferencedSOPInstanceUID] !== 'undefined') {\n    ref.referencedSOPInstanceUID =\n      dataElements[tagKeys.ReferencedSOPInstanceUID].value[0];\n  }\n\n  return ref;\n};\n\n/**\n * Get a simple dicom element item from a SOP reference object.\n *\n * @param {SopInstanceReference} ref The SOP reference object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSopInstanceReferenceItem(ref) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof ref.referencedSOPClassUID !== 'undefined') {\n    item.ReferencedSOPClassUID = ref.referencedSOPClassUID;\n  }\n  if (typeof ref.referencedSOPInstanceUID !== 'undefined') {\n    item.ReferencedSOPInstanceUID = ref.referencedSOPInstanceUID;\n  }\n\n  // return\n  return item;\n}\n","import {\n  getSopInstanceReference,\n  getDicomSopInstanceReferenceItem\n} from './dicomSopInstanceReference';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst tagKeys = {\n  ReferencedFrameNumber: '00081160',\n  ReferencedSOPSequence: '00081199',\n  ReferencedSegmentNumber: '0062000B'\n};\n\n/**\n * DICOM image reference: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.4.html#table_C.18.4-1}.\n */\nexport class ImageReference {\n  /**\n   * @type {object}\n   */\n  referencedSOPSequence;\n\n  /**\n   * @type {object}\n   */\n  referencedFrameNumber;\n\n  /**\n   * @type {string}\n   */\n  referencedSegmentNumber;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.referencedSOPSequence.toString();\n  };\n};\n\n/**\n * Get a reference object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {ImageReference} A reference object.\n */\nexport function getImageReference(dataElements) {\n  const ref = new ImageReference();\n\n  if (typeof dataElements[tagKeys.ReferencedFrameNumber] !== 'undefined') {\n    ref.referencedFrameNumber =\n      dataElements[tagKeys.ReferencedFrameNumber].value[0];\n  }\n  if (typeof dataElements[tagKeys.ReferencedSOPSequence] !== 'undefined') {\n    ref.referencedSOPSequence = getSopInstanceReference(\n      dataElements[tagKeys.ReferencedSOPSequence].value[0]);\n  }\n  if (typeof dataElements[tagKeys.ReferencedSegmentNumber] !== 'undefined') {\n    ref.referencedSegmentNumber =\n      dataElements[tagKeys.ReferencedSegmentNumber].value[0];\n  }\n\n  return ref;\n};\n\n/**\n * Get a simple dicom element item from a reference object.\n *\n * @param {ImageReference} ref The reference object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomImageReferenceItem(ref) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof ref.referencedFrameNumber !== 'undefined') {\n    item.ReferencedFrameNumber = ref.referencedFrameNumber;\n  }\n  if (typeof ref.referencedSOPSequence !== 'undefined') {\n    item.ReferencedSOPSequence = {\n      value: [getDicomSopInstanceReferenceItem(ref.referencedSOPSequence)]\n    };\n  }\n  if (typeof ref.referencedSegmentNumber !== 'undefined') {\n    item.ReferencedSegmentNumber =\n      ref.referencedSegmentNumber;\n  }\n\n  // return\n  return item;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst tagKeys = {\n  PixelOriginInterpretation: '00480301',\n  GraphicData: '00700022',\n  GraphicType: '00700023',\n  FiducialUID: '0070031A'\n};\n\n/**\n * DICOM spatial coordinate (SCOORD): item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.6.html#table_C.18.6-1}.\n */\nexport class SpatialCoordinate {\n  /**\n   * @type {string[]}\n   */\n  graphicData;\n\n  /**\n   * @type {string}\n   */\n  graphicType;\n\n  /**\n   * @type {string}\n   */\n  pixelOriginInterpretation;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.graphicType +\n      ' {' + this.graphicData + '}';\n  };\n};\n\n/**\n * Get a scoord object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SpatialCoordinate} A scoord object.\n */\nexport function getSpatialCoordinate(dataElements) {\n  const scoord = new SpatialCoordinate();\n\n  if (typeof dataElements[tagKeys.GraphicData] !== 'undefined') {\n    scoord.graphicData = dataElements[tagKeys.GraphicData].value;\n  }\n  if (typeof dataElements[tagKeys.GraphicType] !== 'undefined') {\n    scoord.graphicType = dataElements[tagKeys.GraphicType].value[0];\n  }\n  if (typeof dataElements[tagKeys.PixelOriginInterpretation] !== 'undefined') {\n    scoord.pixelOriginInterpretation =\n      dataElements[tagKeys.PixelOriginInterpretation].value[0];\n  }\n  if (typeof dataElements[tagKeys.FiducialUID] !== 'undefined') {\n    scoord.fiducialUID = dataElements[tagKeys.FiducialUID].value[0];\n  }\n  return scoord;\n};\n\n/**\n * Get a simple dicom element item from a scoord object.\n *\n * @param {SpatialCoordinate} scoord The scoord object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSpatialCoordinateItem(scoord) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof scoord.pixelOriginInterpretation !== 'undefined') {\n    item.PixelOriginInterpretation = scoord.pixelOriginInterpretation;\n  }\n  if (typeof scoord.graphicData !== 'undefined') {\n    item.GraphicData = scoord.graphicData;\n  }\n  if (typeof scoord.graphicType !== 'undefined') {\n    item.GraphicType = scoord.graphicType;\n  }\n  if (typeof scoord.fiducialUID !== 'undefined') {\n    item.FiducialUID = scoord.fiducialUID;\n  }\n\n  // return\n  return item;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst tagKeys = {\n  GraphicData: '00700022',\n  GraphicType: '00700023',\n  ReferencedFrameofReferenceUID: '30060024',\n  FiducialUID: '0070031A'\n};\n\n/**\n * DICOM spatial coordinate 3D (SCOORD3D): item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.9.html#table_C.18.9-1}.\n */\nexport class SpatialCoordinate3D {\n  /**\n   * @type {string[]}\n   */\n  graphicData;\n\n  /**\n   * @type {string}\n   */\n  graphicType;\n\n  /**\n   * @type {string}\n   */\n  referencedFrameofReferenceUID;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.graphicType +\n      '{' + this.graphicData + '}';\n  };\n};\n\n/**\n * Get a scoord3d object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SpatialCoordinate3D} A scoord3d object.\n */\nexport function getSpatialCoordinate3D(dataElements) {\n  const scoord = new SpatialCoordinate3D();\n\n  if (typeof dataElements[tagKeys.GraphicData] !== 'undefined') {\n    scoord.graphicData = dataElements[tagKeys.GraphicData].value;\n  }\n  if (typeof dataElements[tagKeys.GraphicType] !== 'undefined') {\n    scoord.graphicType = dataElements[tagKeys.GraphicType].value[0];\n  }\n  if (typeof dataElements[tagKeys.ReferencedFrameofReferenceUID] !==\n    'undefined') {\n    scoord.referencedFrameofReferenceUID =\n      dataElements[tagKeys.ReferencedFrameofReferenceUID].value[0];\n  }\n  if (typeof dataElements[tagKeys.FiducialUID] !== 'undefined') {\n    scoord.fiducialUID = dataElements[tagKeys.FiducialUID].value[0];\n  }\n  return scoord;\n};\n\n/**\n * Get a simple dicom element item from a scoord3d object.\n *\n * @param {SpatialCoordinate3D} scoord The scoord3d object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSpatialCoordinate3DItem(scoord) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof scoord.graphicData !== 'undefined') {\n    item.GraphicData = scoord.graphicData;\n  }\n  if (typeof scoord.graphicType !== 'undefined') {\n    item.GraphicType = scoord.graphicType;\n  }\n  if (typeof scoord.referencedFrameofReferenceUID !== 'undefined') {\n    item.ReferencedFrameofReferenceUID =\n      scoord.referencedFrameofReferenceUID;\n  }\n  if (typeof scoord.fiducialUID !== 'undefined') {\n    item.FiducialUID = scoord.fiducialUID;\n  }\n\n  // return\n  return item;\n}","import {\n  getNumericMeasurement,\n  getDicomNumericMeasurementItem\n} from './dicomNumericMeasurement';\nimport {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\nimport {\n  getImageReference,\n  getDicomImageReferenceItem\n} from './dicomImageReference';\nimport {\n  getSopInstanceReference,\n  getDicomSopInstanceReferenceItem\n} from './dicomSopInstanceReference';\nimport {\n  getSpatialCoordinate,\n  getDicomSpatialCoordinateItem\n} from './dicomSpatialCoordinate';\nimport {\n  getSpatialCoordinate3D,\n  getDicomSpatialCoordinate3DItem\n} from './dicomSpatialCoordinate3D';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedSOPSequence: '00081199',\n  RelationshipType: '0040A010',\n  ValueType: '0040A040',\n  ConceptNameCodeSequence: '0040A043',\n  ConceptCodeSequence: '0040A168',\n  ContentSequence: '0040A730',\n  DateTime: '0040A120',\n  Date: '0040A121',\n  Time: '0040A122',\n  UID: '0040A124',\n  PersonName: '0040A123',\n  TextValue: '0040A160',\n  ContinuityOfContent: '0040A050'\n};\n\nexport const valueTypeValueTagName = {\n  TEXT: 'TextValue',\n  // NUM: '',\n  // CODE: '',\n  DATE: 'Date',\n  TIME: 'Time',\n  DATETIME: 'DateTime',\n  UIDREF: 'UID',\n  PNAME: 'PersonName',\n  // COMPOSITE: '',\n  // IMAGE: '',\n  // WAVEFORM: '',\n  // SCOORD: '',\n  // SCOORD3D: '',\n  // TCOORD: '',\n  CONTAINER: 'ContinuityOfContent',\n  // TABLE: ''\n};\n\n/**\n * DICOM SR content: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.17.3.html}.\n */\nexport class DicomSRContent {\n  /**\n   * Value type.\n   *\n   * @type {string}\n   */\n  valueType;\n  /**\n   * Concept name code.\n   *\n   * @type {DicomCode|undefined}\n   */\n  conceptNameCode;\n  /**\n   * Relationship Type.\n   *\n   * @type {string}\n   */\n  relationshipType;\n\n  /**\n   * Content sequence (0040,A730).\n   *\n   * @type {DicomSRContent[]|undefined}\n   */\n  contentSequence;\n\n  /**\n   * Value.\n   *\n   * @type {object}\n   */\n  value;\n\n  /**\n   * @param {string} valueType The content item value type.\n   */\n  constructor(valueType) {\n    this.valueType = valueType;\n  }\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @param {string} [prefix] An optional prefix for recursive content.\n   * @returns {string} The object as string.\n   */\n  toString(prefix) {\n    if (typeof prefix === 'undefined') {\n      prefix = '';\n    }\n\n    let res = '';\n\n    if (typeof this.relationshipType !== 'undefined') {\n      res += '(' + this.relationshipType + ') ';\n    }\n\n    res += this.valueType + ': ';\n\n    if (typeof this.conceptNameCode !== 'undefined') {\n      res += this.conceptNameCode.toString();\n    }\n\n    res += ' = ' + this.value.toString();\n\n    if (typeof this.contentSequence !== 'undefined') {\n      for (const item of this.contentSequence) {\n        res += '\\n' + prefix + '- ' + item.toString(prefix + '  ');\n      }\n    }\n\n    return res;\n  }\n}\n\n/**\n * Check if two content item objects are equal.\n *\n * @param {DicomCode} item1 The first content item.\n * @param {DicomCode} item2 The second content item.\n * @returns {boolean} True if both content items are equal.\n */\nexport function isEqualContentItem(item1, item2) {\n  return Object.keys(item1).length === Object.keys(item2).length &&\n  Object.keys(item1).every(key =>\n    Object.prototype.hasOwnProperty.call(item2, key) &&\n    item1[key] === item2[key]\n  );\n}\n\n/**\n * Get a content item object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSRContent} A content item object.\n */\nexport function getSRContent(dataElements) {\n  // valueType -> ValueType (type1)\n  let valueType = '';\n  if (typeof dataElements[TagKeys.ValueType] !== 'undefined') {\n    valueType = dataElements[TagKeys.ValueType].value[0];\n  }\n\n  const content = new DicomSRContent(valueType);\n\n  // relationshipType -> RelationType (type1)\n  if (typeof dataElements[TagKeys.RelationshipType] !== 'undefined') {\n    content.relationshipType =\n      dataElements[TagKeys.RelationshipType].value[0];\n  }\n\n  if (typeof dataElements[TagKeys.ConceptNameCodeSequence] !== 'undefined') {\n    content.conceptNameCode =\n      getCode(dataElements[TagKeys.ConceptNameCodeSequence].value[0]);\n  }\n\n  // set value acording to valueType\n  // (date and time are stored as string)\n  if (valueType === 'CODE') {\n    content.value = getCode(\n      dataElements[TagKeys.ConceptCodeSequence].value[0]);\n  } else if (valueType === 'NUM') {\n    content.value = getNumericMeasurement(dataElements);\n  } else if (valueType === 'IMAGE') {\n    content.value = getImageReference(dataElements);\n  } else if (valueType === 'COMPOSITE') {\n    content.value = getSopInstanceReference(\n      dataElements[TagKeys.ReferencedSOPSequence].value[0]\n    );\n  } else if (valueType === 'SCOORD') {\n    content.value = getSpatialCoordinate(dataElements);\n  } else if (valueType === 'SCOORD3D') {\n    content.value = getSpatialCoordinate3D(dataElements);\n  } else {\n    const valueTagName = valueTypeValueTagName[valueType];\n    if (typeof valueTagName !== 'undefined') {\n      content.value = dataElements[TagKeys[valueTagName]].value[0];\n    } else {\n      console.warn('Unsupported input ValueType: ' + valueType);\n    }\n  }\n\n  const contentSqEl = dataElements[TagKeys.ContentSequence];\n  if (typeof contentSqEl !== 'undefined') {\n    content.contentSequence = [];\n    for (const item of dataElements[TagKeys.ContentSequence].value) {\n      content.contentSequence.push(getSRContent(item));\n    }\n  }\n\n  if (typeof content.value === 'undefined') {\n    console.log('valueType', valueType);\n  }\n\n  return content;\n}\n\n/**\n * Get a simple dicom element item from a content item object.\n *\n * @param {DicomSRContent} content The content item object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSRContentItem(content) {\n  // dicom item (tags are in ~group/element order)\n  let contentItem = {};\n\n  if (typeof content.relationshipType !== 'undefined') {\n    contentItem.RelationshipType = content.relationshipType;\n  }\n  if (typeof content.valueType !== 'undefined') {\n    contentItem.ValueType = content.valueType;\n  }\n  if (typeof content.conceptNameCode !== 'undefined') {\n    contentItem.ConceptNameCodeSequence = {\n      value: [getDicomCodeItem(content.conceptNameCode)]\n    };\n  }\n\n  // set appropriate value tag (data and time are stored as string)\n  if (content.valueType === 'CODE') {\n    contentItem.ConceptCodeSequence = {\n      value: [getDicomCodeItem(content.value)]\n    };\n  } else if (content.valueType === 'NUM') {\n    contentItem = {\n      ...contentItem,\n      ...getDicomNumericMeasurementItem(content.value)\n    };\n  } else if (content.valueType === 'IMAGE') {\n    contentItem = {\n      ...contentItem,\n      ...getDicomImageReferenceItem(content.value)\n    };\n  } else if (content.valueType === 'COMPOSITE') {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSopInstanceReferenceItem(content.value)\n    };\n  } else if (content.valueType === 'SCOORD') {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSpatialCoordinateItem(content.value)\n    };\n  } else if (content.valueType === 'SCOORD3D') {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSpatialCoordinate3DItem(content.value)\n    };\n  } else {\n    const valueTagName = valueTypeValueTagName[content.valueType];\n    if (typeof valueTagName !== 'undefined') {\n      contentItem[valueTagName] = content.value;\n    } else {\n      console.warn('Unsupported output ValueType: ' + content.valueType);\n    }\n  }\n\n  if (typeof content.contentSequence !== 'undefined') {\n    contentItem.ContentSequence = {\n      value: []\n    };\n    for (const item of content.contentSequence) {\n      contentItem.ContentSequence.value.push(getDicomSRContentItem(item));\n    }\n  }\n\n  return contentItem;\n}\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper: helps handling the segments list,\n *   but does *NOT* update the associated mask (use special commands\n *   for that such as DeleteSegmentCommand, ChangeSegmentColourCommand...).\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {MaskSegment[]}\n   */\n  #segments;\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    // check segments in meta\n    const meta = mask.getMeta();\n    if (typeof meta.custom === 'undefined') {\n      meta.custom = {};\n    }\n    if (typeof meta.custom.segments === 'undefined') {\n      meta.custom.segments = [];\n    }\n    this.#segments = meta.custom.segments;\n  }\n\n  /**\n   * Find the index of a segment in the segments list.\n   *\n   * @param {number} segmentNumber The number to find.\n   * @returns {number} The index in the segments list, -1 if not found.\n   */\n  #findSegmentIndex(segmentNumber) {\n    return this.#segments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is part of the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return this.#findSegmentIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {number[]} numbers Array of segment numbers.\n   * @returns {boolean[]} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        if (typeof segment.displayValue !== 'undefined') {\n          values.push(segment.displayValue);\n        } else {\n          values.push(segment.displayRGBValue);\n        }\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {MaskSegment|undefined} The segment or undefined if not found.\n   */\n  getSegment(segmentNumber) {\n    let segment;\n    const index = this.#findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      segment = this.#segments[index];\n    }\n    return segment;\n  }\n\n  /**\n   * Add a segment to the segments list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addSegment(segment) {\n    const index = this.#findSegmentIndex(segment.number);\n    if (index === -1) {\n      this.#segments.push(segment);\n    } else {\n      logger.warn(\n        'Not adding segment, it is allready in the segments list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeSegment(segmentNumber) {\n    const index = this.#findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      this.#segments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the segments list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * Update a segment of the segments list.\n   *\n   * @param {MaskSegment} segment The segment to update.\n   */\n  updateSegment(segment) {\n    const index = this.#findSegmentIndex(segment.number);\n    if (index !== -1) {\n      this.#segments[index] = segment;\n    } else {\n      logger.warn(\n        'Cannot update segment, it is not in the segments list: ' +\n          segment.number);\n    }\n  }\n\n} // class MaskSegmentHelper\n","import {MaskSegmentHelper} from './maskSegmentHelper';\nimport {BLACK} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {MaskSegment}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this.#offsets = mask.getOffsets(segment.displayRGBValue);\n    } else {\n      this.#offsets = mask.getOffsets(segment.displayValue);\n    }\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    // remove from image\n    if (typeof this.#segment.displayRGBValue !== 'undefined') {\n      this.#mask.setAtOffsets(this.#offsets, BLACK);\n    } else {\n      this.#mask.setAtOffsets(this.#offsets, 0);\n    }\n    // remove from segments\n    const segHelper = new MaskSegmentHelper(this.#mask);\n    segHelper.removeSegment(this.#segment.number);\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    // re-draw in image\n    if (typeof this.#segment.displayRGBValue !== 'undefined') {\n      this.#mask.setAtOffsets(this.#offsets, this.#segment.displayRGBValue);\n    } else {\n      this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n    }\n    // add back to segments\n    const segHelper = new MaskSegmentHelper(this.#mask);\n    segHelper.addSegment(this.#segment);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Change segment colour command.\n */\nexport class ChangeSegmentColourCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to modify.\n   *\n   * @type {MaskSegment}\n   */\n  #segment;\n\n  /**\n   * The new segment colour.\n   *\n   * @type {RGB|number}\n   */\n  #newColour;\n\n  /**\n   * The previous segment colour.\n   *\n   * @type {RGB|number}\n   */\n  #previousColour;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to modify.\n   * @param {RGB|number} newColour The new segment colour.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, newColour, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n    this.#newColour = newColour;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this.#previousColour = segment.displayRGBValue;\n    } else {\n      this.#previousColour = segment.displayValue;\n    }\n    this.#offsets = mask.getOffsets(this.#previousColour);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-segment-colour';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeSegmentColourCommand#changemasksegmentcolour\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, this.#newColour);\n    // update segment property\n    if (typeof this.#newColour === 'number') {\n      this.#segment.displayValue = this.#newColour;\n    } else {\n      this.#segment.displayRGBValue = this.#newColour;\n    }\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event ChangeSegmentColourCommand#changemasksegmentcolour\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'changemasksegmentcolour',\n        segmentnumber: this.#segment.number,\n        value: [this.#newColour]\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeSegmentColourCommand#changemasksegmentcolour\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#previousColour);\n    // update segment property\n    if (typeof this.#previousColour === 'number') {\n      this.#segment.displayValue = this.#previousColour;\n    } else {\n      this.#segment.displayRGBValue = this.#previousColour;\n    }\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event ChangeSegmentColourCommand#changemasksegmentcolour\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'changemasksegmentcolour',\n      segmentnumber: this.#segment.number,\n      value: [this.#previousColour]\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeSegmentColourCommand class\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment view helper: handles hidden segments.\n */\nexport class MaskSegmentViewHelper {\n\n  /**\n   * List of hidden segments.\n   *\n   * @type {MaskSegment[]}\n   */\n  #hiddenSegments = [];\n\n  #isMonochrome;\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number} The index in the array, -1 if not found.\n   */\n  #findHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#findHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addToHidden(segment) {\n    if (!this.isHidden(segment.number)) {\n      this.#hiddenSegments.push(segment);\n      // base flag on latest added\n      this.#isMonochrome = typeof segment.displayValue !== 'undefined';\n    } else {\n      logger.warn(\n        'Not hidding segment, it is allready in the hidden list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#findHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the hidden list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [];\n    if (this.#isMonochrome) {\n      hiddenColours[0] = 0;\n    } else {\n      hiddenColours[0] = {r: 0, g: 0, b: 0};\n    }\n    for (const segment of this.#hiddenSegments) {\n      if (this.#isMonochrome) {\n        hiddenColours.push(segment.displayValue);\n      } else {\n        hiddenColours.push(segment.displayRGBValue);\n      }\n    }\n\n    // create alpha function\n    let resultFn;\n    if (this.#isMonochrome) {\n      resultFn = function (value/*, index*/) {\n        for (let i = 0; i < hiddenColours.length; ++i) {\n          if (value === hiddenColours[i]) {\n            return 0;\n          }\n        }\n        // default\n        return 255;\n      };\n    } else {\n      resultFn = function (value/*, index*/) {\n        for (let i = 0; i < hiddenColours.length; ++i) {\n          if (value[0] === hiddenColours[i].r &&\n            value[1] === hiddenColours[i].g &&\n            value[2] === hiddenColours[i].b) {\n            return 0;\n          }\n        }\n        // default\n        return 255;\n      };\n    }\n    return resultFn;\n  }\n}","/**\n * Mutable 2D scalar ({x,y}).\n */\nexport class Scalar2D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n}\n\n/**\n * Mutable 3D scalar ({x,y,z}).\n */\nexport class Scalar3D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n\n  /**\n   * Z value.\n   *\n   * @type {number}\n   */\n  z;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__654__","__WEBPACK_EXTERNAL_MODULE__324__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","numberOfDims","parseInt","substring","Array","fill","ModalityLut","rsi","bitsStored","isID","Math","pow","Float32Array","apply","getRSI","getLength","getValue","offset","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","WindowLevel","center","width","defaultPresets","CT","mediastinum","lung","bone","brain","head","VoiLut","wl","getWindowLevel","c","setSignedOffset","WindowLut","modalityLut","isSigned","isDiscrete","size","getVoiLut","getModalityLut","setVoiLut","lut","getSlope","Uint8ClampedArray","floor","buildLut","func","id","invId","lut_range_max","ColourMap","red","green","blue","luts","plain","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","RGB","g","b","BLACK","isEqualRgb","c1","c2","getShadowColour","hexColour","hexStr","rgb","isDarkColour","labToUintLab","triplet","d65","x","y","z","srgbToCielab","labFunc","illuminant","fy","ciexyzToCielab","invGammaFunc","rl","gl","bl","srgbToCiexyz","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","isCodirectional","Number","EPSILON","REAL_WORLD_EPSILON","isSimilar","tol","abs","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","max","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","isIdentityMat33","mat33","Point2D","getDistance","dx","dy","dz","getClosest","pointList","minIndex","minDist","dist","minus","Point","get3D","values0","values1","mergeWith3D","startsWith","search","rawPos","pos","endsWith","getFlags","flags","regex","match","exec","replaceFlags","keys","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","Uint8Array","charCodeAt","precisionRound","number","precision","factor","delta","round","arraySortEquals","arr0","arr1","arrayEquals","sort","element","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","byteLength","data","trailer","buffer","set","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","transferSyntaxes","transferSyntaxKeywords","Tag","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","getVrFromDictionary","tagCompareFunction","getTagFromKey","getItemTag","isItemTag","tag","isItemDelimitationItemTag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys1","foundTag","k0","lenK0","k1","lenK1","DataElement","vl","undefinedLength","startOffset","endOffset","items","flipArrayEndianness","array","blen","u8","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","Int8Array","Int16Array","isNativeLittleEndian","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","bitNumber","bitIndex","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","getCoronalMat33","Orientation","Axial","Coronal","Sagittal","getOrientationStringLPS","matrix","v0","v1","v2","getVectorStringLPS","vector","orientation","orientationX","orientationY","orientationZ","threshold","getOrientationFromCosines","cosines","orientationMatrix","rowCosines","colCosines","normal","getDwvVersion","hasDicomPrefix","reduce","previous","current","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","getOrientationName","orientMatrix","code","orientStr","getLPSGroup","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","TagKeys","DicomParser","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","reader","implicit","itemData","item","isSeqDelim","isItemDelim","offsetTableVl","readTagRes","is32bitVL","concat","isKnownVR","pixItemData","sqEndOffset","vrType","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","sqBitsAllocated","sqPixelRepresentation","dataElement","subElement","elements","parse","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","type","callback","remove","nFound","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","RescaleSlopeAndIntercept","slope","intercept","getIntercept","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","offsetToIndex","off","dimSize","get2D","Statistics","min","mean","stdDev","median","p25","p75","getStats","includesFullStatsFlags","stats","getBasicStats","getPercentile","getFullStats","sum","sumSqr","variance","ratio","i0","guid","random","NumberRange","Spacing","Geometry","origin","spacing","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","geoSliceSpacing","origins","spacings","origin1","origin2","sliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestOriginIndex","closestOrigin","pointDir","appendOrigin","equalToOrigin","find","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","padZeroTwoDigit","getDate","daValue","monthBeginIndex","dayBeginIndex","year","monthIndex","day","getTime","tmValue","tmHours","tmMinutes","tmSeconds","tmFracSecondsStr","hours","minutes","seconds","milliseconds","getImage2DSize","rows","columns","getSpacingFromMeasure","dataElements","pixelSpacing","parseFloat","checkTag","warning","TagValueExtractor","_elements","ImageFactory","getWarning","checkElements","modality","suvFactor","patWeight","patWeightEl","decayedDose","seriesDateObj","totalDose","halfLife","radioStart","radioInfoSq","totalDoseStr","totalDoseEl","halfLifeStr","halfLifeEl","radioStartDateTimeEl","radioStartDateObj","radioStartTimeObj","radioStartDateTime","dtValue","dateDataElement","dtDate","timeDataElement","date","getDateTime","Date","seriesTimeObj","scanStart","acqDateEl","acqTimeEl","acqDateObj","acqTimeObj","acqDate","frameRefTime","frameRefTimeElStr","frameRefTimeEl","actualFrameDuration","actualFrameDurationElStr","actualFrameDurationEl","decayConstant","decayDuringFrame","offsetSeconds","exp","decayTime","getDecayedDose","getSuvFactor","create","pixelBuffer","numberOfFiles","size2D","numberOfFramesEl","rowSpacing","columnSpacing","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","getOrientationMatrix","geometry","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","Image","photometricInterpretation","photo","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","meta","Modality","isPetWithSuv","intensityFactor","setRescaleSlopeAndIntercept","safeGet","TransferSyntaxUID","MediaStorageSOPClassUID","SOPClassUID","ImageType","SamplesPerPixel","PhotometricInterpretation","PixelRepresentation","BitsAllocated","BitsStored","HighBit","StudyDate","StudyTime","StudyInstanceUID","StudyID","SeriesInstanceUID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","ImageOrientationPatient","FrameOfReferenceUID","IsSigned","pixelUnit","getPixelUnit","windowPresets","windowCenter","windowWidth","windowCWExplanation","getPhotometricInterpretation","redLutElement","greenLutElement","blueLutElement","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","clone","recommendedDisplayFrameRate","RecommendedDisplayFrameRate","setMeta","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","len","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","WriterRule","action","writerActions","copy","clear","getUID","prefix","getDwvUIDPrefix","uid","datePart","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","default","setUseUnVrForPrivateSq","setFixUnknownVR","setRules","rules","addMissingTags","rule","tagKey","isKey","useSpecialTextEncoder","TextEncoder","getElementToWrite","groupName","writer","itemTag","subItem","itemElement","itemDelimElement","hexString","hexString1","hexString2","atValue","diff","message","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","getBuffer","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","missingTags","originalElement","checkAndFixUnknownVR","fmiv","getDataElement","fmivSize","icUID","icUIDSize","icUIDValue","ivn","ivnSize","ivnValue","elemSortFunc","fmigl","fmiglSize","ArrayBuffer","metaWriter","dataWriter","lenj","metaOffset","lenk","newItems","oldItemElements","newItemElements","subSize","itemKeys","itemKey","padStr","pad","getVrPad","join","padOBValue","isTypedArrayVr","isArray","itemPrefixSize","getBpeForVrType","dictVr","getUint8ToVrValue","getElementsFromJSONTags","simpleTags","simpleTag","CodeValue","CodingSchemeDesignator","CodeMeaning","LongCodeValue","URNCodeValue","DicomCode","meaning","longValue","urnValue","schemeDesignator","getCode","getDicomCodeItem","codeItem","MaskSegment","algorithmType","algorithmName","displayValue","displayRGBValue","propertyTypeCode","propertyCategoryCode","trackingUid","trackingId","getSegment","segment","cielabElement","gammaFunc","ciexyzToSrgb","invLabFunc","l0","cielabToCiexyz","cielabToSrgb","getDicomSegmentItem","algoType","segmentItem","SegmentNumber","SegmentLabel","SegmentAlgorithmType","SegmentAlgorithmName","cieLab","RecommendedDisplayCIELabValue","RecommendedDisplayGrayscaleValue","SegmentedPropertyCategoryCodeSequence","SegmentedPropertyTypeCodeSequence","TrackingID","TrackingUID","DicomSegmentFrameInfo","dimIndex","imagePosPat","derivationImages","refSegmentNumber","getSegmentFrameInfo","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","segmentIdSq","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","getDicomSegmentFrameInfoItem","FrameContentSequence","DimensionIndexValues","PlanePositionSequence","ImagePositionPatient","SegmentIdentificationSequence","ReferencedSegmentNumber","sourceImgPurposeOfReferenceCode","segDerivationCode","derivationImageItems","derivationImage","PurposeOfReferenceCodeSequence","ReferencedSOPClassUID","ReferencedSOPInstanceUID","DerivationCodeSequence","SourceImageSequence","DerivationImageSequence","equalPosPat","pos1","pos2","JSON","stringify","tagDefinition","tagValue","enum","createRoiSliceBuffers","segments","sliceOffset","numberOfComponents","getPixelValue","equalValues","inputOffset","buffers","pixelValue","number2","RequiredDicomSegTags","getDefaultDicomSegJson","reqTag","MaskFactory","_dicomElements","frames","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","invOrientation","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","tmpGeometry","isAboveEpsilon","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","frameOffset","frameSegment","SeriesDate","SeriesTime","DimensionOrganizationSequence","DimensionIndexSequence","custom","SOPInstanceUID","frameOfReferenceUID","lossyImageCompression","LossyImageCompression","toDicom","extraTags","getMeta","Rows","Columns","now","dateObj","ContentDate","getFullYear","getMonth","ContentTime","getDicomTime","getHours","getMinutes","getSeconds","dateToTimeObj","segmentItems","SegmentSequence","SharedFunctionalGroupsSequence","PlaneOrientationSequence","PixelMeasuresSequence","SpacingBetweenSlices","PixelSpacing","roiBuffers","key0","createRoiBuffers","finalBuffers","referencedSOPs","number40","number4","key1","posPat","posPatArray","sourceIndex","getImageUid","NumberOfFrames","frameInfosTag","PerFrameFunctionalGroupsSequence","refSeriesTag","ReferencedInstanceSequence","ReferencedSeriesSequence","tags1","tags2","keys2","tagName2","mergeTags","dicomElements","pixVl","de","createImage","createMaskImage","imageUids","getSecondaryOffset","containsImageUids","itemArr1","arrayContains","canQuantify","canWindowLevel","isMonochrome","nFiles","getRescaleSlopeAndIntercept","isConstantRSI","inRsi","isIdentityRSI","interp","config","getOffsets","bufferValue","offsets","equal","hasValues","finalValues","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","tmpBuffer","appendSlice","rhsSize","rhsRange","getDataRange","rhsResRange","getRescaledDataRange","resRange","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","ViewFactory","view","View","setColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","setInitialIndex","getPlaybackMilliseconds","_value","_index","getAlphaFunction","setAlphaFunction","currentIndex","sliceWl","setWindowLevel","setWindowLevelPresetById","voiLut","voiLutWl","getWindowPresets","getWindowPresetsNames","presets","addWindowPresets","getCurrentWindowPresetName","getColourMap","getCurrentPosition","isPositionInBounds","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","isNewWl","isNewName","manual","wc","ww","skipGenerate","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","windowLut","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","ViewController","getPlaneHelper","isMask","initialise","getPositionFromPlanePoint","getModality","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","sliceValues","sliceOrigin","getImageRegionValues","rescaled","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKeys","metaKey","point2D","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","incr","getIncrementPosition","getDecrementPosition","getIncrementScrollPosition","getDecrementScrollPosition","incrementIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","play","window","setInterval","canDoMore","stop","clearInterval","setViewAlphaFunction","bindImageAndLayer","viewLayer","onimagecontentchange","onimagegeometrychange","unbindImageAndLayer","InteractionEventNames","customUI","openRoiDialog","textExpr","prompt","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getTouchPoints","targetTouches","changedTouches","getMousePoint","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","ViewLayer","containerDiv","className","getDataId","getScale","getAbsoluteZoomOffset","setImageSmoothing","setView","dataId","bindImage","getViewController","onimageset","dataid","unbindImage","draw","vcSize","origin0","scrollOffset","setBaseOffset","getId","removeFromDOM","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","flipScaleX","flipScaleY","flipScaleZ","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","initScale","absoluteZoomOffset","layerGroupOrigin","layerGroupOrigin0","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","posX","posY","displayToMainPlanePos","display","style","isVisible","layerid","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","fitToContainer","containerSize","divToWorldSizeRatio","fitOffset","needsDraw","divToImageSizeRatio","newViewOffset","scaledImageSize","newFlipOffset","bindInteraction","pointerEvents","names","eventName","passive","unbindInteraction","srclayerid","putImageData","dims3D","indexScrollIndex","filter","save","restore","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","getShapeDisplayName","shape","displayName","Konva","points","DrawGroupCommand","layer","getParent","getName","execute","getKonvaLayer","onExecute","undo","onUndo","_event","MoveGroupCommand","translation","move","minusTrans","ChangeGroupCommand","startAnchor","endAnchor","viewController","update","DeleteGroupCommand","DrawMeta","quantification","DrawDetails","color","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","DrawController","drawLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","list","groups","collec","text","shapeExtrakids","closed","extraName0","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","cmdCallback","exeCallback","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","delcmd","deleteDraw","deleteDraws","shapeGroups","getNumberOfDraws","DrawLayer","getKonvaStage","getLayers","getDrawController","setPlaneHelper","opacity","container","listening","getContent","setAttribute","konvaLayer","isGroupVisible","toggleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromLayerDivId","idString","groupDivId","layerId","getLayerDetailsFromEvent","layerDiv","closest","indexCenter","LayerGroup","getShowCrosshair","setShowCrosshair","getDivId","getAddedScale","getOffset","getNumberOfLayers","forEach","getNumberOfViewLayers","getActiveViewLayer","tmpLayer","getBaseViewLayer","getViewLayersByDataId","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataId","setActiveViewLayer","setActiveViewLayerByDataId","setActiveDrawLayer","setActiveDrawLayerByDataId","addViewLayer","viewLayerIndex","div","append","addDrawLayer","updateLayersToPositionChange","empty","getElementsByClassName","removeLayersByDataId","removeLayer","numberOfDraws","baseLayer","displayPos","lineH","offsetWidth","left","top","lineV","offsetHeight","showTooltip","removeTooltipDiv","span","createTextNode","someViewLayer","hasOne","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","scrollDiff","planeDiff","hasSetPos","getDivToWorldSizeRatio","maxWorldSize","getMaxWorldSize","maxSize","addScale","scaleStep","addTranslation","binderList","WindowLevelBinder","getEventType","getCallback","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","ColourMapBinder","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","setActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","removeLayerGroup","minRatio","hasRatio","binder","binderObj","elem","State","toJSON","app","drawController","version","toObject","fromJSON","json","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","getDataIds","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","URL","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","getStackSize","getCurrentStackIndex","command","redo","ToolboxController","toolList","enableShortcuts","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayerGroup","divId","layerGroupDivId","applySelectedTool","MultiProgressHandler","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","source","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","UrlsLoader","request","loader","onload","onloadend","load","options","onloadstart","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","errorCallback","abortCallback","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","algoName","numberOfData","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","DicomBufferToView","opt","modalityElement","dicomParser","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","dataIndex","decodedData","fullSize","algo","getSyntaxDecompressionName","convert","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","canLoadFile","file","url","forceLoader","isNameAccept","acceptHeader","acceptValue","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","tmpFile","File","loadFileAs","fileContentTypes","_opt","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","_mem","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","hasImageExt","DataURL","bytes","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","content","unzipPercent","async","then","JSZip","zip","FilesLoader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","loadFiles","files","loadURLs","loadImageObject","getLoadingDataIds","fileIO","urlIO","loadType","eventInfo","loadtype","isFirstItem","eventInfoItem","isfirstitem","DicomData","DataController","getNextDataId","getDataIdsFromSopUids","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","value1","subValue1","value2","subValue2","mergeObjects","getNumberToPrecision","createDefaultReplaceFormat","OverlayData","configs","addAppListeners","addItemMeta","dataUid","overlays","modElement","overlay","format","poElement","po0","po1","createOverlayData","DOM","infoKeys","createOverlayDataForDom","sliceOverlayData","mapFunc","isListening","removeAppListeners","ScrollSum","getSum","wheelDeltaY","deltaY","getSpinY","isTick","ScrollWheel","wheel","up","preventDefault","layerDetails","newPosition","i18n","t","props","mm","cm2","degree","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacing2D","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","getDefaultAnchor","radius","absRadius","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","ShapeEditor","setFactoryList","setShape","inshape","isFactoryGroup","getShape","isActive","setDrawEventCallback","enable","getLayer","disable","resetAnchors","anchor","setAnchorsActive","getAnchors","getStyle","parent","on","cancelBubble","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","DrawTrash","createTrashIcon","trashLine1","trashLine2","stage","invscale","changeChildrenColourOnTrashHover","eventPosition","shapeGroup","originalShapeColour","isOverTrash","changeGroupChildrenColour","tshape","trashHalfWidth","scaleX","trashHalfHeight","scaleY","changed","ROI","getPoint","addPoint","addPoints","defaults","labelText","arrow","circle","ellipse","freeHand","protractor","rectangle","roi","ruler","RoiFactory","getNPoints","getTimeout","fontSize","fontFamily","px","py","_viewController","kroi","textPos","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","bits","cost_functor","bucketCount","mask","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","Circle","centre","getCenter","getRadius","getSurface","getWorldSurface","mulABC","getRound","centerX","centerY","rSquare","maxY","transX","quantif","Ellipse","getA","getB","radiusRatio","rySquare","getEllipseIndices","centerValues","radiusI","radiusJ","radiusJ2","di","dj","jmax","jmin","imax","imin","Rectangle","getRealWidth","getRealHeight","getWidth","getHeight","Threshold","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","Sharpen","Sobel","RunFilterCommand","defaultToolList","diffX","diffY","pixelToIntensity","WindowLevelValues","mousedown","mousePoint","mousemove","mouseup","mouseout","touchstart","touchPoints","touchmove","touchend","dblclick","keydown","context","onKeydown","_bool","_features","Scroll","yMove","xMove","setTimeout","clearTimeout","features","displayTooltip","ZoomAndPan","tx","ty","#twoTouchUpdate","lineRatio","zoom","step","Opacity","op","Draw","getIntersection","selectedShape","timer","destroy","tmpPoints","viewLayerId","finalPoints","finalShapeGroup","mvcmd","body","cursor","dragStartPos","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","evt","eventPos","currentTarget","groupId","getOptionsType","autoShapeColour","shapeColour","shapeName","hasShape","mouseOverCursor","withScroll","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","setExtend","getExtend","#getIndex","simple","MagicWand","cs","icsl","extend","ini","jl","modifyThreshold","setPoints","onThresholdChange","getAbsoluteScale","movedpoint","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","tickLen","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2d0","p2d1","p2b","p2e","CircleFactory","mathShape","kShape","kLabel","_style","kcircle","right","bottom","centerPoint","kshadow","maxX","pixelLine","EllipseFactory","ellipseX","ellipseY","kellipse","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectX","rectY","rectWidth","rectHeight","krect","topLeft","topRight","bottomRight","bottomLeft","rect","rWidth","rHeight","RulerFactory","ThresholdFilter","SobelFilter","SharpenFilter","ViewConfig","wlPresetName","ToolConfig","AppOptions","dataViewConfigs","tools","binders","viewOnFirstLoadItem","overlayConfig","rootDocument","App","addNewImage","getMetaData","getToolboxController","appToolList","toolName","toolConstructor","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","studyUID","seriesList","seriesUID","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortAllLoads","abortLoad","initWLDisplay","getViewConfigs","excludeStarConfig","getViewConfig","getDataViewConfigs","setDataViewConfigs","addDataViewConfig","removeDataViewConfig","itemIndex","lg","vls","dls","updateDataViewConfig","configToUpdate","dataKeys","divIds","viewConfigs","viewConfig","getElementById","setLayerGroupsBinders","instances","cx","cy","translate","getJsonState","applyJsonState","jsonState","onResize","defaultOnKeydown","ctrlKey","shiftKey","resetDisplay","resetZoom","setTool","tool","getOverlayData","toggleOverlayListeners","isFirstLoadItem","eventMetaData","imageGeometry","getViewOrientation","getMatrixFromName","isBaseLayer","flipFlags","baseViewLayer","viewConfigOrientation","orientationCode","isViewUndefined","isViewAxial","isViewCoronal","isViewSagittal","flipOffset","flipScale","tagKeys","NumericValue","FloatingPointValue","RationalNumeratorValue","RationalDenominatorValue","MeasurementUnitsCodeSequence","MeasuredValue","numericValue","floatingPointValue","rationalNumeratorValue","rationalDenominatorValue","measurementUnitsCode","getDicomMeasuredValueItem","MeasuredValueSequence","NumericValueQualifierCodeSequence","NumericMeasurement","measuredValue","numericValueQualifierCode","getDicomNumericMeasurementItem","measurement","SopInstanceReference","getSopInstanceReference","ref","getDicomSopInstanceReferenceItem","ReferencedFrameNumber","ReferencedSOPSequence","ImageReference","referencedSOPSequence","referencedFrameNumber","referencedSegmentNumber","fiducialUID","getDicomImageReferenceItem","PixelOriginInterpretation","GraphicData","GraphicType","FiducialUID","SpatialCoordinate","graphicData","graphicType","pixelOriginInterpretation","getDicomSpatialCoordinateItem","scoord","ReferencedFrameofReferenceUID","SpatialCoordinate3D","referencedFrameofReferenceUID","getDicomSpatialCoordinate3DItem","RelationshipType","ValueType","ConceptNameCodeSequence","ConceptCodeSequence","ContentSequence","DateTime","Time","UID","PersonName","TextValue","ContinuityOfContent","valueTypeValueTagName","TEXT","DATE","TIME","DATETIME","UIDREF","PNAME","CONTAINER","DicomSRContent","valueType","conceptNameCode","relationshipType","contentSequence","getSRContent","getMeasuredValue","getNumericMeasurement","getImageReference","getSpatialCoordinate","getSpatialCoordinate3D","valueTagName","getDicomSRContentItem","contentItem","MaskSegmentHelper","segmentNumber","hasSegment","maskHasSegments","numbers","unknowns","addSegment","removeSegment","updateSegment","DeleteSegmentCommand","isValid","segmentnumber","ChangeSegmentColourCommand","newColour","MaskSegmentViewHelper","isHidden","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","resultFn","Scalar2D","Scalar3D"],"sourceRoot":""}